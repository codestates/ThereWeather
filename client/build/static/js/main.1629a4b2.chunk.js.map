{"version":3,"sources":["actions/index.js","components/MapBox.js","pages/Map.js","pages/Home.js","pages/BookMark.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","pages/Login.js","pages/PasswordEdit.js","pages/SignUp.js","pages/MyPost.js","pages/Write.js","pages/PostRead.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/FirstPage.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","changeSearchword","searchWord","type","payload","changeIsLogin","trueOrFalse","ImgContainer","styled","div","url","img","process","Location","props","dispatch","useDispatch","useSelector","state","itemReducer","kakao","window","console","log","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","arguments","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","positions","markers","i","lng","n","idx","infowindow","event","addListener","addMarkers","id","Container","className","HomeContainer","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","RightContainer","RightNav1","Home","useState","weatherData","setWeatherData","axios","then","res","weatherInfo","xLocation","yLocation","date","time","cloudy","temp","weatherType","Outer","BookMarkContainer","BookMarkPhoto","BookMarkList","BookMarkIcon","Pagination","PrevPage","PageNumber","NextPage","BookMark","start","end","current","updateCurrentPages","page","dispatchs","updateStartEndPages","total","Math","ceil","arr","push","target","slice","src","alt","icon","faHeart","size","onClick","alert","el","HeaderOuter","Wing","TitleAndLogo","isMobileLogo","Center","InputAndSubmit","Input","input","Buttons","Button","button","bgGrey","isText","Cancel","Buttons2","Header","isInput","history","useHistory","isLogin","searchEvent","setSearchEvent","onFocus","setOnFocus","onChange","e","value","placeholder","onComplete","roadAddress","style","left","top","border","faSearch","faSun","faCloud","faCloudRain","faPooStorm","faSnowflake","token","JSON","parse","localStorage","getItem","post","headers","Authorization","withCredentials","clear","MenuBar","faHome","faMapMarkerAlt","faPencilAlt","faUserAlt","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faAngleDoubleLeft","color","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","isModalOpen","setIsModalOpen","currentPosts","setcurrentPosts","method","delete","name","ToggleContainer","Desc","Toggle","isOn","setisOn","LoginOuter","LoginStyledArticle","article","LoginInputAndTitle","LoginInputText","LoginValidationListBox","ul","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","google","Button3","Button2","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","location","href","accessToken","split","authorization","accept","email","verified_email","res2","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","user_id","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","length","key","complevent","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","nickName","gender","user_photo","prevInput","prevText","password","assign","faGoogle","StyledLi","li","valid","edit","TextButton","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","modalSelected","setModalSelected","prev","test","newPwdValid","put","elem","SignUp","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","PostImg","PostInfo","Page","MyPost","updateCurrPage","updateStartEndPage","array","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Write","userInfo","curLocation","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","clickedWeatherButtons","setClickedWeatherButtons","sunny","rainy","snowy","breezy","windy","strong","cold","hot","isFilteringBtnActive","setIsFilteringBtnActive","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","nodeName","classList","contains","parentNode","includes","filter","btnName","btnListObj","weather","select","post_photo","post_title","post_content","wind","top_id","bottom_id","PostHeader","Title","BookmarkIcon","Profile","WeatherInfo","WeatherIcon","TodayCodi","Post","TopButton","PostRead","isOpen","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","scrollTo","behavior","currentTarget","faTshirt","blue","PostEdit","photoSrc","isEditModalOpen","setIsEditModalOpen","Contents","HalfPage","AnimatedP","p","duration","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","FirstPageContainer","FirstPage","App","userinfo","login","exact","path","to","initialState","selectWord","editPassword","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1629a4b2.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\"\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\"\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\"\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\"\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\"\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\"\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\"\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\"\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\"\n\n// actions creator functions\nexport const changeUser = (userinfo) => {\n    return {\n        type: CHANGE_USER_INFO,\n        payload: {\n            ...userinfo,\n        },\n    }\n}\nexport const updateCurrentPage = (current) => {\n    return {\n        type: UPDATE_CURRENT_PAGE,\n        payload: {\n            current,\n        },\n    }\n}\nexport const updateStartEndPage = (start, end) => {\n    return {\n        type: UPDATE_START_END_PAGE,\n        payload: {\n            start,\n            end,\n        },\n    }\n}\n\nexport const changeGender = (usergender) => {\n    return {\n        type: CHANGE_USER_GENDER,\n        payload: usergender,\n    }\n}\nexport const changeSearchword = (searchWord) => {\n    return {\n        type: CHANGE_SEARCH_WORD,\n        payload: searchWord,\n    }\n}\nexport const changeSelectword = (selectWord) => {\n    return {\n        type: CHANGE_SELECT_WORD,\n        payload: selectWord,\n    }\n}\nexport const changeIsLogin = (trueOrFalse) => {\n    return {\n        type: CHANGE_IS_LOGIN,\n        payload: trueOrFalse,\n    }\n}\n\nexport const changeUserPw = (pw) => {\n    return {\n        type: CHANGE_USER_PW,\n        payload: pw,\n    }\n}\n\nexport const changeCurLocation = (lat, lon) => {\n    return {\n        type: CHANGE_CUR_LOCATION,\n        payload: { lat: lat, lon: lon },\n    }\n}\n","import styled from \"styled-components\"\nimport React, { useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { changeSearchword, changeCurLocation } from \"../actions/index\"\nimport $ from \"jquery\"\n\nconst ImgContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\nconst ImgContainer2 = styled.img`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Location(props) {\n    const dispatch = useDispatch()\n    const { searchWord } = useSelector((state) => state.itemReducer)\n    const { kakao } = window\n\n    console.log(searchWord)\n    console.log(props)\n\n    useEffect(() => {\n        var container = document.getElementById(\"map\")\n        var options = {\n            center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n            level: 3,\n        }\n        var map = new kakao.maps.Map(container, options) //지도를 생성\n        var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n        map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT) //줌컨트롤 위치 조정\n        // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n\n                var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                    message = '<div style=\"padding:5px;\">현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n                // 마커와 인포윈도우를 표시합니다\n                displayMarker(locPosition, message)\n                console.log(locPosition)\n\n                console.log(lat) //위도\n                console.log(lon) //경도\n                dispatch(changeCurLocation(lat, lon))\n            })\n        } else {\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n            var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n                message = \"geolocation을 사용할수 없어요..\"\n\n            displayMarker(locPosition, message)\n        }\n        // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n        function displayMarker(locPosition, message) {\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: locPosition,\n            })\n\n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable,\n            })\n\n            // 인포윈도우를 마커위에 표시합니다\n            infowindow.open(map, marker)\n\n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n        }\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder()\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(searchWord, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                // var marker = new kakao.maps.Marker({\n                //     map: map,\n                //     position: coords,\n                // })\n                console.log(arguments)\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // var infowindow = new kakao.maps.InfoWindow({\n                //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n                // })\n                // infowindow.open(map, marker)\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                dispatch(changeSearchword(searchWord))\n                map.setCenter(coords)\n            }\n        })\n        //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n            minLevel: 9, // 클러스터 할 최소 지도 레벨\n        })\n\n        // 데이터를 가져오기 위해 jQuery를 사용합니다\n        // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n        $.get(url + \"/post/location\", function (data) {\n            // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n            // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n            console.log($(data.positions))\n            var markers = $(data.positions).map(function (i, position) {\n                return new kakao.maps.Marker({\n                    position: new kakao.maps.LatLng(position.lat, position.lng),\n                })\n            })\n            console.log(markers)\n            console.log($(data.positions)[0].content)\n            $(data.positions).map((n, idx) => {\n                console.log(n)\n                var iwContent = `<img src=\"https://www.water.or.kr/images/egovframework/life/weast/weast044_01.jpg\" style=\"padding:25px; width:200px;\">${\n                        $(data.positions)[n].content\n                    }</img>`, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                    iwRemoveable = true // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n                // 인포윈도우를 생성합니다\n                var infowindow = new kakao.maps.InfoWindow({\n                    content: iwContent,\n                    removable: iwRemoveable,\n                })\n                kakao.maps.event.addListener(markers[n], \"click\", function () {\n                    // 마커 위에 인포윈도우를 표시합니다\n                    infowindow.open(map, markers[n])\n                })\n            })\n\n            clusterer.addMarkers(markers)\n        })\n    }, [\n        kakao.maps.LatLng,\n        kakao.maps.Marker,\n        kakao.maps.event,\n        kakao.maps.Map,\n        searchWord,\n    ])\n\n    return <ImgContainer id=\"map\"></ImgContainer>\n}\n\n// useEffect(() => {\n//     var container = document.getElementById(\"map\")\n//     var options = {\n//         center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n//         level: 9,\n//     }\n//     var map = new kakao.maps.Map(container, options) //지도를 생성\n//     var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n//     map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT) //줌컨트롤 위치 조정\n//     // 지도를 클릭한 위치에 표출할 마커입니다\n//     // var marker = new kakao.maps.Marker({\n//     //     // 지도 중심좌표에 마커를 생성합니다\n//     //     position: map.getCenter(),\n//     // })\n//     // 지도에 마커를 표시합니다\n//     // marker.setMap(map)\n//     //클릭이벤트 함수\n//     kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n//         // 클릭한 위도, 경도 정보를 가져옵니다\n//         var latlng = mouseEvent.latLng\n//         // 마커 위치를 클릭한 위치로 옮깁니다\n//         // marker.setPosition(latlng)\n//         //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n//         var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n//         message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n//         console.log(message)\n//     })\n\n//     // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n//     if (navigator.geolocation) {\n//         // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n//         navigator.geolocation.getCurrentPosition(function (position) {\n//             var lat = position.coords.latitude, // 위도\n//                 lon = position.coords.longitude // 경도\n\n//             var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n//                 message = '<div style=\"padding:5px;\">현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n//             // 마커와 인포윈도우를 표시합니다\n//             displayMarker(locPosition, message)\n//             console.log(locPosition)\n\n//             console.log(lat) //위도\n//             console.log(lon) //경도\n//             dispatch(changeCurLocation(lat, lon))\n//         })\n//     } else {\n//         // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n//         var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n//             message = \"geolocation을 사용할수 없어요..\"\n\n//         displayMarker(locPosition, message)\n//     }\n\n//     // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n//     function displayMarker(locPosition, message) {\n//         // 마커를 생성합니다\n//         var marker = new kakao.maps.Marker({\n//             map: map,\n//             position: locPosition,\n//         })\n\n//         var iwContent = message, // 인포윈도우에 표시할 내용\n//             iwRemoveable = true\n\n//         // 인포윈도우를 생성합니다\n//         var infowindow = new kakao.maps.InfoWindow({\n//             content: iwContent,\n//             removable: iwRemoveable,\n//         })\n\n//         // 인포윈도우를 마커위에 표시합니다\n//         infowindow.open(map, marker)\n\n//         // 지도 중심좌표를 접속위치로 변경합니다\n//         map.setCenter(locPosition)\n//     }\n\n//     // 주소-좌표 변환 객체를 생성합니다\n//     var geocoder = new kakao.maps.services.Geocoder()\n\n//     // 주소로 좌표를 검색합니다\n//     geocoder.addressSearch(searchWord, function (result, status) {\n//         // 정상적으로 검색이 완료됐으면\n//         if (status === kakao.maps.services.Status.OK) {\n//             var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n//             // 결과값으로 받은 위치를 마커로 표시합니다\n//             // var marker = new kakao.maps.Marker({\n//             //     map: map,\n//             //     position: coords,\n//             // })\n//             console.log(arguments)\n//             // 인포윈도우로 장소에 대한 설명을 표시합니다\n//             // var infowindow = new kakao.maps.InfoWindow({\n//             //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n//             // })\n//             // infowindow.open(map, marker)\n\n//             // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n//             dispatch(changeSearchword(searchWord))\n//             map.setCenter(coords)\n//         }\n//     })\n//     // 마커찍기\n//     // var positions = [\n//     //     {\n//     //         title: \"남산 등산 시작 하는 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.54985519962201,\n//     //             126.98760278488614\n//     //         ),\n//     //     },\n//     //     {\n//     //         title: \"남산 중턱에 있는 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.55097273746865,\n//     //             126.990895747622\n//     //         ),\n//     //     },\n//     //     {\n//     //         title: \"남산 동쪽에 있는 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.54959434528029,\n//     //             126.99286497772725\n//     //         ),\n//     //     },\n//     //     {\n//     //         title: \"남산 정상 도착한 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.548621124373355,\n//     //             126.99080550321914\n//     //         ),\n//     //     },\n//     // ]\n//     // var imageSrc =\n//     //     \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"\n//     // for (var i = 0; i < positions.length; i++) {\n//     //     // 마커 이미지의 이미지 크기 입니다\n//     //     var imageSize = new kakao.maps.Size(24, 35)\n\n//     //     // 마커 이미지를 생성합니다\n//     //     var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize)\n\n//     //     // 마커를 생성합니다\n//     //     var marker = new kakao.maps.Marker({\n//     //         map: map, // 마커를 표시할 지도\n//     //         position: positions[i].latlng, // 마커를 표시할 위치\n//     //         title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n//     //         image: markerImage, // 마커 이미지\n//     //     })\n//     // }\n//     // 마커 클러스터러를 생성합니다\n//     var clusterer = new kakao.maps.MarkerClusterer({\n//         map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n//         averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n//         minLevel: 9, // 클러스터 할 최소 지도 레벨\n//     })\n\n//     // 데이터를 가져오기 위해 jQuery를 사용합니다\n//     // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n//     $.get(url + \"/post/location\", function (data) {\n//         // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n//         // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n//         // // console.log($(data.positions))\n//         // var markers = $(data.positions).map((i, position) => {\n//         //     return new kakao.maps.Marker({\n//         //         position: new kakao.maps.LatLng(position.lat, position.lng),\n//         //     })\n//         // })\n//         // console.log(markers)\n//         // // 클러스터러에 마커들을 추가합니다\n//         // clusterer.addMarkers(markers)\n//         //////////////////////////////////////////////////////////\n//         ////////////////////////////////////////////////////\n//     })\n// }, [\n//     kakao.maps.LatLng,\n//     kakao.maps.Marker,\n//     kakao.maps.event,\n//     kakao.maps.Map,\n//     searchWord,\n// ])\n","import React from \"react\"\n// import { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\n\nconst Container = styled.div`\n    // background-color: #f1319e;\n    width: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 100%;\n    }\n`\n\nexport default function Map() {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport axios from \"axios\";\n// import Loading from \"./Loading\";\n\nconst HomeContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nbackground-color: var(--page-bg-color);\nul {\n  list-style: none;\n}\n`;\n\nconst LeftContainer1 = styled.div`\ndisplay: flex;\ngap: 0.1rem;\nflex-direction: row;\nwidth: 50vw;\nflex-wrap: wrap;\n.weatherInfo {\n    text-align: center;\n  }\n.codiInfo {\n  text-align: center;\n}\n`;\n\n\nconst LeftNav1 = styled.nav`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 5px;\n    padding: 10px;\n`\n\nconst LeftNav2 = styled(LeftNav1)``\n\nconst LeftNav3 = styled(LeftNav1)``\n\nconst RightContainer = styled.div`\n  display: grid;\n  height:100vh;\n  width: 80vw;\n  grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr 2.3fr;\n  grid-template-columns: 1fr 1fr;\n  grid-area: \n  \"nav nav\"\n  \"main main\"\n  \"main main\"\n  ;\n  grid-gap:0.1rem;\n  transition: all 0.01s ease-in-out;\n  //(max-width: 1081px)\n  @media (max-width: 600px) {\n    grid-template-rows: 0.5fr 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      \"nav\"\n      \"main\"\n  }\n  .userPost {\n    text-align: center;\n  }\n`;\n\n\nconst RightNav1 = styled.nav`\n    margin-top: 0.8rem;\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \"nav nav\";\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n`\n// const RightNav2 = styled(RightNav1)``;\n\nconst url = process.env.REACT_APP_LOCAL_URL;\n\nexport default function Home() {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    const [weatherData, setWeatherData] = useState([])\n  useEffect(() => {\n    axios.get(url)\n    .then((res) =>  \n     //console.log(res)\n     //강수형태(날씨) - 없음(0), 비(1), 비/눈(2), 눈(3), 소나기(4)\n     //하늘상태 - 맑음(1), 구름많음(3), 흐림(4)\n      {\n        const { xLocation, yLocation, date, time, cloudy, temp, weatherType } = res.data.weatherInfo\n        setWeatherData({ xLocation, yLocation, date, time, cloudy, temp, weatherType })\n        //weatherType === 0 맑음 (강수량0)\n      }\n    )\n  }, [])\n   \n\n    return (\n        <div className=\"homecontainer\">\n            {/* <Loading /> */}\n            <HomeContainer>\n                <LeftContainer1>\n                    <LeftNav1>\n                        00구 주민예보\n                        <div className=\"weatherInfo\"></div>\n                    </LeftNav1>\n                    <LeftNav2>\n                        기상청 일기예보\n                        <div className=\"weatherInfo\">\n                        <ul>\n                          <li>x위치:{weatherData.xLocation}</li>\n                          <li>y위치:{weatherData.yLocation}</li>\n                          <li>기준 예보시각:{weatherData.time}</li>\n                          <li>날짜:{weatherData.date}</li>\n                          <li>하늘상태:{weatherData.cloudy === 0 ? null : \"맑음\"}</li>\n                          <li>현재기온:{weatherData.temp}</li>\n                          <li>날씨:{weatherData.weatherType === 0 ? null : \"해\"}</li>\n                        </ul> \n                        </div>\n                    </LeftNav2>\n                    <LeftNav3>\n                        00구 날씨 기반 추천 코디\n                        <div className=\"codiInfo\"></div>\n                    </LeftNav3>\n                </LeftContainer1>\n\n                <RightContainer>\n                    <RightNav1>00구 주민예보글</RightNav1>\n                    {/* <RightNav2>오른쪽2</RightNav2> */}\n                    <div className=\"userPost\">1</div>\n                    <div className=\"userPost\">2</div>\n                    <div className=\"userPost\">3</div>\n                    <div className=\"userPost\">4</div>\n                    <div className=\"userPost\">5</div>\n                    <div className=\"userPost\">6</div>\n                    <div className=\"userPost\">7</div>\n                    <div className=\"userPost\">8</div>\n                </RightContainer>\n            </HomeContainer>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\"\n//import { updateCurrentPage, updateStartEndPage } from \"../actions/index\"\nimport { UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE } from \"../actions/index\"\n\nconst Outer = styled.div`\n\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  min-height: 100vh;\n  padding-top: 100px;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 3vh;\n  }\n`\n\n// 그리드\nconst Container = styled.div` \n  display: grid;\n  /* height: 83vh; */\n  gap: 3rem;\n  margin-left: 3vw;\n  margin-right: 3vw;\n  \n  justify-content: center;\n  align-items: center;\n  grid-template-rows: 3fr 3fr;\n  grid-template-columns: 5fr 5fr;\n  grid-template-areas: \n  \"div div\"\n  \"div div\";\n  /* overflow: auto; */\n  // (max-width: 600px)\n\n  @media (max-width: 1081px) {\n    gap: 2rem;\n    grid-template-rows: 1fr 1fr 1fr 1fr;\n    grid-template-columns: 5fr;\n    grid-template-areas: \n    \"div\"\n    ;\n  }\n`;\n\nconst BookMarkContainer = styled.div`\n  background-color: rgba(255, 255, 255, 0.6);\n  display: flex;\n  gap: 0.1rem;\n  justify-content: space-around;\n`;\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n  flex-basis: 30rem;\n  .postPicture{\n    margin: 1rem 2rem;\n    padding: 0;\n    /* border: solid 1px black; */\n    height: 25vh;\n    align-items: center;\n  }\n  .postImg {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media screen and (max-width: 1081px) {\n    .postPicture{\n      height: 20vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    .postPicture{\n      margin: 0;\n    }\n  }\n`;\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n  margin: 1rem;    \n  line-height: 3rem;\n  flex-direction: column;\n  flex-basis: 15rem;\n  justify-content: flex-start;\n\n  .postTitle {\n    font-weight: bold;\n    font-size: 2.5rem;\n  }\n  .postDate {\n    font-size: 2rem;\n  }\n  .postWeather {\n    /* font-size: 1.5rem; */\n    width: 4rem;\n    height: 4rem;\n  }\n  img{\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 1081px) {\n    line-height: 2rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    margin: 0.1rem 0 0 0.5rem;\n    line-height: 1.4rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n`;\n\nconst BookMarkIcon = styled.div`\n  flex-direction: column;\n  flex-basis: 10.5rem;\n  text-align: end;\n  margin: 1rem;\n  /* padding: 1rem; */\n\n  @media screen and (max-width: 375px) {\n    margin: 0;\n    padding: 0 0.3rem 0 0;    \n  }\n`\n\n// 페이지네이션\nconst Pagination = styled.div`\n  background-color: var(--page-bg-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10vh;\n  /* margin: 2rem; */\n  list-style: none;\n  \n  button{\n    font-size: 1.5rem;\n    margin: 0 1vw;;\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 2vh;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 5vh;\n    padding-bottom: 3vh;\n    button{\n      font-size: 1rem;\n    }\n  } \n`\n\n\nconst PrevPage = styled.div``\n\nconst PageNumber = styled.div`\n  li {\n    float: left;\n    margin: 1rem;\n  }\n  button{\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    li{\n      margin: 0;\n    }\n    button{\n      margin: 0 2vw;\n      font-size: 1rem;\n    }\n  }\n`\n\nconst NextPage = styled.div``;\n\nexport default function BookMark() { \n  \n  // 페이지네이션\n  const state = useSelector(state => state.itemReducer);\n  const { start, end, current } = state; \n  const dispatch = useDispatch();\n  // const updateCurrentPages = dispatch(updateCurrentPage);\n  // const updateStartEndPages = dispatch(updateStartEndPage);\n  const updateCurrentPages = page => (dispatchs) => {\n    dispatch({ type: UPDATE_CURRENT_PAGE, payload: page })\n  }\n  const updateStartEndPages = (start, end) => (dispatchs) => {\n    dispatch({ type: UPDATE_START_END_PAGE, payload: { start, end } })\n  }\n\n  const per = 4\n  //테스트중 갯수 20개로 고정\n  const total = Math.ceil(20 / per)\n\n  const arr = []\n  for (let i = 0; i < total; i++) {\n      arr.push(i + 1)\n  }\n  const target = arr.slice(start, end)\n\n  return (\n    <Outer>\n      <Container>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n\n\n        {/* <Pagenation>\n          <PrevPage>이전</PrevPage>\n          <NextPage>다음</NextPage>\n        </Pagenation> */}\n      </Container>\n\n      <Pagination>\n        <PrevPage>\n          <li className=\"prevPage\">\n            <button className=\"previousPages\" onClick={() => {\n              if(current === 1) return alert('첫번째 페이지입니다')\n              if(current % 10 === 1) {\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPages(s, e);\n              }\n              updateCurrentPages(current - 1);\n            }}>\n              이전\n            </button>\n          </li>\n        </PrevPage>\n\n        <PageNumber>\n        {target.map(el => (\n          <li className=\"pageNum\" key={el}>\n            <button className=\"pageNumbers\" onClick={() => {updateCurrentPages(el)}}>\n              {el}\n            </button>\n          </li>\n        ))}\n        </PageNumber>\n        \n        <NextPage>\n        <li className=\"nexPage\">\n            <button className=\"nextPages\" onClick={() =>{\n              if(current % 10 === 1) {\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPages(s, e);\n              }\n              updateCurrentPages(current + 1);\n            }}>\n              다음\n            </button>\n          </li>\n        </NextPage>\n      </Pagination>\n    </Outer>\n  )\n\n\n}","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin, changeSearchword } from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100vw;\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: WHTIE;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n\n    h1 {\n        font-weight: bold;\n        font-size: 2.5rem;\n        margin: 0;\n        padding: 0;\n    }\n\n    @media screen and (min-width: 1081px) {\n        width: 100vw;\n        height: 125px;\n        background-color: white;\n        border-bottom: 1px solid #757575;\n        flex-direction: row;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        height: 30%;\n    }\n`\n\nconst Wing = styled.div`\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst TitleAndLogo = styled.div`\n    display: ${(props) => (props.isMobileLogo ? \"flex\" : \"none\")};\n    justify-content: center;\n    align-items: center;\n\n    & img {\n        width: 20%;\n        margin-right: 1rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst Center = styled.div`\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        flex-growth: 2;\n        width: 60vw;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    /* flex-growth: 1; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    font-family: \"BMDOHYEON\";\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: black;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n`\nconst SearchBarAndDaumPost = styled.div`\n    // display: flex;\n    // flex-direction: row;\n    position: relative;\n    margin: \"100px solid green\";\n`\nconst DaumPostcodeWrap = styled.div`\n    height: 3.5rem;\n    width: 100%;\n    // padding-right: 2.5rem;\n`\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.4rem;\n    font-size: 1rem;\n`\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Header({ isInput, isMobileLogo }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    const [onFocus, setOnFocus] = useState(false)\n\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <HeaderOuter className=\"header\">\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n                    src=\"img/img4.png\"\n                    alt=\"logo\"\n                />\n                <h1 onClick={() => history.push(\"/\")}>거기날씨</h1>\n            </TitleAndLogo>\n\n            {isInput ? (\n                <Center className=\"headerCenter\">\n                    <InputAndSubmit className=\"inputAndSubmit\">\n                        <Input\n                            // onClick={(e) => console.log(e)}\n                            onChange={(e) => setSearchEvent(e.target.value)}\n                            type=\"text\"\n                            placeholder=\"위치 검색\"\n                            value={searchEvent}\n                            // ref={inputRef}\n                            // onClick={onRest}\n                            onFocus={(e) => setOnFocus(true)}\n                        />\n                        {/* <SearchBarAndDaumPost> */}\n                        {/* <DaumPostcodeWrap> */}\n                        {onFocus ? (\n                            <DaumPostcode\n                                onComplete={handleComplete}\n                                style={{\n                                    position: \"absolute\",\n                                    left: \"332px\",\n                                    top: \"5px\",\n                                    border: \"1px solid pink\",\n                                    // display: onFocus ? \"none\" : \"true\",\n                                    // left: \"0\",\n                                    // height: \"80%\",\n                                    // width: \"100%\",\n                                }}\n                            />\n                        ) : (\n                            <></>\n                        )}\n                        {/* </DaumPostcodeWrap> */}\n                        {/* </SearchBarAndDaumPost> */}\n                        <Buttons2 bgGrey>\n                            {onFocus ? (\n                                <Cancel onClick={() => setOnFocus(false)}>\n                                    Cancel\n                                </Cancel>\n                            ) : (\n                                <FontAwesomeIcon\n                                    onClick={() =>\n                                        dispatch(changeSearchword(searchEvent))\n                                    }\n                                    icon={faSearch}\n                                />\n                            )}\n                        </Buttons2>\n                    </InputAndSubmit>\n                    <Buttons className=\"headerButtons\">\n                        <Button>\n                            <FontAwesomeIcon icon={faSun} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faCloud} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faCloudRain} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faPooStorm} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faSnowflake} />\n                        </Button>\n                    </Buttons>\n                </Center>\n            ) : (\n                <Center className=\"headerCenter\" />\n            )}\n\n            {isLogin ? (\n                <Wing className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button className=\"login\" onClick={logoutBtnHandler} isText>\n                        로그아웃\n                    </Button>\n                    <Button\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        마이페이지\n                    </Button>\n                </Wing>\n            ) : (\n                <Wing className=\"loginAndSingupButtons\">\n                    <Button\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        로그인\n                    </Button>\n                    <Button\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        회원가입\n                    </Button>\n                </Wing>\n            )}\n        </HeaderOuter>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faHome,\n    faHeart,\n    faMapMarkerAlt,\n    faPencilAlt,\n    faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\"\nconst Outer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    z-index: 100;\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    @media screen and (min-width: 1081px) {\n        width: 1080px;\n    }\n`\n\nconst Buttons = styled.div`\n    background-color: WHITE;\n    height: 70px;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 101;\n\n    @media screen and (min-width: 1081px) {\n        position: fixed;\n        background-color: white;\n        border-top: 1px solid black;\n        border-left: 1px solid black;\n        width: 400px;\n    }\n`\n\nconst Button = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n`\n\nexport default function MenuBar() {\n    const history = useHistory()\n    return (\n        <Outer className=\"menuBar\">\n            <Buttons>\n                {/*\n                    <Link to='/mainpage'>\n                    <Button>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Button>\n                    </Link>\n                */}\n                <Button>\n                    <FontAwesomeIcon\n                        onClick={() => history.push(\"/homeorlogin\")}\n                        icon={faHome}\n                    />\n                </Button>\n                <Button>\n                    <FontAwesomeIcon\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                        icon={faHeart}\n                    />\n                </Button>\n                <Button>\n                    <FontAwesomeIcon\n                        onClick={() => history.push(\"/map\")}\n                        icon={faMapMarkerAlt}\n                    />\n                </Button>\n                <Button>\n                    <FontAwesomeIcon\n                        onClick={() => history.push(\"/writeorlogin\")}\n                        icon={faPencilAlt}\n                    />\n                </Button>\n                <Button>\n                    <FontAwesomeIcon\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                        icon={faUserAlt}\n                    />\n                </Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: #fef9ef;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n`\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 40vw;\n    height: 10vh;\n    text-align: center;\n    p {\n        font-size: 2.5rem;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        background-color: #f4b567;\n        color: #ffffff;\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n`\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: #fef9ef;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n`\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 40vw;\n    height: 10vh;\n    text-align: center;\n    p {\n        font-size: 2.5rem;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        background-color: #f4b567;\n        color: #ffffff;\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n`\n\nexport default function More() {\n    const history = useHistory()\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .3rem;\n  font-size: 1.2rem;\n  background-color: var(--modal-confirm-button-bg);\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faAngleDoubleLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Button = styled.button`\n    display: none;\n    \n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        top: 1.5vh;\n        position: fixed;\n        border-radius: 50%;\n        z-index:100;\n        .fa-fw {\n            font-size: 55px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 40px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faAngleDoubleLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport GoBackButton from  \"../components/GoBackButton\";\n\nconst Outer = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    /* height: auto; */\n    min-height: 100vh;\n    position: relative;\n    display: flex;\n    padding-bottom: 100px;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n    }\n`\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n    width: 30%;\n    padding: 20vh 1vw 1vh 1vw;\n    text-align: center;\n\n    span {\n        display: flex;\n        margin: 2vh 2vw;\n        justify-content: center;\n        font-size: 1.5rem;\n    }\n\n    button {\n        color: #336fc9;\n        font-size: 1.5rem;\n        margin-top: 1vh;\n    }\n\n    @media screen and (max-width: 1081px) {\n        border-bottom: 1px solid #aaa;  // 구분선 추가\n        margin: 0 auto;\n        margin-top: 4vh;\n        width: 50%;\n        padding: 0 0 3vh 0;\n\n        span {\n            display: flex;\n            margin-top: 2vh;\n            justify-content: center;\n        }\n    }\n\n    @media screen and (max-width: 375px) {\n        padding-bottom: 4vh;\n        span{\n            font-size: 1rem;\n            margin: 1vh 1vw;\n        }\n        button{\n            font-size: 1rem;\n        }\n    }    \n`\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n    width: 200px;\n    height: 200px;\n    padding: 10px 10px;\n    border-radius: 50%;\n    background-color: #ffffff;\n\n    @media screen and (max-width: 375px) {\n        width: 7rem;\n        height: 7rem;\n    }\n`\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-end;\n    text-decoration: none;\n\n    button {\n        font-size: 1.2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 50vw;\n        align-items: center;\n        height: 10vh;\n        position: absolute;\n        bottom: 0;\n    }\n    @media screen and (max-width: 375px) {\n        height: 20vh;\n        justify-content: space-between;\n        button{\n            font-size: 1rem;\n        }\n    }\n`\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n    width: 100vw;\n    padding: 2vh 3vw 2vh 5vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 200px 1fr 1fr;\n\n    row-gap: 10px; /* row의 간격을 10px로 */\n    column-gap: 20px; /* column의 간격을 20px로 */\n\n    .item:nth-child(1) {\n        background-color: #fef9ef;\n        border: none;\n        grid-column: 1 / 4;\n        grid-row: 1 / 2;\n    }\n\n    div {\n        background-color: rgba(255, 255, 255, 0.5); // 추가\n    }\n    div:hover {\n        border: 1px solid #a2d2ff;\n    }\n    img{\n        width: 100%;\n        height: 100%;\n    }\n    .more {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n    }\n    p {\n        font-size: 3rem;\n        margin: 0 auto;\n        font-weight: bold;\n    }\n    .moreView {\n        font-size: 1.5rem;\n        color: #336fc9;\n        width: 5vw;\n    }\n\n    @media screen and (max-width: 1380px) {\n        .moreView {\n            font-size: 1.4rem;\n            width: 6vw;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        margin-bottom: 10vh;\n        padding: 0;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 150px 300px 300px;\n        row-gap: 5px;\n        column-gap: 3px;\n\n        p {\n            font-size: 3rem;\n        }\n        .item {\n            margin: 0.5vh;\n        }\n        .moreView {\n            width: 7vw;\n        }\n    }\n\n    @media screen and (max-width: 375px) {\n        padding-left: 2vw;\n        padding-right: 2vw;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 80px 150px 150px 150px;\n        .item:nth-child(1) {\n            background-color: #fef9ef;\n            border: none;\n            grid-column: 1 / 3;\n            grid-row: 1 / 2;\n        }\n        p {\n            font-size: 1.8rem;\n        }\n        .moreView {\n            font-size: 1rem;\n            width: 15vw;\n            height: 3rem;\n        }\n    }\n`\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function MyPage() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [removeUser, setremoveUser] = useState(false)\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const [currentPosts, setcurrentPosts] = useState([])\n    // 게시물 데이터 조회\n    useEffect(() => {\n        axios({\n            url: url + \"/mypage\",\n            method: \"get\",\n            withCredentials: true,\n        }).then((res) => {\n            setcurrentPosts(res.data)\n            console.log(currentPosts);\n        }) \n    }, [])\n\n    const removeUserInfo = () => {\n        setIsModalOpen(true)\n    }\n\n    const modalYesButtonHandlers = () => {\n        //console.log('회원탈퇴 완료');\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .delete(url + \"/removeuser\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `token ${token}`,\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                localStorage.clear(token)\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n        //setIsModalOpen(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n    const modalCloseButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n\n    // 게시물사진 클릭했을 때\n    const postClickHandler = () => {\n        //test\n        history.push(\"/postread\")\n        // 해당 게시물의 id, user_id\n    }\n\n    // 더보기\n    const moreViewHandler = () => {\n        history.push(\"/mypost\")\n\n    }\n\n    return (\n        <Outer>\n            <GoBackButton/>\n            <ProfileArea>\n                <ProfileImg src=\"img/default-user.png\" />\n                <span>{\"김코딩\"}</span>\n                <span>성별 : {\"남성\"}</span>\n                <span>나의 위치 : {\"서울시 종로구\"}</span>\n                <button>정보수정</button>\n                <ButtonArea>\n                    <button onClick={() => history.push(\"/editpassword\")}>\n                        비밀번호 수정\n                    </button>\n                    <button onClick={removeUserInfo}>회원탈퇴</button>\n                    {isModalOpen === false ? null : (\n                        <ModalConfirm\n                            yesHandler={modalYesButtonHandlers}\n                            noHandler={modalNoButtonHandler}\n                            closeHandler={modalCloseButtonHandler}\n                        >\n                            <p>탈퇴하시겠습니까?</p>\n                            <p>이유를 선택해 주세요</p>\n                            <select name=\"pets\" id=\"pet-select\">\n                                <option value=\"\">선택</option>\n                                <option value=\"notUseful\">\n                                    사용을 많이 하지 않음\n                                </option>\n                                <option value=\"inconvenientDesign\">\n                                    디자인이 불편함\n                                </option>\n                                <option value=\"otherOptions\">\n                                    다른 앱을 이용하기 위해\n                                </option>\n                                <option value=\"andSoForth\">기타</option>\n                            </select>\n                        </ModalConfirm>\n                    )}\n                </ButtonArea>\n            </ProfileArea>\n\n            <GridArea>\n                <div className=\"item more\">\n                    <p>내가 쓴 예보</p>\n                </div>\n                <div className=\"item\" onClick={postClickHandler}>\n                    <img src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n                </div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                {}\n                <button\n                    className=\"moreView\"\n                    onClick={moreViewHandler}\n                >\n                    더 보기\n                </button>\n            </GridArea>\n        </Outer>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\n\n/*\n  TODO\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우 (버튼과 연결?)\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst LoginInputAndTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #256ad7;\n    border-radius: 1rem;\n    > span {\n        margin: 0.25rem;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n    font-family: \"BMDOHYEON\";\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#419300\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = \"http://localhost:3000\"\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    if (!url) {\n        url = \"https://thereweather.space\"\n        clientUrl = \"https://there-weather.vercel.app\"\n    }\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] =\n        useState(\"아이디를 입력하세요.!\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    useEffect(() => {\n        console.log(\"나는 login.js\")\n\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        {/* <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호\"\n                                    onChange={idOnChangeHanlder(\"pwInput\")}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.pwInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호 확인</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwCheckInput\"\n                                    placeholder=\"비밀번호 확인\"\n                                    onChange={idOnChangeHanlder2}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{pwCheckInputMessage}</li>\n                            </ValidationListBox>\n                        </StyledArticle> */}\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <h2>로그인</h2>\n                    <div className=\"Login--center\">\n                        <LoginStyledArticle className=\"id\">\n                            <LoginInputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <LoginInputText\n                                    type=\"text\"\n                                    name=\"idInput\"\n                                    placeholder=\"아이디를 입력하세요\"\n                                    value={idInput}\n                                    onChange={loginidOnChangeHanlder}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"idValidationList\">\n                                <li>{idInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n\n                        <LoginStyledArticle className=\"password\">\n                            <LoginInputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <LoginInputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                    value={pwInput}\n                                    onChange={pwOnChangeHandler}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"pwValidationList\">\n                                <li>{pwInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n\n                        {/* 소셜로그인 */}\n                        <LoginButton onClick={googleLoginButtonHandler} google>\n                            <FontAwesomeIcon icon={faGoogle} />\n                            <span>구글 로그인</span>\n                        </LoginButton>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport axios from \"axios\";\nimport { changeUserPw } from \"../actions/index\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\n\n/*\n  TODO - 비밀번호 수정 페이지\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [x] 함수로 구현\n      - [x] (둘 다) input이 없는 경우 - li\n      - [x] (새 비밀번호) 조건에 안 맞는 경우 - li\n      - [] (현재 비밀번호) 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n  [] 최종 결과 모아서 악시오스 요청\n*/\n\nconst Outer = styled.section`\n  position: relative;\n  width: 100vw;\n  /* height: var(--mobile-page-height); */\n  min-height: 100vh;\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    text-align: center;\n    font-size: 2rem;\n    font-weight: bold;\n    margin-bottom: 2rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    /* height: calc(100vh - 125px); */\n\t}\n`;\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst InputAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n\n  h3 {\n    font-size: 1.4rem;\n    margin: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst InputText = styled.input`\n  min-width: 150px;\n  width: 30vw;\n  font-size: 1.2rem;\n  padding: .5rem;\n`;\n\nconst ValidationListBox = styled.ul`\n  list-style: none;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n`;\n\nconst StyledLi = styled.li`\n  height: 1.2rem;\n  padding: 0 1.5rem;\n  color: ${ props => props.valid ? `var(--font-validation-positive)` : `var(--font-validation-negative)` };\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem auto;\n`;\n\nconst Button = styled.button`\n  width: 25vw;\n  min-width: 50px;\n  max-width: 200px;\n  margin: 1rem;\n  padding: .8rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: white;\n  background-color: ${ props => props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)` };\n  border-radius: 1rem;\n`;\n\nconst TextButton = styled.button`\n  align-self: flex-end;\n  margin: 1rem 3rem;\n  font-size: 1rem;\n  color: grey;\n  text-decoration: underline;\n`;\n\n\nexport default function PasswordEdit() {\n  const { password } = useSelector((state) => state.itemReducer)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n\n  const [ curPwd, setCurPwd ] = useState('');\n  const [ newPwd, setNewPwd ] = useState('');\n  const [ curPwdInputWarning, setCurPwdInputWarning ] = useState('비밀번호를 입력해주세요.');\n  const [ newPwdInputWarning, setNewPwdInputWarning ] = useState({\n    isNoInput: '비밀번호를 입력해주세요.',\n    isTooShort: '8자 이상이어야 합니다.',\n    isWrongType: '숫자와 문자를 포함해야 합니다.'\n  });\n  const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning;\n  const [ isValid, setIsValid ] = useState('');\n\n  const validationReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    // 정규식 : 문자/숫자/특수문자 모두 포함, 8자 이상\n\n  const curInputHandler = (e) => {\n    setCurPwd(prev => e.target.value);\n    // console.log(e.target.value)\n    if (e.target.value.length === 0) {\n      setCurPwdInputWarning(prev => '비밀번호를 입력해주세요.');\n    } else {\n      setCurPwdInputWarning(prev => '');\n    }\n  }\n\n  const newInputHandler = (e) => {\n    setNewPwd(prev => e.target.value);\n\n    // 유효성 검사\n    if (e.target.value.length === 0) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: '비밀번호를 입력해주세요.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: ''}\n      });\n    }\n\n    if (!validationReg.test(e.target.value)) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: '문자, 숫자, 특수문자가 모두 포함되어야 합니다.'}\n      });\n      setIsValid(prev => '')\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: ''}\n      });\n      setIsValid(prev => '사용 가능합니다.')\n    }\n\n    if (e.target.value.length < 8) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: '8자 이상이어야 합니다.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: ''}\n      });\n    }\n  }\n\n  // 버튼 클릭 이벤트\n  const editButtonHandler = (e) => {\n    // e.prevntDefault()\n\n    let newPwdValid = validationReg.test(newPwd)\n    console.log('새 비밀번호 유효성 검사 결과', newPwdValid);\n    // TODO\n    // 클라이언트 로컬스토리지에 있는 토큰을 찾아서 \n    // 헤더에 담아서 서버에 전달 \n    // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\")) //문자열벗긴 토큰\n    //console.log(token) //토큰찾음\n    axios.put(\"http://localhost/password\", \n    { password: newPwd }, \n    { headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `token ${token}`,\n    },\n     withCredentials: true })\n     .then((res) => {\n      // console.log(res.data)\n      dispatch(changeUserPw(true))\n      history.push(\"/mypage\")\n     })\n  }\n\n  const cancelButtonHandler = (e) => {\n    console.log('취소 버튼 동작 확인')\n    setCurPwd(prev => '');\n    setNewPwd(prev => '');\n    setIsValid(prev => '');\n    // TODO 이전 페이지로\n    history.push('/home');\n  }\n\n  // 탈퇴 모달에 붙은 함수\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\n  const withdrawButtonHandler = (e) => {\n    console.log('탈퇴 버튼 동작확인');\n    setIsModalOpen(true);\n  }\n\n  const modalSelectList = [\n    [null, \"--탈퇴 이유 선택--\"],\n    [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n    [\"inconvenientDesign\", \"디자인이 불편함\"],\n    [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n    [\"etc\", \"기타\"]\n  ];\n\n  const [ modalSelected, setModalSelected ] = useState(\"\");\n  const handleChangeSelect = (e) => {\n    setModalSelected(prev => e.target.value);\n  }\n\n  const modalCloseButtonHandler = (e) => {\n    console.log('모달 닫기 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n  const modalYesButtonHandler = (e) => {\n    console.log('모달 yes 버튼 동작 확인');\n  }\n\n  const modalNoButtonHandler = (e) => {\n    console.log('모달 no 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n\n  return (\n    <Outer className=\"loginPageComponent\">\n      <h2>비밀번호 변경</h2>\n\n      <div className=\"Login--center\">\n        <StyledArticle className=\"id\">\n          <InputAndTitle className=\"inputIdSection\">\n            <h3>현재 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"curPwd\"\n              placeholder=\"현재 비밀번호를 입력하세요\"\n              onChange={curInputHandler}\n              value={curPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"idValidationList\">\n            <StyledLi>{curPwdInputWarning}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n\n        <StyledArticle className=\"password\">\n          <InputAndTitle className=\"inputPwSection\">\n            <h3>새 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"newPwd\"\n              placeholder=\"비밀번호를 입력하세요\"\n              onChange={newInputHandler}\n              value={newPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"pwValidationList\">\n            <StyledLi valid>{isValid}</StyledLi>\n            <StyledLi>{isNoInput}</StyledLi>\n            <StyledLi>{isTooShort}</StyledLi>\n            <StyledLi>{isWrongType}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n      </div>\n\n      <Buttons className=\"login--buttons\">\n        <div>\n          <Button onClick={editButtonHandler} edit>수정</Button>\n          <Button onClick={cancelButtonHandler}>취소</Button>\n        </div>\n      </Buttons>\n\n      <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton>\n\n      {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      }\n    </Outer>\n  );\n}","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\n/*\n  TODO\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n    font-family: \"BMDOHYEON\";\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#419300\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n// const url = process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_URL\n\nexport default function SignUp() {\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력해주세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n    })\n    const history = useHistory()\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\n\nconst Outer = styled.div`\n\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  /* height: 100vh; */\n  min-height: 100vh;\n  padding-top: 100px;\n  button{\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    padding-top: 2vh;\n  }\n  @media screen and (max-width: 1081px) {\n    /* height: auto; */\n  }\n`\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 300px;\n    grid-gap: 1.5rem;\n    height: 70vh;\n\n    .item {\n      background-color: rgba(255, 255, 255, 0.6);\n      display: flex;\n    }\n    .item:nth-child(odd) {\n        margin-left: 5vw;\n    }\n    .item:nth-child(even) {\n        margin-right: 5vw;\n    }\n    .item:hover {\n    }\n    \n    @media screen and (min-width: 2100px) {\n        height: 50vh;\n\n        .item:nth-child(odd) {\n            margin-left: 30vw;\n        }\n        .item:nth-child(even) {\n            margin-right: 30vw;\n        }\n    }\n    @media screen and (max-width: 1081px) {\n      height: 100vh;\n      grid-template-columns: 1fr;\n      grid-template-rows: 3fr 3fr 3fr 3fr;\n\n      .item:nth-child(odd),\n      .item:nth-child(even) {\n        margin: 0 2vw;\n      }\n    }\n    @media screen and (max-width: 375px) {\n      height: auto;\n    }\n`\n// 게시물 사진\nconst PostImg = styled.img`\n  width: 50%;\n  height: 100%;\n  background-color: #FFFFFF;\n\n  @media screen and (min-width: 2100px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    // 이미지 크기 수정 필요\n  }\n`\n// 게시물 내용\nconst PostInfo = styled.div`\n  width: 50%;\n  padding: 3vh 2vw 2vh 2vw;\n  font-size: 2rem;\n  align-items: center;\n  p{\n    margin-top: 10px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    padding: 1vh 2vw 2vh 2vw;\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    font-size: 1rem;\n    padding-left: 3vw;\n  }\n\n`\n\n// 페이지네이션\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    li {\n      /* margin: 3px; */\n      list-style: none;\n      padding: 3px;\n      /* border: 1px solid red; */\n    }\n    button {\n      margin: 0 1vw;\n      padding: 1rem 1.5rem;\n      border-radius: 50%;\n    }\n    button:focus{\n      background-color: var(--modal-bg-color);\n    }\n    #prev,\n    #next{\n      background: none;\n    }\n    @media screen and (max-width: 1081px) {\n      margin-top: 30rem;\n      padding-bottom: 5rem;\n\n    }\n\n    @media screen and (max-width: 375px) {\n      margin-top: 3rem;\n      padding-bottom: 3rem;\n      li {\n        /* margin: 0 1vw; */\n        /* margin: 1vh; */\n        padding: 0;\n\n      }\n      button {\n        /* margin: 0 1.5vw; */\n        font-size: 1.5rem;\n        margin: 0;\n        padding: 1px 7px;\n      }\n    }\n`\n\nexport default function MyPost() {\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.itemReducer)\n  const { start, end, current } = state;\n  const updateCurrPage = page => (dispatchs) => {\n    dispatch({ type : UPDATE_CURRENT_PAGE, payload: page })\n  }\n  const updateStartEndPage = (start, end) => (dispatchs) => {\n    dispatch({type: UPDATE_START_END_PAGE, payload: {start, end}})\n  }\n\n  // 페이지별 담는 글 갯수\n  const per = 4;\n\n  // 총 몇개 페이지가 필요한지?\n  const total = Math.ceil(20 / per);\n  // total의 갯수만큼 각 페이지번호가 있는 박스들을 생성하기 위한 mapping을 위한 배열\n  const array = [];\n  for(let i = 0; i < total; i++){\n    array.push(i + 1);\n  }\n  // 총페이지가 10페이지가 넘을 경우에 10개씩 자른다.\n  const target = array.slice(start, end)\n\n  return (\n    <Outer>\n      <GoBackButton/>\n      <GridArea>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        {/* <div className=\"item\"></div>\n        <div className=\"item\"></div>\n        <div className=\"item\"></div> */}\n      </GridArea>\n\n      {/* 페이지네이션이나 무한스크롤 */}\n      <Page>\n        <li className=\"page-item\">\n          <button\n            id=\"prev\"\n            className=\"item page-link\"\n            onClick={() => {\n              if(current === 1) return alert('첫번째 페이지 입니다.')\n              if(current % 10 === 1){\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPage(s, e);\n              }\n              updateCurrPage(current - 1);\n            }}\n          >\n            이전\n          </button>\n        </li>\n\n        {target.map(el => (\n          <li className=\"page-item\" key={el}>\n            <button\n              className=\"item page-link\"\n              onClick={() => {\n                updateCurrPage(el)\n              }}\n            >\n              {el}\n            </button>\n          </li>\n        ))}\n\n        \n        <li className=\"page-item\">\n          <button\n            id=\"next\"\n            className=\"item page-link\"\n            onClick={() => {\n              if(current % 10 === 1){\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPage(s, e);\n              }\n              updateCurrPage(current + 1);\n            }}\n          >\n            다음\n          </button>\n        </li>\n      </Page>\n    </Outer>\n  )\n}\n\n","import styled from \"styled-components\"\nimport { useState, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\n\nimport axios from \"axios\"\n\n// import { Upload, SunFill, CloudyFill, CloudRainFill, Snow, Thermometer, ThermometerHalf, ThermometerHigh } from \"@styled-icons/bootstrap\"\n\n/* TODO\n  [] 업로드된 이미지의 크기 정리를 어떻게 할지\n    - 가로, 세로 비율 유지 방법\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    & > img {\n        width: 80%;\n        height: auto;\n        margin: 1rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Write() {\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // img src 상태\n    // 테스트용 이미지\n    const imageUrl = {\n        normalLarge:\n            \"https://dummyimage.com/1000x750/7e57c2/fff.png&text=dummy(1000x750)\",\n        normalSmall: \"https://dummyimage.com/300x180/000/fff&text=300x180\",\n        narrowLong:\n            \"https://dummyimage.com/400x800/857285/fff.png&text=400x800\",\n        wideShort: \"https://dummyimage.com/800x300/857285/fff.png&text=800x300\",\n        realImageNormal:\n            \"https://cdn.pixabay.com/photo/2020/11/08/13/28/tree-5723734_1280.jpg\",\n        realImageLong:\n            \"https://cdn.pixabay.com/photo/2021/09/03/02/08/skyscrapers-6594833_1280.png\",\n    }\n\n    // state 변수\n    const [photoSrc, setPhotoSrc] = useState(imageUrl.realImageNormal)\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n        breezy: false,\n        windy: false,\n        strong: false,\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"tshirts\", \"티셔츠\"],\n        [\"shirts\", \"셔츠\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"shorts\", \"반바지\"],\n        [\"pants\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // 사진 업로드 버튼 이벤트\n    const photoUploadButtonHandler = (e) => {\n        console.log(\"사진 업로드 버튼 동작 확인\")\n        // TODO\n        // multer 연결\n        // axios 요청\n        // 이미지 src 바꾸기\n        // setPhotoSrc(res로 받은 src);\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        console.log(userInfo.user_id)\n        axios({\n            url: url + \"/post/write\",\n            method: \"post\",\n            // headers: {\n            //     // accept: \"application/json\",\n            // },\n            data: {\n                user_id: userInfo.user_id,\n                post_photo: uploadedImg.filePath,\n                post_title: title,\n                post_content: postText,\n                weather: selectWeather,\n                wind: selectWind,\n                temp: selectTemp,\n                top_id: selectValueTop,\n                bottom_id: selectValueBottom,\n                xLocation: curLocation.lat,\n                yLocation: curLocation.lon,\n            },\n            withCredentials: true,\n        })\n    }\n\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        if (\n            select === \"sunny\" ||\n            select === \"cloudy\" ||\n            select === \"rainy\" ||\n            select === \"snowy\"\n        ) {\n            setSelectWeather(select)\n        } else if (\n            select === \"breezy\" ||\n            select === \"windy\" ||\n            select === \"strong\"\n        ) {\n            setSelectWind(select)\n        } else if (select === \"cold\" || select === \"hot\") {\n            setSelectTemp(select)\n        }\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons\n                            className=\"filteringButtons\"\n                            onClick={weatherBtnHandler}\n                        >\n                            {weathers.map((weather, idx) => {\n                                return (\n                                    <FilteringBtn\n                                        key={idx}\n                                        name={weather}\n                                        className=\"weatherButton\"\n                                        type=\"button\"\n                                        active={isFilteringBtnActive[weather]}\n                                        onClick={() => weatherFunc(weather)}\n                                    >\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${weather}.png`}\n                                        />\n                                    </FilteringBtn>\n                                )\n                            })}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faTshirt, faSun, faWind, faThermometerHalf } from \"@fortawesome/free-solid-svg-icons\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from  \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Outer = styled.div`\n  width: 100vw;\n  background-color: #FEF9EF;\n\n  // 오늘의 코디\n  .todayCodi{\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    font-size: 25px;\n    font-weight: bold;\n    color: #2E2E2E;\n    padding-top: 2vh;\n    border-top: 1px solid #aaa;\n  }\n  @media screen and (max-width: 1081px){\n    .todayCodi{\n      margin-top: 2vh;\n      font-size: 2rem;\n      font-weight: bold;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    .todayCodi{\n      font-size: 1.5rem;\n    }\n  }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`\n// 제목\nconst Title = styled.div`\n  width: 60rem;\n  text-align: center;\n  margin: 0 auto;\n\n  // 제목글자수 제한 필요?\n  span{\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 80%;\n  }\n  @media screen and (max-width: 375px) {\n    span{\n      font-size: 1.2rem;\n    }\n  }\n`\n// 북마크 아이콘\nconst BookmarkIcon = styled.div`\n  float: right;\n\n  .heart{\n    cursor: pointer;\n    color: #aaa;\n  }\n`\n\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex; \n  justify-content: space-between;\n  flex-flow: wrap;\n  \n  .profileInfo{\n    display: flex; \n    align-items: center;\n    /* margin-left: 1vh; */\n  }\n  .location{\n    font-size: 1.2rem;\n  }\n  span{\n    margin-left: 1vh;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 594px) {\n    .location{\n      margin-top: 1.2vh;\n      font-size: 1.2rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span{\n      font-size: 0.5rem;\n    }\n    .location{\n      font-size: 0.5rem;\n    }\n  }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  // 이미지 사이즈(1000*750) \n  // 다시 확인필요\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: 30rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: 18rem;\n  }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  width: 330px;\n  margin-top: 4vh;\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    margin-bottom: 3vh;\n  }\n`\n\nconst WeatherIcon = styled.img`\n  @media screen and (max-width: 375px) {\n    width: 3rem;\n  }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  width: 20%;\n  text-align: center;\n  display: flex;\n  justify-content: space-between;\n  margin: auto;\n  margin-top: 3vh;\n  margin-bottom: 3vh;\n  font-size: 8rem;\n\n  @media screen and (max-width: 1081px) {\n    width: 40%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    font-size: 70px;\n  }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n  \n  p{\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p{\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n  width: 15rem;\n  margin: 0 auto;\n  padding-bottom: 10vh;\n\n  .button{\n    width: 5rem;\n    height: 3rem;\n    border-radius: 5px;\n    background-color: var(--button-bg-normal);\n    font-size: 1.2rem;\n  }\n  .button2{\n    margin-left: 5rem;\n  }\n  .button:before{\n    height: 0%;\n    width: 2px;\n  }\n  .button:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n\n  @media screen and (max-width: 1081px) {\n    .button2{\n      margin-left: 80px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    .button{\n      width: 3rem;\n      height: 2rem;\n      font-size: 1rem;\n    }\n    .button2{\n      margin-left: 0;\n    }\n  }\n`\n// 스크롤 top 버튼 (필요한 페이지 추가적으로 나오면 컴포넌트로 만들기)\nconst TopButton = styled.div`\n  width: 100%;\n  height: 200px;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: flex-end;\n  bottom: 0px;\n  transition: all 0.3s;\n  \n  img{\n    width: 6rem;\n    height: 6rem;\n    margin-right: 2vh;\n    opacity: 0.7;\n  }\n\n  @media screen and (max-width: 1081px) {\n    height: 200px;\n    img{\n      width: 6rem;\n      height: 6rem;\n      margin-right: 3vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 130px;\n    img{\n      width: 3rem;\n      height: 3rem;\n      margin-right: 2vh;\n    }\n  }\n`\n\nexport default function PostRead(){\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(false)\n  // 게시물 수정\n  const [edit, setEdit] = useState(false)\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false)\n\n  // 게시물 수정\n  const editPost = () => {\n    setEdit(!isOpen)\n    history.push()\n  }\n  // 게시물 삭제\n  const deletePost = () => {\n    setRemovePost(!isOpen)\n    history.push()\n  }\n  const editModalYes = () => {\n    console.log('수정완료');\n    setEdit(false)\n  }\n  const removeModalYes = () => {\n    console.log('삭제완료')\n    setRemovePost(false)\n  }\n  const modalNoButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const bookmarkHandler = (e) => {\n    console.log(e.currentTarget);\n\n  }\n\n  // top button\n  const [ScrollY, setScrollY] = useState(0);\n  const [btnStatus, setBtnStatus] = useState(false);  // 버튼 상태\n\n  // console.log(window.pageYOffset)\n  // console.log(btnStatus)\n\n  const handleFollow = () => {\n    setScrollY(window.scrollY)\n    if(ScrollY > 200){  // 200 이상이면 버튼이 보임\n      setBtnStatus(true)\n    }else{  // 200 이하일때 버튼이 사라짐\n      setBtnStatus(false)\n    }\n  }\n\n  // 클릭시 위로 올라감\n  const scrollToTop = () => {\n    // e.preventDefault() // 새로고침 방지\n    window.scrollTo({top: 0, behavior: 'smooth'}) // 위로 올라감\n    setScrollY(0);  // 올라가면 다시 0으로 초기화\n    setBtnStatus(false); // 버튼 다시 사라짐\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleFollow)\n    return () => {\n      window.removeEventListener('scroll', handleFollow)\n    }\n  })\n\n  return (\n    <Outer>\n      <TopButton>\n        {\n          btnStatus?\n          <img \n            src={`${process.env.PUBLIC_URL}img/scroll-up.png`} alt=\"top\"\n            onClick={scrollToTop}\n          /> : null\n        }\n      </TopButton>\n      <GoBackButton/>\n      <PostHeader>\n        <Title>\n          <BookmarkIcon>\n            <FontAwesomeIcon icon={faHeart} size=\"2x\" className=\"heart\" onClick={bookmarkHandler}/>\n            \n          </BookmarkIcon>\n          <span>{'오늘 날씨 맑음, 제목을 길~게~~~길~~~게~~ 씀'}</span>\n        </Title>\n\n        <Profile>\n          <div className=\"profileInfo\">\n            <ProfileImg src=\"img/blankProfile.png\"/>\n            <span className=\"nickName\">{'김코딩'}</span>\n            <span className=\"date\">{'2021. 10.19. 15:24'}</span>\n          </div>\n          <p className=\"location\">{'서울시 종로구 가회동'}</p>\n        </Profile>\n      </PostHeader>\n      <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n\n      <WeatherInfo>\n          <WeatherIcon src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`} alt=\"날씨아이콘\"/>\n          <WeatherIcon src={`${process.env.PUBLIC_URL}img/icons-write/breezy.png`} alt=\"날씨아이콘\"/>\n          <WeatherIcon src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`} alt=\"날씨아이콘\"/>\n      </WeatherInfo>\n      \n      {/* 코디가 있을 때, 없을 때 */}\n      <p className=\"todayCodi\">오늘의 코디</p>\n      <TodayCodi>\n          <FontAwesomeIcon icon={faTshirt} color=\"purple\"/>\n          <FontAwesomeIcon icon={faTshirt} color=\"pink\"/>\n      </TodayCodi>\n\n      <Post>\n        <p>\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n          Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n          when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n          It has survived not only five centuries, but also the leap into electronic typesetting, \n          remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \n          containing Lorem Ipsum passages, and more recently with desktop publishing software like \n          Aldus PageMaker including versions of Lorem Ipsum.\n        </p>\n      </Post>\n\n      <Buttons>\n        <button className=\"button button1\" value=\"delete\" onClick={deletePost}>삭제</button>\n        {removePost === false ? null : (\n          <ModalConfirm\n            yesHandler={removeModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >삭제하시겠습니까</ModalConfirm>\n          )}\n        <button className=\"button button2\" onClick={editPost}>수정</button>\n        {edit === false ? null : (\n          <ModalConfirm\n            yesHandler={editModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >수정하시겠습니까</ModalConfirm>\n        )}\n      </Buttons>\n\n      {/* <TopButton>\n          <img src={`${process.env.PUBLIC_URL}img/scroll-up-2.png`} alt=\"top\"></img>\n      </TopButton> */}\n\n    </Outer>\n  )\n}","import { useState } from \"react\"\nimport styled from \"styled-components\"\nimport ModalConfirm from \"../components/ModalConfirm\"\n\n/* TODO\n\t[] 원래 썼던 게시물을 Load\n  [] 악시오스 요청\n  [] redirect\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n      flex-direction: row;\n      min-height: var(--desktop-page-height);\n      padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: ${(props) => (props.blue ? null : \"1px solid black\")};\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: ${(props) =>\n        props.blue ? \"var(--button-bg-edit)\" : \"var(--button-bg-normal)\"};\n    color: ${(props) => (props.blue ? \"white\" : \"black\")};\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\n\nconst PictureSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n\n    & > img {\n        width: 80%;\n        height: 80%;\n        margin: 1rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n\twidth: 70vw;\n\tmin-width: 250px;\n\theight: ${props => props.small ? '3rem' : '20vh'};\n\ttext-align: justify;\n\tvertical-align: center;\n\tline-height: 1.2rem;\n\tfont-size: 1.2rem;\n\tmargin: 2rem 1rem 4rem;\n\tpadding: 1rem;\n\n\t@media screen and (min-width: 1081px) {\n\t\twidth: ${props => props.small ? '35vw' : '40vw'};\n\t\tmax-width: ${props => props.small ? '500px' : '800px'};\n\t}\n`\n\nexport default function PostEdit() {\n\t\t// 제목 handler\n\t\tconst [ title, setTitle ] = useState('');\n\t\tconst titleInputHandler = (e) => {\n\t\t\tsetTitle(prev => e.target.value);\n\t\t}\n\n    // img src 상태\n    \t// 테스트용 이미지\n    const imageUrl = {\n        normalLarge:\n            \"https://dummyimage.com/1000x750/7e57c2/fff.png&text=dummy(1000x750)\",\n        normalSmall: \"https://dummyimage.com/300x180/000/fff&text=300x180\",\n        narrowLong:\n            \"https://dummyimage.com/400x800/857285/fff.png&text=400x800\",\n        wideShort: \"https://dummyimage.com/800x300/857285/fff.png&text=800x300\",\n        realImageNormal:\n            \"https://cdn.pixabay.com/photo/2020/11/08/13/28/tree-5723734_1280.jpg\",\n        realImageLong:\n            \"https://cdn.pixabay.com/photo/2021/09/03/02/08/skyscrapers-6594833_1280.png\",\n    }\n\n    // state 변수\n    const [photoSrc, setPhotoSrc] = useState(imageUrl.realImageNormal)\n\n    // 날씨 버튼\n    const weathers = [\"sunny\", \"cloudy\",  \"rainy\", \"snowy\", \"breezy\", \"windy\", \"strong\", \"cold\", \"hot\"]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n        breezy: false,\n        windy: false,\n        strong: false,\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"tshirts\", \"티셔츠\"],\n        [\"shirts\", \"셔츠\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"shorts\", \"반바지\"],\n        [\"pants\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // 사진 업로드 버튼 이벤트\n    const photoUploadButtonHandler = (e) => {\n        console.log(\"사진 업로드 버튼 동작 확인\")\n        // TODO\n        // multer 연결\n        // axios 요청\n        // 이미지 src 바꾸기\n        // setPhotoSrc(res로 받은 src);\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 모달 오픈 여부 state\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false)\n\n    // 등록버튼 이벤트\n    const editSubmitHandler = (e) => {\n        console.log(\"수정버튼 동작 확인\")\n        setIsEditModalOpen((prev) => true)\n    }\n\n    // 모달 닫기/예/아니오 이벤트 함수\n    const editYesHandler = (e) => {\n        // TODO 악시오스 요청, 페이지 redirection\n        console.log(\"수정 yes\")\n    }\n\n    const editNoHandler = (e) => {\n        setIsEditModalOpen((prev) => false)\n    }\n\n    const modalCloseHandler = (e) => {\n        setIsEditModalOpen((prev) => false)\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection className=\"pictureUploadSection writePageLeft\">\n\t\t\t\t\t\t\t\t<article className=\"titleInput\" >\n          \t\t\t\t<WriteText onChange={titleInputHandler} value={title} small></WriteText>\n        \t\t\t\t</article>\n\t\t\t\t\t\t\t\t<img src={photoSrc} alt=\"dummy\" />\n                <Button\n                    className=\"uploadButton\"\n                    onClick={photoUploadButtonHandler}\n                    round\n                >\n                    <img\n                        src={`${process.env.PUBLIC_URL}img/icons-write/upload.png`}\n                        alt=\"\"\n                    />\n                </Button>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons\n                            className=\"filteringButtons\"\n                            onClick={weatherBtnHandler}\n                        >\n                            {weathers.map((weather, idx) => {\n                                return (\n                                    <FilteringBtn\n                                        key={idx}\n                                        name={weather}\n                                        className=\"weatherButton\"\n                                        type=\"button\"\n                                        active={isFilteringBtnActive[weather]}\n                                    >\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${weather}.png`}\n                                            alt=\"\"\n                                        />\n                                    </FilteringBtn>\n                                )\n                            })}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={editSubmitHandler}\n                        blue\n                    >\n                        수정\n                    </Button>\n                    {postText}\n                </TextSection>\n            </DesktopRight>\n\n            {isEditModalOpen ? (\n                <ModalConfirm\n                    yesHandler={editYesHandler}\n                    noHandler={editNoHandler}\n                    closeHandler={modalCloseHandler}\n                >\n                    <p>수정하시겠습니까?</p>\n                </ModalConfirm>\n            ) : (\n                \"\"\n            )}\n        </Outer>\n    )\n}\n","import styled from \"styled-components\";\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n  }\n`;\n\nexport const HalfPage = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n  & img {\n    margin: 2rem;\n    width: 50vw;\n    height: auto;\n  }\n\n  & p {\n    font-size: 1.5rem;\n    margin: 1rem;\n    line-height: 150%;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: var(--desktop-page-height);\n    & img {\n      margin: 2rem;\n      width: 95%;\n      height: auto;\n    }\n\n    & p {\n      margin: 2rem;\n      width: 35vw;\n      height: auto;\n    }\n  }\n`;\n\nexport const AnimatedP = styled.p`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '1.5s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport const AnimatedImg = styled.img`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.5s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function One({ delayOne, delayTwo }) {\n  return (\n    <Contents className={[\"landingPagePart\", \"one\"]}>\n      <HalfPage className=\"half-page\">\n        <AnimatedP className=\"desc\">\n          일기 예보가 <br/>\n          믿음직스럽지 못하시다구요?<br/>\n        </AnimatedP>\n        <div className=\"picture-png left\">\n          <AnimatedImg\n            src=\"img/firstpage/phone-and-human.png\"\n            alt=\"human with phone\"\n          />\n        </div>\n      </HalfPage>\n\n      <HalfPage className=\"half-page\">\n        <AnimatedP className=\"desc\" delay={delayOne}>\n          동네 주민이 올린 하늘의 사진을 <br/>\n          실시간으로 확인할 수 있어요.<br/>\n        </AnimatedP>\n        <AnimatedP className=\"desc\" delay={delayOne}>\n          여러분도 하늘사진을 공유하고 <br/>\n          동네 날씨예보관이 되어 보세요!\n        </AnimatedP>\n        <div className=\"picture-png right\">\n          <AnimatedImg\n            src=\"img/firstpage/town.png\"\n            alt=\"street\"\n            delay={delayTwo}\n          />\n        </div>\n      </HalfPage>\n    </Contents>\n  );\n}","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40vw;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\nimport { TwoPictures } from \"./Three\";\n\nexport default function Four ({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n      <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n          <ContentsUnderTitle className=\"contents\">\n            <HalfPage className=\"half-page\">\n              <AnimatedP className=\"desc\" delay={delayTwo}>\n                날씨에 따라 코디를 <br/>\n                추천하거나 <br/>\n                코디를 추천 받으세요.\n              </AnimatedP>\n              <div className=\"picture-png left\">\n                <AnimatedImg\n                  src=\"img/firstpage/destination.png\"\n                  alt=\"reading mobile phone map\"\n                  delay={delayThree}\n                />\n              </div>\n            </HalfPage>\n            <HalfPage className=\"half-page\">\n              <TwoPictures className=\"picture-png right\">\n                <AnimatedImg\n                  src=\"img/firstpage/publish_post.png\"\n                  alt=\"publishing post\"\n                  delay={delayFour}\n                />\n                <AnimatedImg\n                  src=\"img/firstpage/among_nature.png\"\n                  alt=\"watching tree\"\n                  delay={delayFour}\n                />\n              </TwoPictures>\n              <AnimatedP className=\"desc\" delay={delayFive}>\n                날씨에 따라 코디를 추천받거나, <br/>\n                예보글을 작성하여 <br/>\n                적절한 코디를 추천할 수 있어요.\n              </AnimatedP>\n            </HalfPage>\n          </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport One from \"../components/FirstPage/One\";\nimport Two from \"../components/FirstPage/Two\";\nimport Three from \"../components/FirstPage/Three\";\nimport Four from \"../components/FirstPage/Four\";\n\nconst FirstPageContainer = styled.div`\n  background: linear-gradient(#fff, #FEF9EF, #FFF5DC, #D7F9FF, #AAF2FF);\n`;\n\nexport default function FirstPage() {\n  // let assignedHeight = window.innerHeight * 0.95;\n  // const [ locationY, setLocationY ] = useState(0);\n  // console.log('[스크롤 위치]', Math.floor(locationY));\n  // const scrollHandler = () => {\n  //   setLocationY(window.pageYOffset);\n  // }\n\n  // useEffect(()=>{\n  //   window.addEventListener('scroll', scrollHandler);\n  //   return () => {\n  //     window.removeEventListener('scroll', scrollHandler);\n  //   }\n  // }, []);\n\n  return (\n    <FirstPageContainer className=\"firstPageWhole\">\n      <One\n        delayOne={'1s'}\n        delayTwo={'1.2s'}\n      />\n      <Two\n        delayOne={'2.2s'}\n        delayTwo={'2.5s'}\n        delayThree={'2.6s'}\n        delayFour={'2.7s'}\n        delayFive={'2.8s'}\n      />\n      <Three\n        delayOne={'4.0s'}\n        delayTwo={'4.3s'}\n        delayThree={'4.4s'}\n        delayFour={'4.5s'}\n        delayFive={'4.6s'}\n      />\n      <Four\n        delayOne={'5.5s'}\n        delayTwo={'5.8s'}\n        delayThree={'5.9s'}\n        delayFour={'6.0s'}\n        delayFive={'6.1s'}\n      />\n    </FirstPageContainer>\n  );\n}","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport { changeIsLogin, changeUser } from \"./actions/index\"\nimport styled from \"styled-components\"\n\nlet url = process.env.REACT_APP_LOCAL_URL \n// const url = \"https://thereweather.space\"\n\nexport default function App() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const isInput = true\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/postread\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/map\" />\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n    //프론트엔드 하다가 사용하고싶은 변수 여기서 선언가능\n    isLogin: false, //로그인상태 -hoon\n    genderToggle: 1, //기본값 1, 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n    searchWord: \"\",\n    selectWord: \"\",\n    curLocation: { lat: \"\", lon: \"\" },\n    editPassword: false,\n    userInfo: {},\n    //북마크 페이지네이션\n    start: 0,\n    end: 10,\n    current: 1,\n}\n","import {\n    CHANGE_SEARCH_WORD,\n    CHANGE_SELECT_WORD,\n    CHANGE_USER_INFO,\n    CHANGE_USER_GENDER,\n    CHANGE_IS_LOGIN,\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    CHANGE_USER_PW,\n    CHANGE_CUR_LOCATION,\n} from \"../actions/index\"\nimport { initialState } from \"./initialState\"\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload,\n            }\n        // 새로운기능은 아래양식으로 만들어서 쓸수있다.\n\n        case CHANGE_USER_GENDER:\n            return {\n                ...state,\n                genderToggle: action.payload,\n            }\n\n        case UPDATE_CURRENT_PAGE:\n            return {\n                ...state,\n                current: action.payload,\n            }\n\n        case UPDATE_START_END_PAGE:\n            return {\n                ...state,\n                start: action.payload.start,\n                end: action.payload.end,\n            }\n\n        case CHANGE_IS_LOGIN:\n            return {\n                ...state,\n                isLogin: action.payload,\n            }\n\n        case CHANGE_USER_PW:\n            return {\n                ...state,\n                editPassword: action.payload,\n            }\n\n        case CHANGE_SEARCH_WORD:\n            return {\n                ...state,\n                searchWord: action.payload,\n            }\n\n        case CHANGE_SELECT_WORD:\n            return {\n                ...state,\n                selectWord: action.payload,\n            }\n\n        case CHANGE_CUR_LOCATION:\n            return {\n                ...state,\n                curLocation: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default itemReducer\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}