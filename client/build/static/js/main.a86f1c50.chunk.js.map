{"version":3,"sources":["actions/index.js","components/MapBox.js","pages/Map.js","pages/Home.js","pages/BookMark.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","pages/Login.js","pages/PasswordEdit.js","pages/SignUp.js","pages/MyPost.js","pages/Write.js","pages/PostRead.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/FirstPage.js","pages/Messenger.js","components/GlobalStyle.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","UPDATE_WEATHERINFO","changeSearchword","searchWord","type","payload","changeIsLogin","trueOrFalse","ImgContainer","styled","div","PostListModal","GraphModal","GraphTitle","GraphTitleDiv","BarGraphFlex","BarGraphchild","url","process","Location","props","dispatch","useDispatch","useSelector","state","itemReducer","kakao","window","useState","sunny","cloudy","rainy","snowy","weatherCount","setWeatherCount","bottom_id","createdAt","id","post_content","post_photo","post_title","temp","top_id","updatedAt","user_id","weather","wind","xLocation","yLocation","postList","setPostList","console","log","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","LEFT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","timer","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","positions","markers","i","n","idx","infowindow","addMarkers","clearTimeout","setTimeout","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","toString","axios","La","Ma","method","headers","withCredentials","then","res","length","Box","Box2","EmoticonBox","PostTitle","PostContent","PostBox","PostImg","img","IconImg","labels","datasets","backgroundColor","hoverBackgroundColor","data2","label","borderColor","borderWidth","hoverBorderColor","post","src","Container","className","HomeContainer","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","RightContainer","RightNav1","Home","item","weatherData","setWeatherData","info","kye","baseDate","baseTime","fcstValue","Outer","BookMarkContainer","BookMarkPhoto","BookMarkList","BookMarkIcon","Pagination","PrevPage","PageNumber","NextPage","BookMark","start","end","current","updateCurrentPages","page","dispatchs","updateStartEndPages","total","Math","ceil","arr","push","target","slice","alt","icon","faHeart","size","onClick","alert","el","HeaderOuter","Wing","TitleAndLogo","isMobileLogo","Center","InputAndSubmit","StyledPostCode","DaumPostcode","Input","input","Buttons","Button","button","bgGrey","isText","Cancel","Buttons2","Header","isInput","history","useHistory","isLogin","searchEvent","setSearchEvent","onFocus","setOnFocus","onChange","e","value","placeholder","faSearch","onComplete","roadAddress","faSun","faCloud","faCloudRain","faPooStorm","faSnowflake","token","JSON","parse","localStorage","getItem","Authorization","clear","MenuBar","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faChevronLeft","color","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","userInfo","isModalOpen","setIsModalOpen","currentPosts","setcurrentPosts","location","delete","name","ToggleContainer","Desc","Toggle","isOn","setisOn","LoginOuter","LoginStyledArticle","article","LoginInputAndTitle","LoginInputText","LoginValidationListBox","ul","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","google","Button3","Button2","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","href","accessToken","split","authorization","accept","email","verified_email","res2","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","key","complevent","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","nickName","gender","user_photo","prevInput","prevText","password","assign","faGoogle","StyledLi","li","valid","edit","TextButton","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","modalSelected","setModalSelected","prev","test","newPwdValid","put","elem","SignUp","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","PostInfo","Page","MyPost","updateCurrPage","updateStartEndPage","array","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Write","curLocation","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","clickedWeatherButtons","setClickedWeatherButtons","breezy","windy","strong","cold","hot","isFilteringBtnActive","setIsFilteringBtnActive","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","nodeName","classList","contains","parentNode","includes","filter","btnName","btnListObj","select","PostHeader","Title","BookmarkIcon","Profile","WeatherInfo","WeatherIcon","TodayCodi","Post","TopButton","PostRead","isOpen","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","scrollTo","top","behavior","currentTarget","faTshirt","blue","PostEdit","photoSrc","isEditModalOpen","setIsEditModalOpen","Contents","HalfPage","AnimatedP","p","duration","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","FirstPageContainer","FirstPage","ProfileName","UserPhotoDiv","UserPhotoImg","RoomChatDiv","RoomList","ChatList","FriendInput","FriendInputAndBtn","FriendListDiv","socket","io","connect","Messenger","roomName","setroomName","curRoom","setcurRoom","msg","setmsg","msgevent","setmsgevent","joinedRoom","setjoinedRoom","roomInOut","setRoomInOut","on","msg2","roomlist","chatcontent","msgfunc","required","emit","faPaperPlane","user_Photo","roomNamefunc","user_id_sort","sort","opponent","faPlusSquare","clickRoomName","indexOf","GlobalStyle","createGlobalStyle","App","userinfo","login","exact","path","to","initialState","selectWord","editPassword","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"wUACaA,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAsB,sBAEtBC,EAAqB,qBAmCrBC,EAAmB,SAACC,GAC7B,MAAO,CACHC,KAAMN,EACNO,QAASF,IASJG,EAAgB,SAACC,GAC1B,MAAO,CACHH,KAAMR,EACNS,QAASE,I,gCCrDXC,EAAeC,IAAOC,IAAV,kNASZC,EAAgBF,IAAOC,IAAV,yfAsBbE,EAAaH,IAAOC,IAAV,yLAUVG,EAAaJ,IAAOC,IAAV,sNAWVI,EAAgBL,IAAOC,IAAV,2LASbK,EAAeN,IAAOC,IAAV,8PAWZM,EAAgBP,IAAOC,IAAV,+KASfO,GAAMC,sBAGK,SAASC,GAASC,GAC7B,IAAMC,EAAWC,cACTnB,EAAeoB,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA5CtB,WACAuB,EAAUC,OAAVD,MACR,EAAwCE,mBAAS,CAC7CC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,MAAO,IAJX,mBAAOC,EAAP,KAAqBC,EAArB,KAOA,EAAgCN,mBAAS,CACrC,CACIO,UAAW,GACXC,UAAW,IACXC,GAAI,KACJC,aAAc,GACdC,WAAY,GACZC,WAAY,mEACZC,KAAM,GACNC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNC,UAAW,KACXC,UAAW,QAfnB,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBAC,QAAQC,IAAIjD,GACZgD,QAAQC,IAAIhC,GAIZiC,qBAAU,WACN,IAAIC,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACVC,OAAQ,IAAIhC,EAAMiC,KAAKC,OAAO,WAAY,aAC1CC,MAAO,GAEPC,EAAM,IAAIpC,EAAMiC,KAAKI,IAAIT,EAAWG,GACpCO,EAAc,IAAItC,EAAMiC,KAAKM,YAGjC,GAFAH,EAAII,WAAWF,EAAatC,EAAMiC,KAAKQ,gBAAgBC,MAEnDC,UAAUC,YAEVD,UAAUC,YAAYC,oBAAmB,SAAUC,GAC/C,IAAIC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAEtBC,EAAc,IAAIpD,EAAMiC,KAAKC,OAAOa,EAAKG,GAI7CG,EAAcD,EAHA,0EAId3B,QAAQC,IAAI0B,GAEZ3B,QAAQC,IAAIqB,GACZtB,QAAQC,IAAIwB,GACZvD,EDhFiB,SAACoD,EAAKG,GACnC,MAAO,CACHxE,KAAMJ,EACNK,QAAS,CAAEoE,IAAKA,EAAKG,IAAKA,IC6ETI,CAAkBP,EAAKG,WAEjC,CAMHG,EAHkB,IAAIrD,EAAMiC,KAAKC,OAAO,UAAW,YACrC,mEAMlB,SAASmB,EAAcD,EAAaG,GAEhC,IAAIC,EAAS,IAAIxD,EAAMiC,KAAKwB,OAAO,CAC/BrB,IAAKA,EACLU,SAAUM,IAGVM,EAAYH,EAIC,IAAIvD,EAAMiC,KAAK0B,WAAW,CACvCC,QAASF,EACTG,WALe,IASRC,KAAK1B,EAAKoB,GAGrBpB,EAAI2B,UAAUX,IAIH,IAAIpD,EAAMiC,KAAK+B,SAASC,UAG9BC,cAAczF,GAAY,SAAU0F,EAAQC,GAEjD,GAAIA,IAAWpE,EAAMiC,KAAK+B,SAASK,OAAOC,GAAI,CAC1C,IAAItB,EAAS,IAAIhD,EAAMiC,KAAKC,OAAOiC,EAAO,GAAGI,EAAGJ,EAAO,GAAGK,GAe1D7E,EAASnB,EAAiBC,IAC1B2D,EAAI2B,UAAUf,OAKtBhD,EAAMiC,KAAKwC,MAAMC,YAAYtC,EAAK,SAAS,SAAUuC,GAEjD,IAAIC,EAASD,EAAWE,OAIpBtB,EAAU,4DAAiBqB,EAAOE,SAAW,kBACjDvB,GAAW,sBAASqB,EAAOG,SAAW,sBACtCtD,QAAQC,IAAI6B,MAIhB,IA0HIyB,EA1HAC,EAAY,IAAIjF,EAAMiC,KAAKiD,gBAAgB,CAC3C9C,IAAKA,EACL+C,eAAe,EACfC,SAAU,IAKdC,IAAEC,IAAI/F,GAAM,kBAAkB,SAAUgG,GAGpC9D,QAAQC,IAAI2D,IAAEE,EAAKC,YACnB,IAAIC,EAAUJ,IAAEE,EAAKC,WAAWpD,KAAI,SAAUsD,EAAG5C,GAC7C,OAAO,IAAI9C,EAAMiC,KAAKwB,OAAO,CACzBX,SAAU,IAAI9C,EAAMiC,KAAKC,OACrBY,EAASzB,UACTyB,EAASxB,gBAIrBG,QAAQC,IAAI+D,GACZhE,QAAQC,IAAI2D,IAAEE,EAAKC,WAAW,IAC9BH,IAAEE,EAAKC,WAAWpD,KAAI,SAACuD,EAAGC,GACtBnE,QAAQC,IAAI2D,IAAEE,EAAKC,YA0BnB,IAAI9B,EAAS,mNAGC2B,IAAEE,EAAKC,WAAWG,GAAG7E,WAHtB,sJAOgC,UAAjCuE,IAAEE,EAAKC,WAAWG,GAAGxE,QACf,6DACiC,WAAjCkE,IAAEE,EAAKC,WAAWG,GAAGxE,QACrB,8DACiC,UAAjCkE,IAAEE,EAAKC,WAAWG,GAAGxE,QACrB,6DACiC,UAAjCkE,IAAEE,EAAKC,WAAWG,GAAGxE,QACrB,6DACA,KAfL,qCAkB6B,WAA9BkE,IAAEE,EAAKC,WAAWG,GAAGvE,KACf,8DAC8B,UAA9BiE,IAAEE,EAAKC,WAAWG,GAAGvE,KACrB,6DAC8B,WAA9BiE,IAAEE,EAAKC,WAAWG,GAAGvE,KACrB,8DACA,KAxBL,qCA2B6B,SAA9BiE,IAAEE,EAAKC,WAAWG,GAAG5E,KACf,4DAC8B,QAA9BsE,IAAEE,EAAKC,WAAWG,GAAG5E,KACrB,2DACA,KA/BL,qCAkC+B,YAAhCsE,IAAEE,EAAKC,WAAWG,GAAG3E,OACf,+DACgC,WAAhCqE,IAAEE,EAAKC,WAAWG,GAAG3E,OACrB,8DACA,KAtCL,qCAyCkC,WAAnCqE,IAAEE,EAAKC,WAAWG,GAAGlF,UACf,8DACmC,UAAnC4E,IAAEE,EAAKC,WAAWG,GAAGlF,UACrB,6DACA,KA7CL,8EAiDD4E,IAAEE,EAAKC,WAAWG,GAAG9E,WAjDpB,iFAmDEwE,IAAEE,EAAKC,WAAWG,GAAG/E,aAnDvB,uGA4DTiF,EAAa,IAAI7F,EAAMiC,KAAK0B,WAAW,CACvCC,QAASF,EACTG,WALe,IAOnB7D,EAAMiC,KAAKwC,MAAMC,YAAYe,EAAQE,GAAI,SAAS,WAE9CE,EAAW/B,KAAK1B,EAAKqD,EAAQE,UAIrCV,EAAUa,WAAWL,MAKzBzF,EAAMiC,KAAKwC,MAAMC,YAAYtC,EAAK,QAAQ,WAClC4C,GACAe,aAAaf,GAGjBA,EAAQgB,YAAW,WACfvE,QAAQC,IAAI,0FAQZ,IAAIuE,EAAS7D,EAAI8D,YAGbC,EAAWF,EAAOG,eAGlBC,EAAWJ,EAAOK,eAElB/C,EACA,uFACA4C,EAASI,WACT,oBACJhD,GACI,wDAAkB8C,EAASE,WAAa,sBAG5C9E,QAAQC,IAAI6B,GACZ9B,QAAQC,IAAIyE,GACZ1E,QAAQC,IAAI2E,GACZG,IAAM,CACFjH,IACIA,GAAG,yBACe8G,EAASI,GADxB,mBACqCN,EAASM,GAD9C,iBACyDN,EAASO,GADlE,kBAC8EL,EAASK,IAE9FC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAGpBC,iBAAiB,IAClBC,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,EAAIxB,MAChB/D,EAAYuF,EAAIxB,MAChB9D,QAAQC,IAAIH,GAKZ,IAJA,IAAIpB,EAAQ,EACRC,EAAS,EACTC,EAAQ,EACRC,EAAQ,EACHqF,EAAI,EAAGA,EAAIoB,EAAIxB,KAAKyB,OAAQrB,IACL,UAAxBoB,EAAIxB,KAAKI,GAAGxE,QACZhB,GAAgB,EACe,WAAxB4G,EAAIxB,KAAKI,GAAGxE,QACnBf,IAC+B,UAAxB2G,EAAIxB,KAAKI,GAAGxE,QACnBd,IAC+B,UAAxB0G,EAAIxB,KAAKI,GAAGxE,SACnBb,IAGRE,EAAgB,CACZL,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,SAGhB,UAER,CACCN,EAAMiC,KAAKC,OACXlC,EAAMiC,KAAKwB,OACXzD,EAAMiC,KAAKwC,MACXzE,EAAMiC,KAAKI,IACX5D,IAGJ,IAAMwI,EAAMlI,IAAOC,IAAV,sMAQHkI,EAAOnI,IAAOC,IAAV,sLAQJmI,EAAcpI,IAAOC,IAAV,oJAOXoI,EAAYrI,IAAOC,IAAV,+KAQTqI,EAActI,IAAOC,IAAV,+KAQXsI,EAAUvI,IAAOC,IAAV,0KAQPuI,EAAUxI,IAAOyI,IAAV,oHAMPC,EAAU1I,IAAOyI,IAAV,mHAMb/F,QAAQC,IAAInB,GACZ,IAAMgF,EAAO,CACTmC,OAAQ,CAAC,eAAM,eAAM,SAAK,gBAC1BC,SAAU,CACN,CACIpC,KAAM,CACFhF,EAAaJ,MACbI,EAAaH,OACbG,EAAaF,MACbE,EAAaD,OAEjBsH,gBAAiB,CAAC,UAAW,OAAQ,UAAW,WAChDC,qBAAsB,CAAC,UAAW,OAAQ,UAAW,cAI3DC,EAAQ,CACVJ,OAAQ,CAAC,iCAAS,sBAClBC,SAAU,CACN,CACII,MAAO,4BACPH,gBAAiB,uBACjBI,YAAa,qBACbC,YAAa,EACbJ,qBAAsB,uBACtBK,iBAAkB,qBAClB3C,KAAM,EACAhF,EAAaF,MAAQE,EAAaD,QAC/BC,EAAaJ,MACVI,EAAaH,OACbG,EAAaF,MACbE,EAAaD,OACjB,IACJ,OAKhB,OACI,qCACI,cAACxB,EAAD,CAAc6B,GAAG,QACjB,eAAC1B,EAAD,WACI,cAACG,EAAD,uCACA,eAACD,EAAD,WACI,cAACC,EAAD,wEACA,cAACA,EAAD,2GAIJ,eAACF,EAAD,WACI,cAAC,IAAD,CAAUqG,KAAMA,IAChB,cAAClG,EAAD,UACI,cAACC,EAAD,UACI,cAAC,IAAD,CAAKiG,KAAMuC,WAItBvG,EAASa,KAAI,SAAC+F,GACX,OACI,eAACb,EAAD,WACI,eAACL,EAAD,WACI,cAACM,EAAD,CAASa,IAAG,UAAKD,EAAKtH,cACtB,eAACsG,EAAD,WACI,cAACM,EAAD,CACIW,IAAG,2BAAsBD,EAAKhH,QAA3B,UAEP,cAACsG,EAAD,CACIW,IAAG,2BAAsBD,EAAK/G,KAA3B,UAEP,cAACqG,EAAD,CACIW,IAAG,2BAAsBD,EAAKpH,KAA3B,UAEP,cAAC0G,EAAD,CACIW,IAAG,2BAAsBD,EAAKnH,OAA3B,UAEP,cAACyG,EAAD,CACIW,IAAG,2BAAsBD,EAAK1H,UAA3B,gBAIf,eAACyG,EAAD,WACI,cAACE,EAAD,oBAAee,EAAKrH,cACpB,cAACuG,EAAD,oBAAiBc,EAAKvH,+BAlejDrB,KAAKA,GAAM,8BCrFhB,I,qBAAM8I,GAAYtJ,IAAOC,IAAV,uRAaA,SAASqD,KAMpB,OACI,cAACgG,GAAD,CAAWC,UAAU,eAArB,SACI,cAAC,GAAD,MClBZ,IAAMC,GAAgBxJ,IAAOC,IAAV,2IASbwJ,GAAiBzJ,IAAOC,IAAV,uMAedyJ,GAAW1J,IAAO2J,IAAV,wIAQRC,GAAW5J,YAAO0J,GAAP1J,CAAH,4BACR6J,GAAW7J,YAAO0J,GAAP1J,CAAH,4BAER8J,GAAiB9J,IAAOC,IAAV,iiBA2Bd8J,GAAY/J,IAAO2J,IAAV,yMAYA,SAASK,KACpB,IAAMpJ,EAAWC,cACToJ,EAASnJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAtCiJ,KACRvH,QAAQC,IAAIsH,GAIZ,MAAsC9I,qBAAtC,mBAAO+I,EAAP,KAAoBC,EAApB,KA0BA,OAzBAvH,qBAAU,WAENgB,UAAUC,aAEZD,UAAUC,YAAYC,oBAAmB,SAAUC,GAC/C,IAAIC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAC1B1B,QAAQC,IAAIqB,EAAKG,GACjBsD,IAAM,CACFjH,IAAKA,0BACLoH,OAAQ,OACRpB,KAAM,CAAExC,IAAKA,EAAKG,IAAKA,GACvB2D,iBAAiB,IAEpBC,MAAK,SAACC,GHxBgB,IAACxB,EG2BtB2D,EAAenC,EAAIxB,MACnB5F,GH5BsB4F,EG4BKwB,EAAIxB,KH3BhC,CACH7G,KAAMH,EACNI,QAAS,CACN4G,KAAMA,cG4BZ,IAIG,qBAAK+C,UAAU,gBAAf,SAEI,eAACC,GAAD,WACI,eAACC,GAAD,WACI,eAACC,GAAD,+CAEI,qBAAKH,UAAU,mBAEnB,eAACK,GAAD,yDAEI,qBAAKL,UAAU,cAAf,SACA,+BAGGW,GAAeA,EAAYD,KAAK5G,KAAI,SAAC+G,EAAMvD,GAAU,OAAO,qBAAIwD,IAAKxD,EAAT,0BAAkBuD,EAAKE,eAAkB,GACrGJ,GAAeA,EAAYD,KAAK5G,KAAI,SAAC+G,EAAMvD,GAAU,OAAO,qBAAIwD,IAAKxD,EAAT,mDAAuBuD,EAAKG,eAAkB,GAC1GL,GAAeA,EAAYD,KAAK5G,KAAI,SAAC+G,EAAMvD,GAAU,OAAO,qBAAIwD,IAAKxD,EAAT,mDAAuBuD,EAAKI,gBAAmB,IAL9G,IAMGN,GAAeA,EAAYD,KAAK5G,KAAI,SAAC+G,EAAMvD,GAAU,OAAO,qBAAIwD,IAAKxD,EAAT,+DAA6C,MAApBuD,EAAKI,UAA0C,MAApBJ,EAAKI,UAAqB,eAAO,2BAAU,qBAAe,IAN7K,IAQGN,GAAeA,EAAYD,KAAK5G,KAAI,SAAC+G,EAAMvD,GAAU,OAAO,qBAAIwD,IAAKxD,EAAT,+DAA4C,MAAnBuD,EAAKI,UAAwC,MAAnBJ,EAAKI,UAAoB,SAAM,kCAAW,eAAc,GAR1K,YAYJ,eAACX,GAAD,0EAEI,qBAAKN,UAAU,mBAIvB,eAACO,GAAD,WACI,cAACC,GAAD,sDAEA,qBAAKR,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,eACA,qBAAKA,UAAU,WAAf,uB,oDCnJdkB,GAAQzK,IAAOC,IAAV,gNAYLqJ,GAAYtJ,IAAOC,IAAV,6hBA2BTyK,GAAoB1K,IAAOC,IAAV,sMASjB0K,GAAgB3K,IAAOC,IAAV,kcA0Bb2K,GAAe5K,IAAOC,IAAV,q/BAyDZ4K,GAAe7K,IAAOC,IAAV,4PAeZ6K,GAAa9K,IAAOC,IAAV,0dA4BV8K,GAAW/K,IAAOC,IAAV,4BAER+K,GAAahL,IAAOC,IAAV,2QAmBVgL,GAAWjL,IAAOC,IAAV,4BAEC,SAASiL,KAoBtB,IAjBA,IAAMnK,EAAQD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eACjCmK,EAAwBpK,EAAxBoK,MAAOC,EAAiBrK,EAAjBqK,IAAKC,EAAYtK,EAAZsK,QACdzK,EAAWC,cAGXyK,EAAqB,SAAAC,GAAI,OAAI,SAACC,GAClC5K,EAAS,CAAEjB,KAAMX,EAAqBY,QAAS2L,MAE3CE,EAAsB,SAACN,EAAOC,GAAR,OAAgB,SAACI,GAC3C5K,EAAS,CAAEjB,KAAMV,EAAuBW,QAAS,CAAEuL,QAAOC,WAKtDM,EAAQC,KAAKC,KAAK,GAElBC,EAAM,GACHlF,EAAI,EAAGA,EAAI+E,EAAO/E,IACvBkF,EAAIC,KAAKnF,EAAI,GAEjB,IAAMoF,EAASF,EAAIG,MAAMb,EAAOC,GAEhC,OACE,eAACX,GAAD,WACE,eAAC,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,UACE,qBAAKpB,UAAU,cAAf,SACE,qBAAKA,UAAU,UAAUF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,gBAG9E,eAACrB,GAAD,WACE,qBAAKrB,UAAU,YAAf,sBAGA,qBAAKA,UAAU,WAAf,qBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,kCAGZ,cAACoK,GAAD,UAEE,cAAC,KAAD,CAAiBqB,KAAMC,KAASC,KAAK,YAGzC,eAAC1B,GAAD,WACE,cAACC,GAAD,UACE,qBAAKpB,UAAU,cAAf,SACE,qBAAKA,UAAU,UAAUF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,gBAG9E,eAACrB,GAAD,WACE,qBAAKrB,UAAU,YAAf,sBAGA,qBAAKA,UAAU,WAAf,qBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,kCAGZ,cAACoK,GAAD,UAEE,cAAC,KAAD,CAAiBqB,KAAMC,KAASC,KAAK,YAGzC,eAAC1B,GAAD,WACE,cAACC,GAAD,UACE,qBAAKpB,UAAU,cAAf,SACE,qBAAKA,UAAU,UAAUF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,gBAG9E,eAACrB,GAAD,WACE,qBAAKrB,UAAU,YAAf,sBAGA,qBAAKA,UAAU,WAAf,qBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,kCAGZ,cAACoK,GAAD,UAEE,cAAC,KAAD,CAAiBqB,KAAMC,KAASC,KAAK,YAGzC,eAAC1B,GAAD,WACE,cAACC,GAAD,UACE,qBAAKpB,UAAU,cAAf,SACE,qBAAKA,UAAU,UAAUF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,gBAG9E,eAACrB,GAAD,WACE,qBAAKrB,UAAU,YAAf,sBAGA,qBAAKA,UAAU,WAAf,qBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,iCAEV,qBAAK8I,UAAU,mBAAf,SACE,qBAAKF,IAAG,UAAK5I,GAAL,kCAGZ,cAACoK,GAAD,UAEE,cAAC,KAAD,CAAiBqB,KAAMC,KAASC,KAAK,eAW3C,eAACtB,GAAD,WACE,cAACC,GAAD,UACE,oBAAIxB,UAAU,WAAd,SACE,wBAAQA,UAAU,gBAAgB8C,QAAS,WACzC,GAAe,IAAZhB,EAAe,OAAOiB,MAAM,2DAC5BjB,EAAU,KAAO,GAGlBI,EAFUN,EAAQ,GACRC,EAAM,IAGlBE,EAAmBD,EAAU,IAP/B,8BAcJ,cAACL,GAAD,UACCe,EAAO1I,KAAI,SAAAkJ,GAAE,OACZ,oBAAIhD,UAAU,UAAd,SACE,wBAAQA,UAAU,cAAc8C,QAAS,WAAOf,EAAmBiB,IAAnE,SACGA,KAFwBA,QAQ/B,cAACtB,GAAD,UACA,oBAAI1B,UAAU,UAAd,SACI,wBAAQA,UAAU,YAAY8C,QAAS,WAClChB,EAAU,KAAO,GAGlBI,EAFUN,EAAQ,GACRC,EAAM,IAGlBE,EAAmBD,EAAU,IAN/B,oC,kECrWNmB,GAAcxM,IAAOC,IAAV,uuBAiCXwM,GAAOzM,IAAOC,IAAV,+OAYJyM,GAAe1M,IAAOC,IAAV,8ZACH,SAACU,GAAD,OAAYA,EAAMgM,aAAe,OAAS,UAmBnDC,GAAS5M,IAAOC,IAAV,8VAgBN4M,GAAiB7M,IAAOC,IAAV,gQAed6M,GAAiB9M,YAAO+M,KAAP/M,CAAH,+KASdgN,GAAQhN,IAAOiN,MAAV,qZAkBLC,GAAUlN,IAAOC,IAAV,gUAkBPkN,GAASnN,IAAOoN,OAAV,iKACY,SAACzM,GAAD,OAAYA,EAAM0M,OAAS,UAAY,WAClD,SAAC1M,GAAD,OAAYA,EAAM0M,QAAU1M,EAAM2M,OAAS,QAAU,UACjD,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,SAAW,YACxC,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,QAAU,WAe9CC,GAASvN,IAAOoN,OAAV,0LASNI,GAAWxN,IAAOC,IAAV,sWACU,SAACU,GAAD,OAAYA,EAAM0M,OAAS,UAAY,WAClD,SAAC1M,GAAD,OAAYA,EAAM0M,QAAU1M,EAAM2M,OAAS,QAAU,UACjD,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,SAAW,YACxC,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,QAAU,WAIjC,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,QAAU,cAGnC,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,YAC7B,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,QAAU,WAKpD9M,GAAMC,sBAEK,SAASgN,GAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,QAASf,EAAgB,EAAhBA,aAChC/L,EAAWC,cACX8M,EAAUC,cACRC,EAAY/M,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAzC6M,QACR,EAAsC1M,mBAAS,IAA/C,mBAAO2M,EAAP,KAAoBC,EAApB,KACA,EAA8B5M,oBAAS,GAAvC,mBAAO6M,EAAP,KAAgBC,EAAhB,KAIKzN,KACDA,GAAM,8BAgCV,OACI,eAACgM,GAAD,CAAajD,UAAU,SAAvB,UACI,eAACmD,GAAD,CAAcnD,UAAU,eAAeoD,aAAcA,EAArD,UACI,qBACIN,QAAS,kBAAMsB,EAAQ7B,KAAK,MAC5BzC,IAAI,eACJ4C,IAAI,SAER,oBAAII,QAAS,kBAAMsB,EAAQ7B,KAAK,MAAhC,8BAGH4B,EACG,eAACd,GAAD,CAAQrD,UAAU,eAAlB,UACI,eAACsD,GAAD,CAAgBtD,UAAU,iBAA1B,UACI,cAACyD,GAAD,CAEIkB,SAAU,SAACC,GAAD,OAAOJ,EAAeI,EAAEpC,OAAOqC,QACzCzO,KAAK,OACL0O,YAAY,4BACZD,MAAON,EAGPE,QAAS,SAACG,GAAD,OAAOF,GAAW,MAE/B,cAACT,GAAD,CAAUH,QAAM,EAAhB,SACKW,EACG,cAACT,GAAD,CAAQlB,QAAS,kBAAM4B,GAAW,IAAlC,oBAIA,cAAC,KAAD,CACI5B,QAAS,kBACLzL,EAASnB,EAAiBqO,KAE9B5B,KAAMoC,YAUrBN,EACG,cAAClB,GAAD,CACIvD,UAAU,wBACVgF,WA1ExB,SAAwBJ,GACpBzL,QAAQC,IAAIwL,GACZJ,EAAeI,EAAEK,aACjBP,GAAW,MA0EK,6BAEJ,eAACf,GAAD,CAAS3D,UAAU,gBAAnB,UACI,cAAC4D,GAAD,UACI,cAAC,KAAD,CAAiBjB,KAAMuC,SAE3B,cAACtB,GAAD,UACI,cAAC,KAAD,CAAiBjB,KAAMwC,SAE3B,cAACvB,GAAD,UACI,cAAC,KAAD,CAAiBjB,KAAMyC,SAE3B,cAACxB,GAAD,UACI,cAAC,KAAD,CAAiBjB,KAAM0C,SAE3B,cAACzB,GAAD,UACI,cAAC,KAAD,CAAiBjB,KAAM2C,eAKnC,cAACjC,GAAD,CAAQrD,UAAU,iBAGrBsE,EACG,eAACpB,GAAD,CAAMlD,UAAU,wBAAhB,UAEI,cAAC4D,GAAD,CAAQ5D,UAAU,QAAQ8C,QAlGjB,SAAC8B,GACtB,IAAMW,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAC9CzH,IACK2B,KACG5I,GAAM,WACN,CAAEgG,KAAM,MACR,CACIqB,QAAS,CACL,eAAgB,mBAChBsH,cAAc,SAAD,OAAWL,IAE5BhH,iBAAiB,IAGxBC,MAAK,SAACC,GACHiH,aAAaG,QACbxO,EAASf,GAAc,IACvB8N,EAAQ7B,KAAK,SAiF4CwB,QAAM,EAA3D,sCAGA,cAACH,GAAD,CACId,QAAS,kBAAMsB,EAAQ7B,KAAK,YAC5BvC,UAAU,SACV+D,QAAM,EAHV,+CASJ,eAACb,GAAD,CAAMlD,UAAU,wBAAhB,UACI,cAAC4D,GAAD,CACId,QAAS,kBAAMsB,EAAQ7B,KAAK,WAC5BvC,UAAU,QACV+D,QAAM,EAHV,gCAOA,cAACH,GAAD,CACId,QAAS,kBAAMsB,EAAQ7B,KAAK,YAC5BvC,UAAU,SACV+D,QAAM,EAHV,4CC7UpB,I,SAAM7C,GAAQzK,IAAOC,IAAV,wSAgBLiN,GAAUlN,IAAOC,IAAV,8dAqBPkN,GAASnN,IAAOoN,OAAV,+FAMG,SAASiC,KACpB,IAAM1B,EAAUC,cAChB,OACI,cAAC,GAAD,CAAOrE,UAAU,UAAjB,SACI,eAAC,GAAD,WAQI,cAAC,GAAD,UAKI,qBACIF,IAAI,8IACJgD,QAAS,kBAAMsB,EAAQ7B,KAAK,qBAGpC,cAAC,GAAD,UAKI,qBACIzC,IAAI,oDACJgD,QAAS,kBAAMsB,EAAQ7B,KAAK,yBAGpC,cAAC,GAAD,UAKI,qBACIzC,IAAI,wJACJgD,QAAS,kBAAMsB,EAAQ7B,KAAK,aAGpC,cAAC,GAAD,UAKI,qBACIzC,IAAI,sDACJgD,QAAS,kBAAMsB,EAAQ7B,KAAK,sBAGpC,cAAC,GAAD,UAKI,qBACIzC,IAAI,0IACJgD,QAAS,kBAAMsB,EAAQ7B,KAAK,6BC1GpD,I,SAAMrB,GAAQzK,IAAOC,IAAV,mZAeLqP,GAAYtP,IAAOC,IAAV,mDAITsP,GAAUvP,IAAOC,IAAV,otBAqCTO,GAAMC,sBAEK,SAAS+O,KACpB,IAAM5O,EAAWC,cACX8M,EAAUC,cACI9M,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAzC6M,QACHrN,KACDA,GAAM,8BAwBV,OACI,cAAC,GAAD,UACI,eAAC8O,GAAD,WACI,cAACC,GAAD,CAASlD,QAAS,kBAAMsB,EAAQ7B,KAAK,YAArC,SACI,iEAGJ,cAACyD,GAAD,UACI,wBAAQlD,QAAS,kBAAMsB,EAAQ7B,KAAK,eAApC,SACI,uDAGR,cAACyD,GAAD,UACI,wBAAQlD,QAlCC,SAAC8B,GACtB,IAAMW,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAC9CzH,IACK2B,KACG5I,GAAM,WACN,CAAEgG,KAAM,MACR,CACIqB,QAAS,CACL,eAAgB,mBAChBsH,cAAc,SAAD,OAAWL,IAE5BhH,iBAAiB,IAGxBC,MAAK,SAACC,GACHiH,aAAaG,QACbxO,EAASf,GAAc,IACvB8N,EAAQ7B,KAAK,SAiBT,SACI,kECxGxB,I,SAAMrB,GAAQzK,IAAOC,IAAV,sSAaLqP,GAAYtP,IAAOC,IAAV,mDAITsP,GAAUvP,IAAOC,IAAV,itBAmCE,SAASwP,KACpB,IAAM9B,EAAUC,cAChB,OACI,cAAC,GAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,CAASvB,QAAS,kBAAMsB,EAAQ7B,KAAK,YAArC,SACI,2DAEJ,cAAC,GAAD,CAASO,QAAS,kBAAMsB,EAAQ7B,KAAK,WAArC,SACI,0DCtDpB,I,GAAMrB,GAAQzK,IAAOC,IAAV,+OAaLyP,GAAQ1P,IAAO2P,QAAV,ikBAgCLxC,GAASnN,IAAOoN,OAAV,sMAWG,SAASwC,GAAT,GAA0E,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAiBzE,OACE,cAAC,GAAD,CAAOzG,UAAU,kBAAjB,SACE,eAACmG,GAAD,CAAOnG,UAAU,eAAjB,UACE,yBAASA,UAAU,kBAAnB,SACE,wBAAQA,UAAU,mBAAmB8C,QARlB,WACzByD,KAOM,SACE,cAAC,KAAD,CAAiB5D,KAAM+D,WAG3B,yBAAS1G,UAAU,cAAnB,SACGsG,IAEH,0BAAStG,UAAU,sBAAnB,UACE,cAAC,GAAD,CAAQA,UAAU,iBAAiB8C,QAxBlB,WACvB0D,KAuBM,oBACA,cAAC,GAAD,CAAQxG,UAAU,gBAAgB8C,QArBlB,WACtB2D,KAoBM,wCC3FV,I,eAAM7C,GAASnN,IAAOoN,OAAV,2aAqBG,SAAS8C,KACpB,IAAMvC,EAAUC,cAIhB,OACI,cAAC,GAAD,UACI,cAAC,KAAD,CACI1B,KAAMiE,KACN5G,UAAU,QACV6G,MAAM,UACN/D,QATU,WAClBsB,EAAQ0C,cCrBhB,IAAM5F,GAAQzK,IAAOC,IAAV,qVAcLqQ,GAActQ,IAAOC,IAAV,yiDAgEXsQ,GAAavQ,IAAOyI,IAAV,uSAeV+H,GAAaxQ,IAAOC,IAAV,wnBA6BVwQ,GAAWzQ,IAAOC,IAAV,+oEA4FVO,GAAMC,sBAEK,SAASiQ,KACpB,IAAM9P,EAAWC,cACX8M,EAAUC,cAChB,EAA8B9M,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA1C2P,GAAjB,EAAQ9C,QAAR,EAAiB8C,UACjBjO,QAAQC,IAAIgO,GAEZ,MAAsCxP,oBAAS,GAA/C,mBAAOyP,EAAP,KAAoBC,EAApB,KACA,EAAoC1P,oBAAS,GAA7C,6BACKX,KACDA,GAAM,8BAGV,MAAwCW,mBAAS,IAAjD,mBAAO2P,EAAP,KAAqBC,EAArB,KAEAnO,qBAAU,WACN6E,IAAM,CACFjH,IAAKA,GAAM,UACXoH,OAAQ,MACRE,iBAAiB,IAClBC,MAAK,SAACC,GACL+I,EAAgB/I,EAAIxB,MACpB9D,QAAQC,IAAImO,QAEjB,IAiDH,OACI,eAAC,GAAD,WACI,cAACZ,GAAD,IACA,eAACI,GAAD,WACI,cAACC,GAAD,CAAYlH,IAAG,UAAK5I,GAAL,sBACf,sBAAK8I,UAAU,WAAf,UACI,mBAAG3H,GAAG,YAAN,SAAmB+O,EAASxO,UAC5B,oBAAGP,GAAG,cAAN,4BAA0B,kBAC1B,oBAAGA,GAAG,gBAAN,yCAA+B+O,EAASK,YACxC,mBAAGpP,GAAG,kBAAkByK,QAvDjB,WACnB3J,QAAQC,IAAI,0CAsDA,yCAIJ,eAAC6N,GAAD,WACI,wBAAQnE,QAAS,kBAAMsB,EAAQ7B,KAAK,kBAApC,mDAGA,wBAAQO,QA3DD,WACnBwE,GAAe,IA0DH,uCACiB,IAAhBD,EAAwB,KACrB,eAAChB,GAAD,CACIG,WA1DO,WAE3B,IAAMjB,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAC9CzH,IACKwJ,OAAOzQ,GAAM,cAAe,CACzBqH,QAAS,CACL,eAAgB,mBAChBsH,cAAc,SAAD,OAAWL,IAE5BhH,iBAAiB,IAEpBC,MAAK,SAACC,GACHiH,aAAaG,MAAMN,GACnBlO,EAASf,GAAc,IACvB8N,EAAQ7B,KAAK,SA6CDkE,UAxCK,WACzBa,GAAe,IAwCKf,aAtCQ,WAC5Be,GAAe,IAkCC,UAKI,kFACA,yFACA,yBAAQK,KAAK,OAAOtP,GAAG,aAAvB,UACI,wBAAQwM,MAAM,GAAd,0BACA,wBAAQA,MAAM,YAAd,uEAGA,wBAAQA,MAAM,qBAAd,yDAGA,wBAAQA,MAAM,eAAd,6EAGA,wBAAQA,MAAM,aAAd,sCAOpB,eAACqC,GAAD,WACI,qBAAKlH,UAAU,YAAf,SACI,mEAEJ,qBAAKA,UAAU,OAAO8C,QA3DT,WAErBsB,EAAQ7B,KAAK,cAyDL,SACI,qBACIzC,IAAG,UAAK5I,GAAL,eACHwL,IAAI,cAGZ,qBAAK1C,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,wBAAQA,UAAU,WAAW8C,QA/DjB,WACpBsB,EAAQ7B,KAAK,YA8DL,uC,sHC9VVqF,GAAkBnR,IAAOC,IAAV,qkCA+CfmR,GAAOpR,IAAOC,IAAV,uDAOGoR,GAAS,WAClB,IAAMzQ,EAAWC,cACjB,EAAwBM,mBAAS,GAAjC,mBAAOmQ,EAAP,KAAaC,EAAb,KAQA,OACI,mCACI,eAACJ,GAAD,CAAiB9E,QARH,WACLkF,EAAJ,IAATD,EAAqB,EAAa,GAClC5O,QAAQC,IAAI2O,GACZ1Q,EZ1BG,CACHjB,KAAMT,EACNU,QYwBsB0R,KAKlB,UACI,qBAAK/H,UAAoB,IAAT+H,EAAa,mCAAqC,qBAClE,qBAAK/H,UAAoB,IAAT+H,EAAa,gCAAkC,kBAC/D,cAACF,GAAD,UAAgB,IAATE,EAAa,eAAO,uBCrDrCE,GAAaxR,IAAO2P,QAAV,mfAoBV8B,GAAqBzR,IAAO0R,QAAV,6GAMlBC,GAAqB3R,IAAOC,IAAV,6NAYlB2R,GAAiB5R,IAAOiN,MAAV,qHAOd4E,GAAyB7R,IAAO8R,GAAV,0NAWtBC,GAAe/R,IAAOC,IAAV,+JAQZ+R,GAAchS,IAAOoN,OAAV,gTAiBX3C,GAAQzK,IAAO2P,QAAV,giBAwBLsC,GAAgBjS,IAAO0R,QAAV,6GAMbQ,GAAgBlS,IAAOC,IAAV,oOAYbkS,GAAiBnS,IAAOC,IAAV,sXAqBdmS,GAAYpS,IAAOiN,MAAV,qHAOToF,GAAoBrS,IAAO8R,GAAV,4NAYjB5E,GAAUlN,IAAOC,IAAV,+JAQPkN,GAASnN,IAAOoN,OAAV,iTASY,SAACzM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,aAOzD9E,GAAWxN,IAAOC,IAAV,+JAQRsS,GAAUvS,IAAOoN,OAAV,iTASW,SAACzM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,UAQzDE,GAAUxS,IAAOiN,MAAV,iTASW,SAACtM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,UAQzDG,GAAqBzS,IAAO0S,KAAV,2MASlBC,GAAW3S,IAAOC,IAAV,4QAYR2S,GAAY5S,IAAOyI,IAAV,0FAOXjI,GAAMC,sBACNoS,GAAY,wBAED,SAASC,KACpB,IAAMlS,EAAWC,cACX8M,EAAUC,cACXpN,KACDA,GAAM,6BACNqS,GAAY,oCAIhB,MAA8B1R,mBAAS,IAAvC,mBAAO4R,EAAP,KAAgBC,EAAhB,KACA,EAA8B7R,mBAAS,IAAvC,mBAAO8R,EAAP,KAAgBC,EAAhB,KACA,EACI/R,mBAAS,4DADb,mBAAOgS,EAAP,KAAuBC,EAAvB,KAEA,EACIjS,mBAAS,kEADb,mBAAOkS,EAAP,KAAuBC,EAAvB,KAEMC,EAAgB,4KAAwKV,GAAxK,+DACdhF,EAAY/M,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAzC6M,QAER,EAA0C1M,oBAAS,GAAnD,mBAAOqS,EAAP,KAAsBC,EAAtB,KACA,EAA8CtS,mBAAS,CACnD4R,QAAS,GACTE,QAAS,GACTS,cAAe,KAHnB,mBAAOC,EAAP,KAAwBC,EAAxB,KAKAhR,qBAAU,WACNF,QAAQC,IAAI,yBAEZ,IACMkR,EADU,IAAIC,IAAI5S,OAAO8P,SAAS+C,MACnBF,KACrB,GAAIA,EAAM,CACN,IAAMG,EAAcH,EAAKI,MAAM,KAAK,GAAGA,MAAM,KAAK,GAClDxM,IAAM,CACFjH,IACI,8DACAwT,EACJpM,OAAQ,MACRC,QAAS,CACLqM,cAAc,SAAD,OAAWF,GACxBG,OAAQ,sBAEbpM,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,EAAIxB,MAChB9D,QAAQC,IAAIqF,EAAIxB,KAAK4N,OACrB1R,QAAQC,IAAIqF,EAAIxB,KAAK6N,gBAEjBrM,EAAIxB,KAAK6N,eAET5M,IAAM,CACFjH,IACIA,GAAG,qCAC2BwH,EAAIxB,KAAK4N,OAC3CxM,OAAQ,MACRC,QAAS,CACLsM,OAAQ,sBAEbpM,MAAK,SAACuM,GAEL5R,QAAQC,IAAI2R,EAAK9N,MACZ8N,EAAK9N,MAqBN8F,MAAM,gFACN5J,QAAQC,IAAIqF,EAAIxB,KAAK4N,OAKrB1R,QAAQC,IAAIgR,EAAgBZ,SAC5BwB,EAAqB,2BACdC,GADa,IAEhBzB,QAAS,MAEbrQ,QAAQC,IAAIqF,EAAIxB,KAAK4N,OACrBK,EAAgBzM,EAAIxB,KAAK4N,SAhCzB9H,MAAM,uDACNmH,GAAiB,GACjBG,EAAmB,2BACZD,GADW,IAEdZ,QAAS/K,EAAIxB,KAAK4N,SAEtBG,EAAqB,2BACdC,GADa,IAEhBzB,QAAS,MAIb2B,EAAe,CACXC,SAAU,qBACVC,SAAS,+DAwBrBtI,MAAM,qFAInB,IACH5J,QAAQC,IAAIkL,GAoDZ,SAAS4G,EAAgB7S,GACrBc,QAAQC,IAAI,+BACZD,QAAQC,IAAIgR,EAAgBZ,SAC5BtL,IAAM,CACFjH,IAAKA,GAAM,eACXoH,OAAQ,OACRpB,KAAM,CACFrE,QAASP,KAEdmG,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,EAAIxB,KAAKA,MACrByI,aAAa4F,QACT,SACA9F,KAAK+F,UAAU9M,EAAIxB,KAAKA,KAAKwN,cAEjCpT,EAASf,GAAc,IACvByM,MAAM,gFACNqB,EAAQ7B,KAAK,QAcrB,MAAkD3K,mBAAS,CACvD4R,QAAS,iEACTE,QAAS,uEACTS,cAAe,mEAHnB,mBAAOc,EAAP,KAA0BD,EAA1B,KAKA,EACIpT,mBAAS,+EADb,mBAAO4T,EAAP,KAAwBC,EAAxB,KAEQC,EAAiBnU,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA9CiU,aACR,EAA0B9T,mBAAS,IAAnC,mBAAO+T,EAAP,KAAcC,EAAd,KACA,EAAsChU,mBAAS,CAC3CwT,SAAU,mBACVC,SAAS,GAAD,OAAKpU,GAAL,2BAFZ,mBAAO4U,EAAP,KAAoBV,EAApB,KAuBA9R,qBAAU,WAIgB+Q,EAAgBZ,QAX1B9K,QAAU,EAalBsM,EAAqB,2BAAKC,GAAN,IAAyBzB,QAAS,MAEtDwB,EAAqB,2BACdC,GADa,IAEhBzB,QAAS,oFAGlB,CAACY,EAAgBZ,UAEpBnQ,qBAAU,WAEoB+Q,EAAgBD,cApB9BzL,QAAU,EAqBlBsM,EAAqB,2BAAKC,GAAN,IAAyBd,cAAe,MAE5Da,EAAqB,2BACdC,GADa,IAEhBd,cAAe,oFAGxB,CAACC,EAAgBD,gBA6CpB,IAtF2B2B,GAiH3B,OACI,mCACK7B,EACG,eAAC,GAAD,CAAOjK,UAAU,sBAAjB,UACI,2FACA,sBAAKA,UAAU,iBAAf,UACI,eAAC0I,GAAD,CAAe1I,UAAU,KAAzB,UACI,eAAC2I,GAAD,CAAe3I,UAAU,iBAAzB,UACI,oDACA,8BAAMoK,EAAgBZ,aAE1B,cAACV,GAAD,CAAmB9I,UAAU,mBAA7B,SACI,6BAAKiL,EAAkBzB,eA+B/B,eAACd,GAAD,CAAe1I,UAAU,WAAzB,UACI,eAAC2I,GAAD,CAAe3I,UAAU,iBAAzB,UACI,oDACA,cAAC6I,GAAD,CACIzS,KAAK,OACLuR,KAAK,gBACL7C,YAAY,qBACZH,UAnKLmH,GAoKS,gBApKD,SAAClH,GAChCyF,EAAmB,2BACZD,GADW,mBAEb0B,GAAMlH,EAAEpC,OAAOqC,gBAqKA,cAACiE,GAAD,CAAmB9I,UAAU,mBAA7B,SACI,6BAAKiL,EAAkBd,qBAG/B,cAACzB,GAAD,CAAe1I,UAAU,IAAzB,SACI,eAAC4I,GAAD,CAAgB5I,UAAU,IAA1B,UACI,8CACA,cAAC,GAAD,SAGR,eAAC0I,GAAD,CAAe1I,UAAU,WAAzB,UACI,eAAC2I,GAAD,CAAe3I,UAAU,iBAAzB,UACI,oDACA,cAAC,KAAD,CAAcgF,WA1I1C,SAAwB+G,GACpBN,EAAmBM,EAAW9G,mBA2IV,cAAC6D,GAAD,CAAmB9I,UAAU,mBAA7B,SACKwL,OAGT,cAAC9C,GAAD,CAAe1I,UAAU,WAAzB,SACI,eAAC2I,GAAD,CAAe3I,UAAU,iBAAzB,UACI,gEACA,cAAC,GAAD,UAEI,eAACkJ,GAAD,CACI8C,SA3GnB,SAACpH,GACdzL,QAAQC,IAAIwL,GACZA,EAAEqH,iBACF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAOT,GACvBxS,QAAQC,IAAI8S,GACZhO,IACK2B,KAAK5I,GAAM,eAAgBiV,EAAU,CAClC,eAAgB,mBAChB3N,iBAAiB,IAEpBC,MAAK,SAACC,GACH,IAAQ2M,EAAa3M,EAAIxB,KAAjBmO,SACRD,EAAe,CAAEC,WAAUC,SAAS,GAAD,OAAKpU,GAAL,gBAAgBmU,KACnDrI,MAAM,2GAETsJ,OAAM,SAACC,GACJnT,QAAQoT,MAAMD,OA2FUtM,UAAU,qBAFd,UAII,cAACoJ,GAAD,UACKyC,EACG,cAACxC,GAAD,CACIvJ,IAAK+L,EAAYR,WAGrB,0BAGR,cAACpC,GAAD,CACI7S,KAAK,OACL4J,UAAU,cACV2E,SArGxB,SAACC,GACbzL,QAAQC,IAAIwL,EAAEpC,OAAOgK,MAAM,IAC3BZ,EAAShH,EAAEpC,OAAOgK,MAAM,OAqGQ,cAACxD,GAAD,CAAS5S,KAAK,SAAd,6CAOpB,cAAC,GAAD,CAAS4J,UAAU,kBAAnB,SACI,cAAC,GAAD,CAAQ8C,QA3K5B,SAAoB8B,GAChBzL,QAAQC,IAAI,yEAER6R,EAAkBzB,SAElByB,EAAkBd,eAEE,gFAApBqB,EAEArS,QAAQC,IAAI,yEAEZD,QAAQC,IAAI,mEACZ8E,IAAM,CACFjH,IAAKA,GAAM,gBACXoH,OAAQ,OACRpB,KAAM,CACFrE,QAASwR,EAAgBZ,QACzBiD,SAAUrC,EAAgBD,cAC1BuC,OAAQhB,EACRjE,SAAU+D,EACVmB,WAAYd,EAAYR,YAE7B7M,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,GACO,MAAfA,EAAI3C,OACJiH,MAAM,sDACgB,MAAftE,EAAI3C,OACXiH,MAAM,uDACgB,MAAftE,EAAI3C,SACXiH,MAAM,6DACNmI,EAAgBd,EAAgBZ,eA6I5B,+BAIR,eAACvB,GAAD,CAAYjI,UAAU,qBAAtB,UACI,oDACA,sBAAKA,UAAU,gBAAf,UACI,eAACkI,GAAD,CAAoBlI,UAAU,KAA9B,UACI,eAACoI,GAAD,CAAoBpI,UAAU,iBAA9B,UACI,oDACA,cAACqI,GAAD,CACIjS,KAAK,OACLuR,KAAK,UACL7C,YAAY,0DACZD,MAAO2E,EACP7E,SA3UD,SAACC,GAC5B6E,GAAW,SAACmD,GAAD,OAAehI,EAAEpC,OAAOqC,SAEL,IAA1BD,EAAEpC,OAAOqC,MAAMnG,OACfmL,GAAkB,SAACgD,GAAD,MAAc,8DAEhChD,GAAkB,SAACgD,GAAD,MAAc,YAwUhB,cAACvE,GAAD,CAAwBtI,UAAU,mBAAlC,SACI,6BAAK4J,SAIb,eAAC1B,GAAD,CAAoBlI,UAAU,WAA9B,UACI,eAACoI,GAAD,CAAoBpI,UAAU,iBAA9B,UACI,0DACA,cAACqI,GAAD,CACIjS,KAAK,WACLuR,KAAK,UACL7C,YAAY,gEACZD,MAAO6E,EACP/E,SAjVN,SAACC,GACvB+E,GAAW,SAACiD,GAAD,OAAehI,EAAEpC,OAAOqC,SAEL,IAA1BD,EAAEpC,OAAOqC,MAAMnG,OACfqL,GAAkB,SAAC8C,GAAD,MAAc,oEAEhC9C,GAAkB,SAAC8C,GAAD,MAAc,YA8UhB,cAACvE,GAAD,CAAwBtI,UAAU,mBAAlC,SACI,6BAAK8J,YAKjB,eAACtB,GAAD,CAAcxI,UAAU,sBAAxB,UACI,cAACyI,GAAD,CAAa3F,QAjVN,SAAC8B,GACxBA,EAAEqH,iBAEqB,IAAnBzC,EAAQ9K,QAAmC,IAAnBgL,EAAQhL,QAChCvF,QAAQC,IAAI,gFAGhB8E,IACK2B,KACG5I,GAAM,SAEN,CAAE2B,QAAS4Q,EAASsD,SAAUpD,GAC9B,CACIpL,QAAS,CACL,eAAgB,oBAEpBC,iBAAiB,IAGxBC,MAAK,SAACC,GACHtF,QAAQC,IAAIqF,EAAIxB,KAAKA,MACrByI,aAAa4F,QACT,SACA9F,KAAK+F,UAAU9M,EAAIxB,KAAKA,KAAKwN,cAEjCpT,EAASf,GAAc,IACvByM,MAAM,kCACNqB,EAAQ7B,KAAK,SAsTL,gCAKA,eAACkG,GAAD,CAAa3F,QAlSjC,WACI3J,QAAQC,IAAI,0EACRkL,EACAvB,MAAM,kEAENpL,OAAO8P,SAASsF,OAAO/C,IA6RqCjB,QAAM,EAAtD,UACI,cAAC,KAAD,CAAiBpG,KAAMqK,OACvB,8ECrtB5B,I,0CAAM9L,GAAQzK,IAAO2P,QAAV,8dAuBLsC,GAAgBjS,IAAO0R,QAAV,uGAMbQ,GAAgBlS,IAAOC,IAAV,uMAabmS,GAAYpS,IAAOiN,MAAV,4GAOToF,GAAoBrS,IAAO8R,GAAV,6FAMjB0E,GAAWxW,IAAOyW,GAAV,sFAGF,SAAA9V,GAAK,OAAIA,EAAM+V,MAAN,uEAGfxJ,GAAUlN,IAAOC,IAAV,0HAOPkN,GAASnN,IAAOoN,OAAV,0OASW,SAAAzM,GAAK,OAAIA,EAAMgW,KAAN,uDAI1BC,GAAa5W,IAAOoN,OAAV,gJASD,SAASyJ,KACD/V,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA1CqV,SAAR,IACMzV,EAAWC,cACX8M,EAAUC,cAGhB,EAA8BzM,mBAAS,IAAvC,mBAAQ2V,EAAR,KAAgBC,EAAhB,KACA,EAA8B5V,mBAAS,IAAvC,mBAAQ6V,EAAR,KAAgBC,EAAhB,KACA,EAAsD9V,mBAAS,wEAA/D,mBAAQ+V,EAAR,KAA4BC,EAA5B,KACA,EAAsDhW,mBAAS,CAC7DiW,UAAW,uEACXC,WAAY,6DACZC,YAAa,uFAHf,mBAAQC,EAAR,KAA4BC,EAA5B,KAKQJ,EAAuCG,EAAvCH,UAAWC,EAA4BE,EAA5BF,WAAYC,EAAgBC,EAAhBD,YAC/B,EAAgCnW,mBAAS,IAAzC,mBAAQsW,EAAR,KAAiBC,EAAjB,KAEMC,EAAgB,oEAsFtB,EAAwCxW,oBAAS,GAAjD,mBAAQyP,EAAR,KAAqBC,EAArB,KAcA,EAA4C1P,mBAAS,IAArD,mBAAQyW,EAAR,KAAuBC,EAAvB,KAoBA,OACE,eAAC,GAAD,CAAOtO,UAAU,qBAAjB,UACE,uEAEA,sBAAKA,UAAU,gBAAf,UACE,eAAC,GAAD,CAAeA,UAAU,KAAzB,UACE,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACE,uEACA,cAAC,GAAD,CACE5J,KAAK,WACLuR,KAAK,SACL7C,YAAY,6EACZH,SAjIY,SAACC,GACvB4I,GAAU,SAAAe,GAAI,OAAI3J,EAAEpC,OAAOqC,SAEG,IAA1BD,EAAEpC,OAAOqC,MAAMnG,OACjBkP,GAAsB,SAAAW,GAAI,MAAI,0EAE9BX,GAAsB,SAAAW,GAAI,MAAI,OA4HtB1J,MAAO0I,OAGX,cAAC,GAAD,CAAmBvN,UAAU,mBAA7B,SACE,cAACiN,GAAD,UAAWU,SAIf,eAAC,GAAD,CAAe3N,UAAU,WAAzB,UACE,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACE,iEACA,cAAC,GAAD,CACE5J,KAAK,WACLuR,KAAK,SACL7C,YAAY,gEACZH,SAvIY,SAACC,GACvB8I,GAAU,SAAAa,GAAI,OAAI3J,EAAEpC,OAAOqC,SAGG,IAA1BD,EAAEpC,OAAOqC,MAAMnG,OACjBuP,GAAsB,SAAAM,GACpB,OAAO,2BAAIA,GAAX,IAAiBV,UAAW,4EAG9BI,GAAsB,SAAAM,GACpB,OAAO,2BAAIA,GAAX,IAAiBV,UAAW,QAI3BO,EAAcI,KAAK5J,EAAEpC,OAAOqC,QAM/BoJ,GAAsB,SAAAM,GACpB,OAAO,2BAAIA,GAAX,IAAiBR,YAAa,QAEhCI,GAAW,SAAAI,GAAI,MAAI,oDARnBN,GAAsB,SAAAM,GACpB,OAAO,2BAAIA,GAAX,IAAiBR,YAAa,kIAEhCI,GAAW,SAAAI,GAAI,MAAI,OAQjB3J,EAAEpC,OAAOqC,MAAMnG,OAAS,EAC1BuP,GAAsB,SAAAM,GACpB,OAAO,2BAAIA,GAAX,IAAiBT,WAAY,kEAG/BG,GAAsB,SAAAM,GACpB,OAAO,2BAAIA,GAAX,IAAiBT,WAAY,SAwGvBjJ,MAAO4I,OAGX,eAAC,GAAD,CAAmBzN,UAAU,mBAA7B,UACE,cAACiN,GAAD,CAAUE,OAAK,EAAf,SAAiBe,IACjB,cAACjB,GAAD,UAAWY,IACX,cAACZ,GAAD,UAAWa,IACX,cAACb,GAAD,UAAWc,aAKjB,cAAC,GAAD,CAAS/N,UAAU,iBAAnB,SACE,gCACE,cAAC,GAAD,CAAQ8C,QAhHU,SAAC8B,GAGzB,IAAI6J,EAAcL,EAAcI,KAAKf,GACrCtU,QAAQC,IAAI,+EAAoBqV,GAKhC,IAAMlJ,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAE9CzH,IAAMwQ,IAAI,4BACV,CAAE5B,SAAUW,GACZ,CAAEnP,QAAS,CACT,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BiH,IAE3BhH,iBAAiB,IAChBC,MAAK,SAACC,GAENpH,EdxIK,CACHjB,KAAMP,EACNQ,ScsIoB,IACtB+N,EAAQ7B,KAAK,eA2F2B6K,MAAI,EAAxC,0BACA,cAAC,GAAD,CAAQtK,QAxFY,SAAC8B,GAC3BzL,QAAQC,IAAI,uDACZoU,GAAU,SAAAe,GAAI,MAAI,MAClBb,GAAU,SAAAa,GAAI,MAAI,MAClBJ,GAAW,SAAAI,GAAI,MAAI,MAEnBnK,EAAQ7B,KAAK,UAkFP,+BAIJ,cAAC8K,GAAD,CAAYrN,UAAU,iBAAiB8C,QAjFb,SAAC8B,GAC7BzL,QAAQC,IAAI,sDACZkO,GAAe,IA+Eb,sCAGED,EACE,eAAChB,GAAD,CACEG,WA/DoB,SAAC5B,GAC7BzL,QAAQC,IAAI,4DA+DJqN,UA5DmB,SAAC7B,GAC5BzL,QAAQC,IAAI,0DACZkO,GAAe,IA2DPf,aAtEsB,SAAC3B,GAC/BzL,QAAQC,IAAI,oEACZkO,GAAe,IAiET,UAKE,kFACA,wBAAQK,KAAK,UAAU3H,UAAU,gBAAgB2E,SA7EhC,SAACC,GAC1B0J,GAAiB,SAAAC,GAAI,OAAI3J,EAAEpC,OAAOqC,UA4EqDA,MAAOwJ,EAAtF,SAtFc,CACtB,CAAC,KAAM,8CACP,CAAC,aAAc,6DACf,CAAC,qBAAsB,+CACvB,CAAC,kBAAmB,mEACpB,CAAC,MAAO,iBAmFoBvU,KAAI,SAAC6U,EAAMrR,GACzB,OAAQ,wBAAQuH,MAAO8J,EAAK,GAApB,SAAmCA,EAAK,IAAXrR,WAM7C,MCxSV,I,eAAM4D,GAAQzK,IAAO2P,QAAV,giBAwBLsC,GAAgBjS,IAAO0R,QAAV,6GAMbQ,GAAgBlS,IAAOC,IAAV,oOAYbkS,GAAiBnS,IAAOC,IAAV,sXAqBdmS,GAAYpS,IAAOiN,MAAV,qHAOToF,GAAoBrS,IAAO8R,GAAV,4NAYjB5E,GAAUlN,IAAOC,IAAV,+JAQPkN,GAASnN,IAAOoN,OAAV,iTASY,SAACzM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,aAOzD9E,GAAWxN,IAAOC,IAAV,+JAQRsS,GAAUvS,IAAOoN,OAAV,iTASW,SAACzM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,UAQzDE,GAAUxS,IAAOiN,MAAV,iTASW,SAACtM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,UAQzDG,GAAqBzS,IAAO0S,KAAV,2MASlBC,GAAW3S,IAAOC,IAAV,4QAYR2S,GAAY5S,IAAOyI,IAAV,0FAMXjI,GAAMC,sBAGK,SAAS0X,KAEf3X,KACDA,GAAM,8BAEV,MAA8CW,mBAAS,CACnD4R,QAAS,GACTE,QAAS,GACTS,cAAe,KAHnB,mBAAOC,EAAP,KAAwBC,EAAxB,KAKA,EAAkDzS,mBAAS,CACvD4R,QAAS,iEACTE,QAAS,uEACTS,cAAe,mEAHnB,mBAAOc,EAAP,KAA0BD,EAA1B,KAKA,EAAwCpT,mBAAS,IAAjD,mBAAOiX,EAAP,KAAqBC,EAArB,KACA,EACIlX,mBAAS,iGADb,mBAAOmX,EAAP,KAA4BC,EAA5B,KAEA,EACIpX,mBAAS,+EADb,mBAAO4T,EAAP,KAAwBC,EAAxB,KAEQC,EAAiBnU,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA9CiU,aACR,EAA0B9T,mBAAS,IAAnC,mBAAO+T,EAAP,KAAcC,EAAd,KACA,EAAsChU,mBAAS,CAC3CwT,SAAU,mBACVC,SAAS,GAAD,OAAKpU,GAAL,2BAFZ,mBAAO4U,EAAP,KAAoBV,EAApB,KAIM/G,EAAUC,cAEV4K,EAAoB,SAACnD,GAAD,OAAS,SAAClH,GAChCyF,EAAmB,2BACZD,GADW,mBAEb0B,EAAMlH,EAAEpC,OAAOqC,WAYxB,SAASqK,EAAeC,GACpB,MAAO,iEAAiEX,KACpEW,GAQR,SAASC,EAAQC,EAAMC,GACnB,OAAOD,IAASC,EAOpBjW,qBAAU,WAZV,IAV8B8V,IAyBD/E,EAAgBZ,QAxBlC,yBAAyBgF,KAAKW,IAyBf/E,EAAgBZ,QAf1B9K,QAAU,EAiBlBsM,EAAqB,2BAAKC,GAAN,IAAyBzB,QAAS,MAEtDwB,EAAqB,2BACdC,GADa,IAEhBzB,QAAS,oFAGlB,CAACY,EAAgBZ,UAEpBnQ,qBAAU,WAEF6V,EAAe9E,EAAgBV,UAC/BvQ,QAAQC,IAAI,oDAEZ4R,EAAqB,2BAAKC,GAAN,IAAyBvB,QAAS,OAC9CwF,EAAe9E,EAAgBV,WACvCvQ,QAAQC,IAAI,8CACZ4R,EAAqB,2BACdC,GADa,IAEhBvB,QAAS,yFAKb0F,EAAQhF,EAAgBV,QAASmF,IACT,IAAxBA,EAAanQ,OAEbsQ,EAAuB,iGAChBI,EAAQhF,EAAgBV,QAASmF,GACxCG,EAAuB,IAEvBA,EAAuB,sFAE3B7V,QAAQC,IAAIgR,GACZjR,QAAQC,IAAI6R,KACb,CAACb,EAAgBV,QAASmF,IAE7BxV,qBAAU,WAEoB+Q,EAAgBD,cAhD9BzL,QAAU,EAiDlBsM,EAAqB,2BAAKC,GAAN,IAAyBd,cAAe,MAE5Da,EAAqB,2BACdC,GADa,IAEhBd,cAAe,oFAGxB,CAACC,EAAgBD,gBA4EpB,OACI,eAAC,GAAD,CAAOnK,UAAU,sBAAjB,UACI,0DACA,sBAAKA,UAAU,iBAAf,UACI,eAAC,GAAD,CAAeA,UAAU,KAAzB,UACI,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACI,oDACA,cAAC,GAAD,CACI5J,KAAK,OACLuR,KAAK,UACL7C,YAAY,qBACZH,SAAUsK,EAAkB,gBAGpC,cAAC,GAAD,CAAmBjP,UAAU,mBAA7B,SACI,6BAAKiL,EAAkBzB,eAG/B,eAAC,GAAD,CAAexJ,UAAU,WAAzB,UACI,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACI,0DACA,cAAC,GAAD,CACI5J,KAAK,WACLuR,KAAK,UACL7C,YAAY,2BACZH,SAAUsK,EAAkB,gBAGpC,cAAC,GAAD,CAAmBjP,UAAU,mBAA7B,SACI,6BAAKiL,EAAkBvB,eAG/B,eAAC,GAAD,CAAe1J,UAAU,WAAzB,UACI,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACI,uEACA,cAAC,GAAD,CACI5J,KAAK,WACLuR,KAAK,eACL7C,YAAY,wCACZH,SAnMG,SAACC,GACxBkK,EAAgBlK,EAAEpC,OAAOqC,aAqMb,cAAC,GAAD,CAAmB7E,UAAU,mBAA7B,SACI,6BAAK+O,SAGb,eAAC,GAAD,CAAe/O,UAAU,WAAzB,UACI,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACI,oDACA,cAAC,GAAD,CACI5J,KAAK,OACLuR,KAAK,gBACL7C,YAAY,qBACZH,SAAUsK,EAAkB,sBAGpC,cAAC,GAAD,CAAmBjP,UAAU,mBAA7B,SACI,6BAAKiL,EAAkBd,qBAG/B,cAAC,GAAD,CAAenK,UAAU,IAAzB,SACI,eAAC,GAAD,CAAgBA,UAAU,IAA1B,UACI,8CACA,cAAC,GAAD,SAGR,eAAC,GAAD,CAAeA,UAAU,WAAzB,UACI,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACI,oDACA,cAAC,KAAD,CAAcgF,WA/IlC,SAAwB+G,GACpBN,EAAmBM,EAAW9G,mBAgJlB,cAAC,GAAD,CAAmBjF,UAAU,mBAA7B,SACKwL,OAGT,cAAC,GAAD,CAAexL,UAAU,WAAzB,SACI,eAAC,GAAD,CAAeA,UAAU,iBAAzB,UACI,gEACA,cAAC,GAAD,UAEI,eAAC,GAAD,CACIgM,SA5GX,SAACpH,GACdzL,QAAQC,IAAIwL,GACZA,EAAEqH,iBACF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAOT,GACvBxS,QAAQC,IAAI8S,GACZhO,IACK2B,KAAK5I,GAAM,eAAgBiV,EAAU,CAClC,eAAgB,sBAChB3N,iBAAiB,IAEpBC,MAAK,SAACC,GACH,IAAQ2M,EAAa3M,EAAIxB,KAAjBmO,SACRD,EAAe,CAAEC,WAAUC,SAAS,GAAD,OAAKpU,GAAL,gBAAgBmU,KACnDrI,MAAM,2GAETsJ,OAAM,SAACC,GACJnT,QAAQoT,MAAMD,OA4FEtM,UAAU,qBAFd,UAII,cAAC,GAAD,UACK6L,EACG,cAAC,GAAD,CAAW/L,IAAK+L,EAAYR,WAE5B,0BAGR,cAAC,GAAD,CACIjV,KAAK,OACL4J,UAAU,cACV2E,SApGhB,SAACC,GACbzL,QAAQC,IAAIwL,EAAEpC,OAAOgK,MAAM,IAC3BZ,EAAShH,EAAEpC,OAAOgK,MAAM,OAoGA,cAAC,GAAD,CAASpW,KAAK,SAAd,6CAOpB,cAAC,GAAD,CAAS4J,UAAU,kBAAnB,SACI,cAAC,GAAD,CAAQ8C,QA9KpB,SAAoB8B,GAChBzL,QAAQC,IAAI,yEAER6R,EAAkBzB,SAClByB,EAAkBvB,SAClBuB,EAAkBd,eAClB4E,GACoB,gFAApBvD,EAEArS,QAAQC,IAAI,yEAEZD,QAAQC,IAAI,mEACZ8E,IAAM,CACFjH,IAAKA,GAAM,gBAEXoH,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAGpBrB,KAAM,CACFrE,QAASwR,EAAgBZ,QACzBsD,SAAU1C,EAAgBV,QAC1B+C,SAAUrC,EAAgBD,cAC1BuC,OAAQhB,EACRjE,SAAU+D,EACVmB,WAAYd,EAAYR,UAE5B9M,iBAAiB,IAClBC,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,GACO,MAAfA,EAAI3C,OACJiH,MAAM,sDACgB,MAAftE,EAAI3C,OACXiH,MAAM,sDACgB,MAAftE,EAAI3C,SACXiH,MAAM,6DACNqB,EAAQ7B,KAAK,gBAyIjB,+BCxehB,IAAMrB,GAAQzK,IAAOC,IAAV,wVAmBLwQ,GAAWzQ,IAAOC,IAAV,wrCAyDRuI,GAAUxI,IAAOyI,IAAV,ySAePqQ,GAAW9Y,IAAOC,IAAV,gWAqBR8Y,GAAO/Y,IAAOC,IAAV,o3BA6CK,SAAS+Y,KAmBtB,IAjBA,IAAMpY,EAAWC,cACXE,EAAQD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eACjCmK,EAAwBpK,EAAxBoK,MAAOC,EAAiBrK,EAAjBqK,IAAKC,EAAYtK,EAAZsK,QACd4N,EAAiB,SAAA1N,GAAI,OAAI,SAACC,GAC9B5K,EAAS,CAAEjB,KAAOX,EAAqBY,QAAS2L,MAE5C2N,EAAqB,SAAC/N,EAAOC,GAAR,OAAgB,SAACI,GAC1C5K,EAAS,CAACjB,KAAMV,EAAuBW,QAAS,CAACuL,QAAOC,WAOpDM,EAAQC,KAAKC,KAAK,GAElBuN,EAAQ,GACNxS,EAAI,EAAGA,EAAI+E,EAAO/E,IACxBwS,EAAMrN,KAAKnF,EAAI,GAGjB,IAAMoF,EAASoN,EAAMnN,MAAMb,EAAOC,GAElC,OACE,eAAC,GAAD,WACE,cAAC8E,GAAD,IACA,eAAC,GAAD,WACE,sBAAK3G,UAAU,OAAf,UACE,cAAC,GAAD,CAASF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,YAC1D,eAAC6M,GAAD,WACE,4BAAI,0CACJ,4BAAI,UACJ,gDAAS,kBACT,gDAAS,kBACT,gDAAS,8BAGb,sBAAKvP,UAAU,OAAf,UACE,cAAC,GAAD,CAASF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,YAC1D,eAAC6M,GAAD,WACE,4BAAI,0CACJ,4BAAI,UACJ,gDAAS,kBACT,gDAAS,kBACT,gDAAS,8BAGb,sBAAKvP,UAAU,OAAf,UACE,cAAC,GAAD,CAASF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,YAC1D,eAAC6M,GAAD,WACE,4BAAI,0CACJ,4BAAI,UACJ,gDAAS,kBACT,gDAAS,kBACT,gDAAS,8BAGb,sBAAKvP,UAAU,OAAf,UACE,cAAC,GAAD,CAASF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,YAC1D,eAAC6M,GAAD,WACE,4BAAI,0CACJ,4BAAI,UACJ,gDAAS,kBACT,gDAAS,kBACT,gDAAS,iCASf,eAACC,GAAD,WACE,oBAAIxP,UAAU,YAAd,SACE,wBACE3H,GAAG,OACH2H,UAAU,iBACV8C,QAAS,WACP,GAAe,IAAZhB,EAAe,OAAOiB,MAAM,6DAC5BjB,EAAU,KAAO,GAGlB6N,EAFU/N,EAAQ,GACRC,EAAM,IAGlB6N,EAAe5N,EAAU,IAV7B,4BAiBDU,EAAO1I,KAAI,SAAAkJ,GAAE,OACZ,oBAAIhD,UAAU,YAAd,SACE,wBACEA,UAAU,iBACV8C,QAAS,WACP4M,EAAe1M,IAHnB,SAMGA,KAP0BA,MAajC,oBAAIhD,UAAU,YAAd,SACE,wBACE3H,GAAG,OACH2H,UAAU,iBACV8C,QAAS,WACJhB,EAAU,KAAO,GAGlB6N,EAFU/N,EAAQ,GACRC,EAAM,IAGlB6N,EAAe5N,EAAU,IAT7B,kC,iGCnQJZ,GAAQzK,IAAOC,IAAV,scAkBLkN,GAASnN,IAAOoN,OAAV,wVAKS,SAACzM,GAAD,OAAYA,EAAMyY,MAAQ,MAAQ,QAGxC,SAACzY,GAAD,OAAYA,EAAMyY,MAAQ,cAAgB,gBAC3C,SAACzY,GAAD,OAAYA,EAAMyY,MAAQ,QAAU,UAO5C5G,GAAUxS,IAAOiN,MAAV,mTASW,SAACtM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,UASzD+G,GAAiBrZ,IAAO0S,KAAV,yXAoBd4G,GAAetZ,IAAO2P,QAAV,8QAaZ4J,GAAoBvZ,IAAOC,IAAV,0JAQjBuZ,GAAmBxZ,IAAOC,IAAV,0OAahBwZ,GAAmBzZ,IAAO0R,QAAV,gIAOhBgI,GAAe1Z,IAAOoN,OAAV,mVAKJ,SAACzM,GAAD,OAAYA,EAAMgZ,OAAS,kBAAoB,oBAavDC,GAAc5Z,IAAO2P,QAAV,yPAaXkK,GAAa7Z,IAAO0R,QAAV,6LAWVoI,GAAY9Z,IAAO+Z,SAAV,uVAGD,SAACpZ,GAAD,OAAYA,EAAMqZ,MAAQ,OAAS,UAShC,SAACrZ,GAAD,OAAYA,EAAMqZ,MAAQ,OAAS,UAC/B,SAACrZ,GAAD,OAAYA,EAAMqZ,MAAQ,QAAU,WAGnDrH,GAAW3S,IAAOC,IAAV,4QAYR2S,GAAY5S,IAAOyI,IAAV,0FAMT8J,GAAUvS,IAAOoN,OAAV,iTASW,SAACzM,GAAD,OAAYA,EAAM2R,OAAS,UAAY,UAO3D9R,GAAMC,sBAEK,SAASwZ,KACpB,MAAkCnZ,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAvD2P,EAAR,EAAQA,SAAUuJ,EAAlB,EAAkBA,YAClB,EAA0C/Y,qBAA1C,mBAAOgZ,EAAP,KAAsBC,EAAtB,KACA,EAAoCjZ,qBAApC,mBAAOkZ,EAAP,KAAmBC,EAAnB,KACA,EAAoCnZ,qBAApC,mBAAOoZ,EAAP,KAAmBC,EAAnB,KACA,EAA0BrZ,mBAAS,IAAnC,mBAAO+T,EAAP,KAAcC,EAAd,KACA,EAAsChU,mBAAS,CAC3CwT,SAAU,gBACVC,SAAS,GAAD,OAAKpU,GAAL,wBAFZ,mBAAO4U,EAAP,KAAoBV,EAApB,KAIKlU,KACDA,GAAM,8BAGV,MAA0BW,mBAAS,IAAnC,mBAAOsZ,EAAP,KAAcC,EAAd,KAKA9X,qBAAU,WACNF,QAAQC,IAAIgO,EAASxO,WACtB,IAIH,IAcA,EAAgChB,mBANxB,wEAMR,mBAeA,GAfA,UAe0DA,mBAAS,KAAnE,mBAAOwZ,EAAP,KAA8BC,EAA9B,KAEA,EAAwDzZ,mBAAS,CAC7DC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPsZ,QAAQ,EACRC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACNC,KAAK,IATT,mBAAOC,EAAP,KAA6BC,EAA7B,KA+DA,EAA4Cha,mBAAS,WAArD,mBAAOia,EAAP,KAAuBC,EAAvB,KACA,EAAkDla,mBAAS,WAA3D,mBAAOma,EAAP,KAA0BC,EAA1B,KAqBA,EAAgCpa,mBAAS,IAAzC,mBAAOqa,EAAP,KAAiBC,GAAjB,KAkFA,OACI,eAAC,GAAD,CAAOlS,UAAU,YAAjB,UACI,eAAC8P,GAAD,CACI9P,UAAU,qCACVgM,SAhCK,SAACpH,GACdzL,QAAQC,IAAIwL,GACZA,EAAEqH,iBACF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAOT,GACvBxS,QAAQC,IAAI8S,GACZhO,IACK2B,KAAK5I,GAAM,cAAeiV,EAAU,CACjC,eAAgB,mBAChB3N,iBAAiB,IAEpBC,MAAK,SAACC,GACH,IAAQ2M,EAAa3M,EAAIxB,KAAjBmO,SACRD,EAAe,CACXC,WACAC,SAAS,GAAD,OAAKpU,GAAL,gBAAgBmU,KAE5BrI,MAAM,2GAETsJ,OAAM,SAACC,GACJnT,QAAQoT,MAAMD,OAUlB,UAII,yBAAStM,UAAU,aAAnB,SACI,cAACuQ,GAAD,CACI5L,SAvNM,SAACC,GACvBuM,GAAS,SAAC5C,GAAD,OAAU3J,EAAEpC,OAAOqC,UAuNZA,MAAOqM,EACPT,OAAK,MAGb,cAAC,GAAD,UACK5E,EACG,cAAC,GAAD,CAAW/L,IAAK+L,EAAYR,WAE5B,0BAGR,cAAC,GAAD,CACIjV,KAAK,OACL4J,UAAU,eACV2E,SA5BA,SAACC,GACbzL,QAAQC,IAAIwL,EAAEpC,OAAOgK,MAAM,IAC3BZ,EAAShH,EAAEpC,OAAOgK,MAAM,KA2BZqD,OAAK,IAGT,cAAC,GAAD,CAASzZ,KAAK,SAAd,mCAGJ,eAAC2Z,GAAD,CAAc/P,UAAU,iBAAxB,UACI,eAACgQ,GAAD,CAAmBhQ,UAAU,oBAA7B,UACI,eAACiQ,GAAD,CAAkBjQ,UAAU,eAA5B,UACI,mFACA,cAACkQ,GAAD,CACIlQ,UAAU,mBACV8C,QA9LE,SAAC8B,GACvB,GAA0B,YAAtBA,EAAEpC,OAAO2P,SAAb,CAGA,IAFA,IAAIxD,EAAO/J,EAAEpC,QAELmM,EAAKyD,UAAUC,SAAS,kBAK5B,GAJA1D,EAAOA,EAAK2D,WACZnZ,QAAQC,IAAI,gBAAiBuV,EAAKhH,MAClCkJ,EAAiBlC,EAAKhH,MAEA,YAAlBgH,EAAKwD,SAEL,YADAxD,EAAO,MAKXA,GAAQyC,EAAsBmB,SAAS5D,EAAKhH,OAC5C0J,GAAyB,SAAC/O,GAAD,oBAClBA,EAAIkQ,QAAO,SAACC,GAAD,OAAaA,IAAY9D,EAAKhH,YAEhDiK,GAAwB,SAACc,GACrB,OAAO,2BAAKA,GAAZ,mBAAyB/D,EAAKhH,MAAO,SAGzC0J,GAAyB,SAAC/O,GAAD,6BAAaA,GAAb,CAAkBqM,EAAKhH,UAChDiK,GAAwB,SAACc,GACrB,OAAO,2BAAKA,GAAZ,mBAAyB/D,EAAKhH,MAAO,UAmK7B,SAvNH,CACb,QACA,SACA,QACA,QACA,SACA,QACA,SACA,OACA,OAkN8B7N,KAAI,SAACjB,EAASyE,GACpB,OACI,cAAC6S,GAAD,CAEIxI,KAAM9O,EACNmH,UAAU,gBACV5J,KAAK,SACLga,OAAQuB,EAAqB9Y,GAC7BiK,QAAS,kBA7FxB6P,EA6F0C9Z,EA5F3DM,QAAQC,IAAI,UAAYuZ,QAET,UAAXA,GACW,WAAXA,GACW,UAAXA,GACW,UAAXA,EAEA9B,EAAiB8B,GAEN,WAAXA,GACW,UAAXA,GACW,WAAXA,EAEA5B,EAAc4B,GACI,SAAXA,GAAgC,QAAXA,GAC5B1B,EAAc0B,IAhBtB,IAAqBA,GAuFW,SAQI,qBACI7S,IAAG,UAAK5I,GAAL,2BAA8C2B,EAA9C,WARFyE,WAgBzB,eAAC2S,GAAD,CAAkBjQ,UAAU,eAA5B,UACI,mFACA,eAACsQ,GAAD,WACI,wBACItQ,UAAU,MACV6E,MAAOgN,EACPlN,SApKH,SAACC,GACtBkN,EAAkBlN,EAAEpC,OAAOqC,QAgKP,SAlLL,CACf,CAAC,UAAW,6BACZ,CAAC,UAAW,sBACZ,CAAC,SAAU,iBAoLyB/K,KAAI,SAAC6U,EAAMrR,GACnB,OACI,wBAAQuH,MAAO8J,EAAK,GAApB,SACKA,EAAK,IADmBrR,QAMzC,wBACI0C,UAAU,SACV6E,MAAOkN,EACPpN,SA7KA,SAACC,GACzBoN,EAAqBpN,EAAEpC,OAAOqC,QAyKV,SAxLF,CAClB,CAAC,UAAW,6BACZ,CAAC,SAAU,sBACX,CAAC,QAAS,wBA0L6B/K,KAAI,SAAC6U,EAAMrR,GACtB,OACI,wBAAQuH,MAAO8J,EAAK,GAApB,SACKA,EAAK,IADmBrR,iBAUrD,eAAC+S,GAAD,WACI,cAACE,GAAD,CACIna,KAAK,OACL0O,YAAY,+CACZD,MAAOoN,EACPtN,SAhLI,SAACC,GACrBsN,GAAYtN,EAAEpC,OAAOqC,UAiLT,cAAC,GAAD,CACI7E,UAAU,eACV8C,QA/KQ,SAAC8B,GACzBzL,QAAQC,IAAI,sDAIZD,QAAQC,IAAIgO,EAASxO,SACrBsF,IAAM,CACFjH,IAAKA,GAAM,cACXoH,OAAQ,OAIRpB,KAAM,CACFrE,QAASwO,EAASxO,QAClBL,WAAYsT,EAAYR,SACxB7S,WAAY0Y,EACZ5Y,aAAc2Z,EACdpZ,QAAS+X,EACT9X,KAAMgY,EACNrY,KAAMuY,EACNtY,OAAQmZ,EACR1Z,UAAW4Z,EACXhZ,UAAW4X,EAAYlW,IACvBzB,UAAW2X,EAAY/V,KAE3B2D,iBAAiB,KAoJT,mCCphBpB,I,iCAAM2C,GAAQzK,IAAOC,IAAV,kkBA6BLkc,GAAanc,IAAOC,IAAV,oJASVmc,GAAQpc,IAAOC,IAAV,6VAoBLoc,GAAerc,IAAOC,IAAV,yGAUZqc,GAAUtc,IAAOC,IAAV,wxBA4CPsQ,GAAavQ,IAAOyI,IAAV,qMAYVD,GAAUxI,IAAOyI,IAAV,uXAmBP8T,GAAcvc,IAAOC,IAAV,gYAmBXuc,GAAcxc,IAAOyI,IAAV,iKAUXgU,GAAYzc,IAAOC,IAAV,yXAqBTyc,GAAO1c,IAAOC,IAAV,ubA0BJiN,GAAUlN,IAAOC,IAAV,o3BA8CP0c,GAAY3c,IAAOC,IAAV,glBAmCA,SAAS2c,KACtB,IAAMjP,EAAUC,cAChB,EAA4BzM,oBAAS,GAArC,mBAAO0b,EAAP,KAEA,GAFA,KAEwB1b,oBAAS,IAAjC,mBAAOwV,EAAP,KAAamG,EAAb,KAEA,EAAoC3b,oBAAS,GAA7C,mBAAO4b,EAAP,KAAmBC,EAAnB,KAoBMC,EAAuB,WAC3BD,GAAc,GACdF,GAAQ,IAEJI,EAA0B,WAC9BF,GAAc,GACdF,GAAQ,IASV,EAA8B3b,mBAAS,GAAvC,mBAAOgc,EAAP,KAAgBC,EAAhB,KACA,EAAkCjc,oBAAS,GAA3C,mBAAOkc,EAAP,KAAkBC,EAAlB,KAKMC,EAAe,WACnBH,EAAWlc,OAAOsc,SAEhBF,EADCH,EAAU,MAsBf,OAPAva,qBAAU,WAER,OADA1B,OAAOuc,iBAAiB,SAAUF,GAC3B,WACLrc,OAAOwc,oBAAoB,SAAUH,OAKvC,eAAC,GAAD,WACE,cAACZ,GAAD,UAEIU,EACA,qBACEhU,IAAG,UAAK5I,GAAL,uBAAkDwL,IAAI,MACzDI,QArBU,WAElBnL,OAAOyc,SAAS,CAACC,IAAK,EAAGC,SAAU,WACnCT,EAAW,GACXE,GAAa,MAkBF,OAGT,cAACpN,GAAD,IACA,eAACiM,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,UACE,cAAC,KAAD,CAAiBnQ,KAAMC,KAASC,KAAK,KAAK7C,UAAU,QAAQ8C,QAnD9C,SAAC8B,GACvBzL,QAAQC,IAAIwL,EAAE2P,oBAqDR,+BAAO,0DAGT,eAACxB,GAAD,WACE,sBAAK/S,UAAU,cAAf,UACE,cAAC,GAAD,CAAYF,IAAI,qBAChB,sBAAME,UAAU,WAAhB,SAA4B,uBAC5B,sBAAMA,UAAU,OAAhB,SAAwB,0BAE1B,mBAAGA,UAAU,WAAb,SAAyB,mEAG7B,cAAC,GAAD,CAASF,IAAG,UAAK5I,GAAL,eAA0CwL,IAAI,YAE1D,eAACsQ,GAAD,WACI,cAACC,GAAD,CAAanT,IAAG,UAAK5I,GAAL,6BAAwDwL,IAAI,mCAC5E,cAACuQ,GAAD,CAAanT,IAAG,UAAK5I,GAAL,8BAAyDwL,IAAI,mCAC7E,cAACuQ,GAAD,CAAanT,IAAG,UAAK5I,GAAL,2BAAsDwL,IAAI,sCAI9E,mBAAG1C,UAAU,YAAb,6CACA,eAACkT,GAAD,WACI,cAAC,KAAD,CAAiBvQ,KAAM6R,KAAU3N,MAAM,WACvC,cAAC,KAAD,CAAiBlE,KAAM6R,KAAU3N,MAAM,YAG3C,cAACsM,GAAD,UACE,s7BAKF,eAAC,GAAD,WACE,wBAAQnT,UAAU,iBAAiB6E,MAAM,SAAS/B,QA7GrC,WACjB2Q,GAAeH,GACflP,EAAQ7B,QA2GJ,2BACgB,IAAfiR,EAAuB,KACtB,cAACnN,GAAD,CACEG,WAxGa,WACrBrN,QAAQC,IAAI,4BACZqa,GAAc,IAuGNhN,UAAWiN,EACXnN,aAAcoN,EAHhB,8DAMF,wBAAQ3T,UAAU,iBAAiB8C,QA1HxB,WACfyQ,GAASD,GACTlP,EAAQ7B,QAwHJ,2BACU,IAAT6K,EAAiB,KAChB,cAAC/G,GAAD,CACEG,WApHW,WACnBrN,QAAQC,IAAI,4BACZma,GAAQ,IAmHA9M,UAAWiN,EACXnN,aAAcoN,EAHhB,oEC/aV,I,YAAMzS,GAAQzK,IAAOC,IAAV,gcAkBLkN,GAASnN,IAAOoN,OAAV,yUAIE,SAACzM,GAAD,OAAYA,EAAMqd,KAAO,KAAO,qBACzB,SAACrd,GAAD,OAAYA,EAAMyY,MAAQ,MAAQ,QAC/B,SAACzY,GAAD,OAChBA,EAAMqd,KAAO,wBAA0B,6BAClC,SAACrd,GAAD,OAAYA,EAAMqd,KAAO,QAAU,WAEjC,SAACrd,GAAD,OAAYA,EAAMyY,MAAQ,cAAgB,gBAC3C,SAACzY,GAAD,OAAYA,EAAMyY,MAAQ,QAAU,UAQ5CC,GAAiBrZ,IAAO2P,QAAV,wWAmBd2J,GAAetZ,IAAO2P,QAAV,8QAaZ4J,GAAoBvZ,IAAOC,IAAV,0JAQjBuZ,GAAmBxZ,IAAOC,IAAV,0OAahBwZ,GAAmBzZ,IAAO0R,QAAV,gIAOhBgI,GAAe1Z,IAAOoN,OAAV,mVAKJ,SAACzM,GAAD,OAAYA,EAAMgZ,OAAS,kBAAoB,oBAavDC,GAAc5Z,IAAO2P,QAAV,mOAYXkK,GAAa7Z,IAAO0R,QAAV,6LAWVoI,GAAY9Z,IAAO+Z,SAAV,yTAGJ,SAAApZ,GAAK,OAAIA,EAAMqZ,MAAQ,OAAS,UAShC,SAAArZ,GAAK,OAAIA,EAAMqZ,MAAQ,OAAS,UAC5B,SAAArZ,GAAK,OAAIA,EAAMqZ,MAAQ,QAAU,WAIjC,SAASiE,KAEtB,MAA4B9c,mBAAS,IAArC,mBAAQsZ,EAAR,KAAeC,EAAf,KAqBE,EAAgCvZ,mBANxB,wEAMR,mBAAO+c,EAAP,KAKA,GALA,KAK0D/c,mBAAS,KAAnE,mBAAOwZ,EAAP,KAA8BC,EAA9B,KAEA,EAAwDzZ,mBAAS,CAC7DC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPsZ,QAAQ,EACRC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACNC,KAAK,IATT,mBAAOC,EAAP,KAA6BC,EAA7B,KA8DA,EAA4Cha,mBAAS,WAArD,mBAAOia,EAAP,KAAuBC,EAAvB,KACA,EAAkDla,mBAAS,WAA3D,mBAAOma,EAAP,KAA0BC,EAA1B,KAqBA,EAAgCpa,mBAAS,IAAzC,mBAAOqa,EAAP,KAAiBC,EAAjB,KAMA,EAA8Cta,oBAAS,GAAvD,mBAAOgd,EAAP,KAAwBC,EAAxB,KAsBA,OACI,eAAC,GAAD,CAAO7U,UAAU,YAAjB,UACI,eAAC,GAAD,CAAgBA,UAAU,qCAA1B,UACJ,yBAASA,UAAU,aAAnB,SACM,cAAC,GAAD,CAAW2E,SA/IG,SAACC,GAC1BuM,GAAS,SAAA5C,GAAI,OAAI3J,EAAEpC,OAAOqC,UA8IyBA,MAAOqM,EAAOT,OAAK,MAEjE,qBAAK3Q,IAAK6U,EAAUjS,IAAI,UAChB,cAAC,GAAD,CACI1C,UAAU,eACV8C,QA/CiB,SAAC8B,GAC9BzL,QAAQC,IAAI,2EA+CAyW,OAAK,EAHT,SAKI,qBACI/P,IAAG,UAAK5I,GAAL,8BACHwL,IAAI,UAKhB,eAAC,GAAD,CAAc1C,UAAU,iBAAxB,UACI,eAAC,GAAD,CAAmBA,UAAU,oBAA7B,UACI,eAAC,GAAD,CAAkBA,UAAU,eAA5B,UACI,mFACA,cAAC,GAAD,CACIA,UAAU,mBACV8C,QA5HE,SAAC8B,GACvB,GAA0B,YAAtBA,EAAEpC,OAAO2P,SAAb,CAGA,IAFA,IAAIxD,EAAO/J,EAAEpC,QAELmM,EAAKyD,UAAUC,SAAS,kBAI5B,GAHA1D,EAAOA,EAAK2D,WACZnZ,QAAQC,IAAI,gBAAiBuV,EAAKhH,MAEZ,YAAlBgH,EAAKwD,SAEL,YADAxD,EAAO,MAKXA,GAAQyC,EAAsBmB,SAAS5D,EAAKhH,OAC5C0J,GAAyB,SAAC/O,GAAD,oBAClBA,EAAIkQ,QAAO,SAACC,GAAD,OAAaA,IAAY9D,EAAKhH,YAEhDiK,GAAwB,SAACc,GACrB,OAAO,2BAAKA,GAAZ,mBAAyB/D,EAAKhH,MAAO,SAGzC0J,GAAyB,SAAC/O,GAAD,6BAAaA,GAAb,CAAkBqM,EAAKhH,UAChDiK,GAAwB,SAACc,GACrB,OAAO,2BAAKA,GAAZ,mBAAyB/D,EAAKhH,MAAO,UAkG7B,SA3IH,CAAC,QAAS,SAAW,QAAS,QAAS,SAAU,QAAS,SAAU,OAAQ,OA+I3D7N,KAAI,SAACjB,EAASyE,GACpB,OACI,cAAC,GAAD,CAEIqK,KAAM9O,EACNmH,UAAU,gBACV5J,KAAK,SACLga,OAAQuB,EAAqB9Y,GALjC,SAOI,qBACIiH,IAAG,UAAK5I,GAAL,2BAA8C2B,EAA9C,QACH6J,IAAI,MARHpF,WAgBzB,eAAC,GAAD,CAAkB0C,UAAU,eAA5B,UACI,mFACA,eAAC,GAAD,WACI,wBACIA,UAAU,MACV6E,MAAOgN,EACPlN,SAnGH,SAACC,GACtBkN,EAAkBlN,EAAEpC,OAAOqC,QA+FP,SAjHL,CACf,CAAC,UAAW,6BACZ,CAAC,UAAW,sBACZ,CAAC,SAAU,iBAmHyB/K,KAAI,SAAC6U,EAAMrR,GACnB,OACI,wBAAQuH,MAAO8J,EAAK,GAApB,SACKA,EAAK,IADmBrR,QAMzC,wBACI0C,UAAU,SACV6E,MAAOkN,EACPpN,SA5GA,SAACC,GACzBoN,EAAqBpN,EAAEpC,OAAOqC,QAwGV,SAvHF,CAClB,CAAC,UAAW,6BACZ,CAAC,SAAU,sBACX,CAAC,QAAS,wBAyH6B/K,KAAI,SAAC6U,EAAMrR,GACtB,OACI,wBAAQuH,MAAO8J,EAAK,GAApB,SACKA,EAAK,IADmBrR,iBAUrD,eAAC,GAAD,WACI,cAAC,GAAD,CACIlH,KAAK,OACL0O,YAAY,+CACZD,MAAOoN,EACPtN,SA/GI,SAACC,GACrBsN,EAAYtN,EAAEpC,OAAOqC,UAgHT,cAAC,GAAD,CACI7E,UAAU,eACV8C,QA3GM,SAAC8B,GACvBzL,QAAQC,IAAI,sDACZyb,GAAmB,SAACtG,GAAD,OAAU,MA0GbkG,MAAI,EAHR,0BAOCxC,QAIR2C,EACG,cAACvO,GAAD,CACIG,WAhHO,SAAC5B,GAEpBzL,QAAQC,IAAI,qBA+GAqN,UA5GM,SAAC7B,GACnBiQ,GAAmB,SAACtG,GAAD,OAAU,MA4GjBhI,aAzGU,SAAC3B,GACvBiQ,GAAmB,SAACtG,GAAD,OAAU,MAqGrB,SAKI,oFAGJ,MCnZT,I,SAAMuG,GAAWre,IAAOC,IAAV,4NAYRqe,GAAWte,IAAO0R,QAAV,snBAoCR6M,GAAYve,IAAOwe,EAAV,8HAEE,SAAA7d,GAAK,OAAIA,EAAM8d,UAAY,UAC9B,SAAA9d,GAAK,OAAIA,EAAM+d,OAAS,QAGhCC,GAAc3e,IAAOyI,IAAV,8HAEA,SAAA9H,GAAK,OAAIA,EAAM8d,UAAY,SAC9B,SAAA9d,GAAK,OAAIA,EAAM+d,OAAS,QAG9B,SAASE,GAAT,GAAsC,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACtC,OACE,eAACT,GAAD,CAAU9U,UAAW,CAAC,kBAAmB,OAAzC,UACE,eAAC+U,GAAD,CAAU/U,UAAU,YAApB,UACE,eAACgV,GAAD,CAAWhV,UAAU,OAArB,6CACS,uBADT,6EAEgB,0BAEhB,qBAAKA,UAAU,mBAAf,SACE,cAACoV,GAAD,CACEtV,IAAI,oCACJ4C,IAAI,0BAKV,eAACqS,GAAD,CAAU/U,UAAU,YAApB,UACE,eAACgV,GAAD,CAAWhV,UAAU,OAAOmV,MAAOG,EAAnC,gGACoB,uBADpB,+EAEkB,0BAElB,eAACN,GAAD,CAAWhV,UAAU,OAAOmV,MAAOG,EAAnC,8FACkB,uBADlB,wFAIA,qBAAKtV,UAAU,oBAAf,SACE,cAACoV,GAAD,CACEtV,IAAI,yBACJ4C,IAAI,SACJyS,MAAOI,YChGZ,I,GAAMC,GAAmB/e,YAAOqe,GAAPre,CAAH,2VAqBhBgf,GAAqBhf,IAAOC,IAAV,mRAalBgf,GAAgBjf,IAAOkf,GAAV,8HAEF,SAAAve,GAAK,OAAIA,EAAM8d,UAAY,SAC9B,SAAA9d,GAAK,OAAIA,EAAM+d,OAAS,QAG9B,SAASS,GAAT,GAEX,IADFN,EACC,EADDA,SAAUC,EACT,EADSA,SAAUM,EACnB,EADmBA,WAAYC,EAC/B,EAD+BA,UAAWC,EAC1C,EAD0CA,UAE3C,OACE,eAACP,GAAD,CAAkBxV,UAAW,CAAC,kBAAmB,OAAjD,UACE,cAAC0V,GAAD,CAAeP,MAAOG,EAAtB,oBAGA,eAACG,GAAD,CAAoBzV,UAAU,WAA9B,UACE,eAAC+U,GAAD,CAAU/U,UAAU,YAAYmV,MAAOI,EAAvC,UACE,eAACP,GAAD,CAAWhV,UAAU,OAArB,6CACS,uBADT,8DAIA,qBAAKA,UAAU,mBAAf,SACE,cAACoV,GAAD,CACEtV,IAAI,+BACJ4C,IAAI,cACJyS,MAAOU,SAKb,eAACd,GAAD,CAAU/U,UAAU,YAApB,UACE,qBAAKA,UAAU,oBAAf,SACE,cAACoV,GAAD,CACEtV,IAAI,kCACJ4C,IAAI,UACJyS,MAAOW,MAGX,eAACd,GAAD,CAAWhV,UAAU,OAAOmV,MAAOY,EAAnC,2EACc,uBADd,yEAEiB,uBAFjB,wEAGgB,uBAHhB,oDCtEH,I,GAAMC,GAAcvf,IAAOC,IAAV,qOAgBT,SAASuf,GAAT,GAEX,IADFX,EACC,EADDA,SAAUC,EACT,EADSA,SAAUM,EACnB,EADmBA,WAAYC,EAC/B,EAD+BA,UAAWC,EAC1C,EAD0CA,UAE3C,OACE,eAACP,GAAD,CAAkBxV,UAAW,CAAC,kBAAmB,SAAjD,UACE,cAAC0V,GAAD,CAAeP,MAAOG,EAAtB,oBAGA,eAACG,GAAD,CAAoBzV,UAAU,WAA9B,UACE,eAAC+U,GAAD,CAAU/U,UAAU,YAApB,UACE,eAACgV,GAAD,CAAWhV,UAAU,OAAOmV,MAAOI,EAAnC,0DACY,uBADZ,sDAEa,uBAFb,8DAKA,qBAAKvV,UAAU,mBAAf,SACE,cAACoV,GAAD,CACEtV,IAAI,2BACJ4C,IAAI,SACJyS,MAAOU,SAKb,eAACd,GAAD,CAAU/U,UAAU,YAApB,UACE,eAACgV,GAAD,CAAWhV,UAAU,OAAOmV,MAAOW,EAAnC,sEACc,uBADd,wCAES,uBAFT,gEAKA,eAACE,GAAD,CAAahW,UAAU,oBAAvB,UACE,cAACoV,GAAD,CACEtV,IAAI,2BACJ4C,IAAI,wBACJyS,MAAOY,IAET,cAACX,GAAD,CACEtV,IAAI,mCACJ4C,IAAI,mBACJyS,MAAOY,gBCvDN,SAASG,GAAT,GAEX,IADFZ,EACC,EADDA,SAAUC,EACT,EADSA,SAAUM,EACnB,EADmBA,WAAYC,EAC/B,EAD+BA,UAAWC,EAC1C,EAD0CA,UAE3C,OACE,eAACP,GAAD,CAAkBxV,UAAW,CAAC,kBAAmB,QAAjD,UACE,cAAC0V,GAAD,CAAeP,MAAOG,EAAtB,oBACI,eAACG,GAAD,CAAoBzV,UAAU,WAA9B,UACE,eAAC+U,GAAD,CAAU/U,UAAU,YAApB,UACE,eAACgV,GAAD,CAAWhV,UAAU,OAAOmV,MAAOI,EAAnC,gEACa,uBADb,kCAEQ,uBAFR,+DAKA,qBAAKvV,UAAU,mBAAf,SACE,cAACoV,GAAD,CACEtV,IAAI,gCACJ4C,IAAI,2BACJyS,MAAOU,SAIb,eAACd,GAAD,CAAU/U,UAAU,YAApB,UACE,eAACgW,GAAD,CAAahW,UAAU,oBAAvB,UACE,cAACoV,GAAD,CACEtV,IAAI,iCACJ4C,IAAI,kBACJyS,MAAOW,IAET,cAACV,GAAD,CACEtV,IAAI,iCACJ4C,IAAI,gBACJyS,MAAOW,OAGX,eAACd,GAAD,CAAWhV,UAAU,OAAOmV,MAAOY,EAAnC,gGACoB,uBADpB,qDAEY,uBAFZ,kGC/Bd,IAAMI,GAAqB1f,IAAOC,IAAV,wGAIT,SAAS0f,KAetB,OACE,eAACD,GAAD,CAAoBnW,UAAU,iBAA9B,UACE,cAACqV,GAAD,CACEC,SAAU,KACVC,SAAU,SAEZ,cAACK,GAAD,CACEN,SAAU,OACVC,SAAU,OACVM,WAAY,OACZC,UAAW,OACXC,UAAW,SAEb,cAACE,GAAD,CACEX,SAAU,OACVC,SAAU,OACVM,WAAY,OACZC,UAAW,OACXC,UAAW,SAEb,cAACG,GAAD,CACEZ,SAAU,OACVC,SAAU,OACVM,WAAY,OACZC,UAAW,OACXC,UAAW,Y,2DCpCbhW,GAAYtJ,IAAOC,IAAV,yZAcT2f,GAAc5f,IAAOC,IAAV,oRAYX4f,GAAe7f,IAAOC,IAAV,8TAcZ6f,GAAe9f,IAAOyI,IAAV,2VAcZsX,GAAc/f,IAAOC,IAAV,qaAkBX+f,GAAWhgB,IAAOC,IAAV,sfAmBRggB,GAAWjgB,IAAOC,IAAV,0WAeRiN,GAAUlN,IAAOoN,OAAV,gFAKPD,GAASnN,IAAOoN,OAAV,sOACC,SAACzM,GAAD,OAAYA,EAAM0M,QAAU1M,EAAM2M,OAAS,QAAU,UACjD,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,SAAW,YACrC,SAAC3M,GAAD,OAAYA,EAAM2M,OAAS,QAAU,WAOjD4S,GAAclgB,IAAOiN,MAAV,iHAKXkT,GAAoBngB,IAAOC,IAAV,8KAOjBmgB,GAAgBpgB,IAAOC,IAAV,gNAQbiQ,GAAelQ,IAAOoN,OAAV,8aAqBd5M,GAAMC,sBACLD,KACDA,GAAM,8BAGV,I,GAAM6f,GAASC,KAAGC,QAAQ/f,IAEX,SAASggB,KAEpB,IAAQ7P,EAAa7P,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA1C2P,SAIR,EAAgCxP,mBAAS,IAAzC,mBAAOsf,EAAP,KAAiBC,EAAjB,KACA,EAA8Bvf,mBAAS,IAAvC,mBAAOwf,EAAP,KAAgBC,EAAhB,KAEA,EAAsBzf,mBAAS,CAAC,KAAhC,mBAAO0f,EAAP,KAAYC,EAAZ,KAEA,EAAgC3f,mBAAS,IAAzC,mBAAO4f,EAAP,KAAiBC,EAAjB,KAEA,EAAoC7f,mBAAS,IAA7C,mBAAO8f,EAAP,KAAmBC,EAAnB,KAEA,GADgBtT,cACkBzM,oBAAS,IAA3C,mBAAOggB,EAAP,KAAkBC,EAAlB,KAgCAxe,qBAAU,WACN6E,IAAM,CACFjH,IAAKA,GAAG,8BAA0BmQ,EAASxO,SAC3CyF,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,iBAAiB,IAClBC,MAAK,SAACC,GAAD,OAAStF,QAAQC,IAAIqF,QAC9B,CAACiZ,IAEJre,qBAAU,WACN6E,IAAM,CACFjH,IAAKA,GAAG,8BAA0BmQ,EAASxO,SAC3CyF,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,iBAAiB,IAClBC,MAAK,SAACC,GAAD,OAASkZ,EAAclZ,EAAIxB,WACpC,IAsCH6Z,GAAOgB,GAAG,WAAW,eAIrBhB,GAAOgB,GAAG,OAAO,WACb3e,QAAQC,IAAI,kDAGhB0d,GAAOgB,GAAG,UAAU,SAACC,GAGjBR,EAAO,GAAD,oBAAKD,GAAL,CAAUS,QAEpB1e,qBAAU,WACN6E,IAAM,CACFjH,IAAKA,GAAM,oBACXoH,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBrB,KAAM,CACF+a,SAAUZ,EACVa,YAAazS,KAAK+F,UAAU+L,IAEhC/Y,iBAAiB,IAClBC,MAAK,SAACC,GAAD,OAAStF,QAAQC,IAAI,qDAC9B,CAACke,IAKJ,OACI,cAAC,GAAD,CAAWtX,UAAU,eAArB,SACM4X,EAkCE,qCACI,cAAC,GAAD,UACI,cAAC,KAAD,CACIjV,KAAMiE,KACN5G,UAAU,QACV6G,MAAM,UACN/D,QA7CF,WAClB+U,GAAa,QA+CD,eAACnB,GAAD,WACI,8BAAM,uBACLY,EAAIxd,KAAI,SAACkJ,GACN,OAAO,8BAAMA,UAGrB,uBACI2B,SAAU,SAACC,GAAD,OArG9B,SAAiBA,GACbzL,QAAQC,IAAIwL,EAAEpC,OAAOqC,OACrB4S,EAAY7S,EAAEpC,OAAOqC,OAmGYqT,CAAQtT,IACzBE,YAAY,qBACZqT,UAAQ,EACR/hB,KAAK,SAET,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,KAAD,CACI0M,QAxG5B,WACIgU,GAAOsB,KACH,SACA,UAAGhR,EAASxO,QAAZ,OAA2B4e,EAC3BJ,GACA,WAEIG,EAAO,GAAD,oBAAKD,GAAL,CAAU,UAAGlQ,EAASxO,QAAZ,OAA2B4e,SAkG3B7U,KAAM0V,cA1DtB,eAAC7B,GAAD,WACI,cAACH,GAAD,UAAcjP,EAASxO,UACvB,cAAC0d,GAAD,UACI,cAACC,GAAD,CAAczW,IAAKsH,EAASkR,eAEhC,eAAC1B,GAAD,WACI,cAACD,GAAD,CACIhS,SAAU,SAACC,GAAD,OAhIlC,SAAsBA,GAClBzL,QAAQC,IAAIwL,EAAEpC,OAAOqC,OACrBsS,EAAYvS,EAAEpC,OAAOqC,OA8HgB0T,CAAa3T,IAC9BE,YAAY,kBACZqT,UAAQ,EACR/hB,KAAK,SAET,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,KAAD,CACI0M,QAnIhC,WAEI,IAAM0V,EAAe,CAACpR,EAASxO,QAASse,GAAUuB,OAClD3B,GAAOsB,KAAK,aAAZ,UAA6BI,EAAa,GAA1C,YAAgDA,EAAa,KAE7DnB,EAAW,GAAD,OAAImB,EAAa,GAAjB,YAAuBA,EAAa,KAE9Cta,IAAM,CACFjH,IAAKA,GAAM,cACXoH,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBrB,KAAM,CACFrE,QAASwO,EAASxO,QAClB8f,SAAUxB,EACVc,SAAS,GAAD,OAAKQ,EAAa,GAAlB,YAAwBA,EAAa,KAEjDja,iBAAiB,IAClBC,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,EAAIxB,MAChB0a,EAAclZ,EAAIxB,UA+GM0F,KAAMgW,cAKtB,eAAClC,GAAD,WACI,cAACI,GAAD,UAAgB,oCACfa,EAAW5d,KAAI,SAACkJ,GAAD,OACZ,cAAC6T,GAAD,CAAe/T,QAAS,kBA9FzB8V,EA8F6C5V,EA7FhE6U,GAAa,GACbf,GAAOsB,KAAK,aAAcQ,GAC1BvB,EAAWuB,QAEX1a,IAAM,CACFjH,IAAKA,GAAG,qCAAiC2hB,GACzCva,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,iBAAiB,IAClBC,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,EAAIxB,MAChBsa,EAAO9Y,EAAIxB,SAdnB,IAAuB2b,GA8FC,SACiD,IAA5C5V,EAAG0H,MAAM,KAAKmO,QAAQzR,EAASxO,SAC1BoK,EAAG0H,MAAM,KAAK,GACd1H,EAAG0H,MAAM,KAAK,gBC5VpD,IAWeoO,GAXKC,YAAH,6JC0Bb9hB,GAAMC,sBAGK,SAAS8hB,KACpB,IAAM3hB,EAAWC,cACD+M,cACXpN,KACDA,GAAM,8BAGV,IACQqN,EAAY/M,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAzC6M,QAqBR,OApBAjL,qBAAU,WACNF,QAAQC,IAAIoM,KAAKC,MAAMC,aAAaC,QAAQ,YAExCD,aAAaC,QAAQ,WACrBzH,IAAM,CACFjH,IAAKA,GAAM,cACXoH,OAAQ,MACRC,QAAS,CACLqM,cAAc,SAAD,OAAWnF,KAAKC,MACzBC,aAAaC,QAAQ,eAG9BnH,MAAK,SAACC,G3BtCK,IAACwa,E2BuCX9f,QAAQC,IAAIqF,EAAIxB,KAAKA,MACrB5F,G3BxCW4hB,E2BwCSxa,EAAIxB,KAAKA,K3BvClC,CACH7G,KAAMZ,EACNa,QAAQ,eACD4iB,M2BqCC5hB,EAASf,EAAcmI,EAAIxB,KAAKic,aAGzC,CAAC5U,IAGA,qCACI,cAAC,GAAD,IACA,cAACJ,GAAD,CAAQC,SAzBA,IA0BR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgV,OAAK,EAACC,KAAK,OAAlB,SACI,cAACrf,GAAD,MAEJ,cAAC,IAAD,CAAOof,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC3Y,GAAD,MAEJ,cAAC,IAAD,CAAO0Y,OAAK,EAACC,KAAK,YAAlB,SACI,cAACzX,GAAD,MAEJ,cAAC,IAAD,CAAOwX,OAAK,EAACC,KAAK,YAAlB,SACI,cAACnT,GAAD,MAEJ,cAAC,IAAD,CAAOkT,OAAK,EAACC,KAAK,QAAlB,SACI,cAAClT,GAAD,MAEJ,cAAC,IAAD,CAAOiT,OAAK,EAACC,KAAK,UAAlB,SACI,cAACjS,GAAD,MAEJ,cAAC,IAAD,CAAOgS,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC7P,GAAD,MAEJ,cAAC,IAAD,CAAO4P,OAAK,EAACC,KAAK,UAAlB,SACI,cAACxK,GAAD,MAEJ,cAAC,IAAD,CAAOuK,OAAK,EAACC,KAAK,gBAAlB,SACI,cAAC9L,GAAD,MAEJ,cAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC1I,GAAD,MAEJ,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,UAAlB,SACI,cAAC3J,GAAD,MAEJ,cAAC,IAAD,CAAO0J,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC/F,GAAD,MAEJ,cAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,SAAlB,SACI,cAAChD,GAAD,MAEJ,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,aAAlB,SACI,cAACnC,GAAD,MAEJ,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,gBAAlB,SACK9U,EACG,cAAC,IAAD,CAAU+U,GAAG,WAEb,cAAC,IAAD,CAAUA,GAAG,aAGrB,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,mBAAlB,SACK9U,EACG,cAAC,IAAD,CAAU+U,GAAG,cAEb,cAAC,IAAD,CAAUA,GAAG,aAGrB,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,eAAlB,SACK9U,EACG,cAAC,IAAD,CAAU+U,GAAG,UAEb,cAAC,IAAD,CAAUA,GAAG,aAGrB,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,kBAAlB,SACK9U,EACG,cAAC,IAAD,CAAU+U,GAAG,cAEb,cAAC,IAAD,CAAUA,GAAG,YAGrB,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC1E,GAAD,MAEJ,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,IAAD,CAAUC,GAAG,cAGrB,cAACvT,GAAD,O,aC9ICwT,GAAe,CAExBhV,SAAS,EACToH,aAAc,EACdvV,WAAY,GACZojB,WAAY,GACZ5I,YAAa,CAAElW,IAAK,GAAIG,IAAK,IAC7B4e,cAAc,EACdpS,SAAU,GAEVxF,MAAO,EACPC,IAAK,GACLC,QAAS,EACTpB,KAAM,ICsEKjJ,GApEK,WAAmC,IAAlCD,EAAiC,uDAAzB8hB,GAAcG,EAAW,uCAClD,OAAQA,EAAOrjB,MACX,KAAKZ,EACD,OAAO,2BACAgC,GADP,IAEI4P,SAAUqS,EAAOpjB,UAIzB,KAAKV,EACD,OAAO,2BACA6B,GADP,IAEIkU,aAAc+N,EAAOpjB,UAG7B,KAAKZ,EACD,OAAO,2BACA+B,GADP,IAEIsK,QAAS2X,EAAOpjB,UAGxB,KAAKX,EACD,OAAO,2BACA8B,GADP,IAEIoK,MAAO6X,EAAOpjB,QAAQuL,MACtBC,IAAK4X,EAAOpjB,QAAQwL,MAG5B,KAAKjM,EACD,OAAO,2BACA4B,GADP,IAEI8M,QAASmV,EAAOpjB,UAGxB,KAAKR,EACD,OAAO,2BACA2B,GADP,IAEIgiB,aAAcC,EAAOpjB,UAG7B,KAAKP,EACD,OAAO,2BACA0B,GADP,IAEIrB,WAAYsjB,EAAOpjB,UAG3B,KAAKN,EACD,OAAO,2BACAyB,GADP,IAEI+hB,WAAYE,EAAOpjB,UAG3B,KAAKL,EACD,OAAO,2BACAwB,GADP,IAEImZ,YAAa8I,EAAOpjB,UAE5B,KAAKJ,EACD,OAAO,2BACAuB,GADP,IAEIkJ,KAAM+Y,EAAOpjB,UAGrB,QACI,OAAOmB,ICvEJkiB,GAJKC,aAAgB,CAChCliB,iB,6BCCEmiB,GAAmBjiB,OAAOkiB,qCAAuCliB,OAAOkiB,qCAAqC,IAAMC,KAG1GC,GAFDC,aAAYN,GAAaE,GAAiBK,aAAgBC,KAAOC,Q,gBCC/EC,IAASC,OACL,cAAC,KAAD,UACI,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZxgB,SAASC,eAAe,W","file":"static/js/main.a86f1c50.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\"\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\"\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\"\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\"\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\"\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\"\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\"\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\"\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\"\n\nexport const UPDATE_WEATHERINFO = \"UPDATE_WEATHERINFO\"\n\n// actions creator functions\nexport const changeUser = (userinfo) => {\n    return {\n        type: CHANGE_USER_INFO,\n        payload: { \n            ...userinfo,\n        },\n    }\n}\nexport const updateCurrentPage = (current) => {\n    return {\n        type: UPDATE_CURRENT_PAGE,\n        payload: {\n            current,\n        },\n    }\n}\nexport const updateStartEndPage = (start, end) => {\n    return {\n        type: UPDATE_START_END_PAGE,\n        payload: {\n            start,\n            end,\n        },\n    }\n}\n\nexport const changeGender = (usergender) => {\n    return {\n        type: CHANGE_USER_GENDER,\n        payload: usergender,\n    }\n}\nexport const changeSearchword = (searchWord) => {\n    return {\n        type: CHANGE_SEARCH_WORD,\n        payload: searchWord,\n    }\n}\nexport const changeSelectword = (selectWord) => {\n    return {\n        type: CHANGE_SELECT_WORD,\n        payload: selectWord,\n    }\n}\nexport const changeIsLogin = (trueOrFalse) => {\n    return {\n        type: CHANGE_IS_LOGIN,\n        payload: trueOrFalse,\n    }\n}\n\nexport const changeUserPw = (pw) => {\n    return {\n        type: CHANGE_USER_PW,\n        payload: pw,\n    }\n}\n\nexport const changeCurLocation = (lat, lon) => {\n    return {\n        type: CHANGE_CUR_LOCATION,\n        payload: { lat: lat, lon: lon },\n    }\n}\n\n//test \nexport const updateWeatherInfo = (data) => {\n    return {\n        type: UPDATE_WEATHERINFO,\n        payload: {\n           data: data\n        }\n    }\n}","import styled from \"styled-components\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { changeSearchword, changeCurLocation } from \"../actions/index\"\nimport $ from \"jquery\"\nimport axios from \"axios\"\nimport { Doughnut, Bar } from \"react-chartjs-2\"\n\nconst ImgContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\nconst PostListModal = styled.div`\n    border: 1px solid black;\n    background-color: white;\n    z-index: 999;\n    position: absolute;\n    right: 0;\n    bottom: 70px;\n    width: 50%;\n    height: 70%;\n    overflow: auto;\n    @media screen and (min-width: 1081px) {\n        border: 1px solid pink;\n        background-color: white;\n        z-index: 999;\n        position: absolute;\n        right: 0;\n        bottom: 70px;\n        width: 35.3%;\n        height: 75%;\n        overflow: auto;\n    }\n`\nconst GraphModal = styled.div`\n    // border: 1px solid black;\n    width: 50%;\n    display: flex;\n\n    @media screen and (min-width: 1081px) {\n        border: 1px solid pink;\n    }\n`\n\nconst GraphTitle = styled.div`\n    // border: 1px solid black;\n\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n\n    @media screen and (min-width: 1081px) {\n        border: 1px solid pink;\n    }\n`\nconst GraphTitleDiv = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    width: 100%;\n\n    @media screen and (min-width: 1081px) {\n        border: 1px solid pink;\n    }\n`\nconst BarGraphFlex = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\nconst BarGraphchild = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Location(props) {\n    const dispatch = useDispatch()\n    const { searchWord } = useSelector((state) => state.itemReducer)\n    const { kakao } = window\n    const [weatherCount, setWeatherCount] = useState({\n        sunny: 0,\n        cloudy: 0,\n        rainy: 0,\n        snowy: 0,\n    }) //그래프 통계용\n\n    const [postList, setPostList] = useState([\n        {\n            bottom_id: \"\",\n            createdAt: \"Z\",\n            id: null,\n            post_content: \"\",\n            post_photo: \"\",\n            post_title: \"예보가 없는 지역 입니다.\",\n            temp: \"\",\n            top_id: \"\",\n            updatedAt: \"\",\n            user_id: \"\",\n            weather: \"\",\n            wind: \"\",\n            xLocation: null,\n            yLocation: null,\n        },\n    ])\n\n    console.log(searchWord)\n    console.log(props)\n\n\n    //---------------\n    useEffect(() => {\n        var container = document.getElementById(\"map\")\n        var options = {\n            center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n            level: 3,\n        }\n        var map = new kakao.maps.Map(container, options) //지도를 생성\n        var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n        map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT) //줌컨트롤 위치 조정\n        // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n\n                var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                    message = '<div style=\"padding:5px;\">현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n                // 마커와 인포윈도우를 표시합니다\n                displayMarker(locPosition, message)\n                console.log(locPosition)\n\n                console.log(lat) //위도\n                console.log(lon) //경도\n                dispatch(changeCurLocation(lat, lon))\n            })\n        } else {\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n            var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n                message = \"geolocation을 사용할수 없어요..\"\n\n            displayMarker(locPosition, message)\n        }\n        // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n\n        function displayMarker(locPosition, message) {\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: locPosition,\n            })\n\n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable,\n            })\n\n            // 인포윈도우를 마커위에 표시합니다\n            infowindow.open(map, marker)\n\n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n        }\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder()\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(searchWord, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                // var marker = new kakao.maps.Marker({\n                //     map: map,\n                //     position: coords,\n                // })\n                // console.log(arguments)\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // var infowindow = new kakao.maps.InfoWindow({\n                //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n                // })\n                // infowindow.open(map, marker)\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                dispatch(changeSearchword(searchWord))\n                map.setCenter(coords)\n            }\n        })\n\n        //클릭이벤트 함수\n        kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n            // 클릭한 위도, 경도 정보를 가져옵니다\n            var latlng = mouseEvent.latLng\n            // 마커 위치를 클릭한 위치로 옮깁니다\n            // marker.setPosition(latlng)\n            //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n            var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n            message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n            console.log(message)\n        })\n        //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n            minLevel: 9, // 클러스터 할 최소 지도 레벨\n        })\n\n        // 데이터를 가져오기 위해 jQuery를 사용합니다\n        // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n        $.get(url + \"/post/location\", function (data) {\n            // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n            // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n            console.log($(data.positions))\n            var markers = $(data.positions).map(function (i, position) {\n                return new kakao.maps.Marker({\n                    position: new kakao.maps.LatLng(\n                        position.xLocation,\n                        position.yLocation\n                    ),\n                })\n            })\n            console.log(markers)\n            console.log($(data.positions)[0])\n            $(data.positions).map((n, idx) => {\n                console.log($(data.positions))\n                // $(data.positions).map((el) => {\n                //     console.log(el)\n                //     if ($(data.positions)[el].weather === \"sunny\") {\n                //         setWeatherCount({\n                //             ...weatherCount,\n                //             sunny: weatherCount.sunny + 1,\n                //         })\n                //     } else if ($(data.positions)[el].weather === \"cloudy\") {\n                //         setWeatherCount({\n                //             ...weatherCount,\n                //             cloudy: weatherCount.cloudy + 1,\n                //         })\n                //     } else if ($(data.positions)[el].weather === \"rainy\") {\n                //         setWeatherCount({\n                //             ...weatherCount,\n                //             rainy: weatherCount.rainy + 1,\n                //         })\n                //     } else if ($(data.positions)[el].weather === \"snowy\") {\n                //         setWeatherCount({\n                //             ...weatherCount,\n                //             snowy: weatherCount.snowy + 1,\n                //         })\n                //     }\n                // })\n\n                var iwContent = `\n                <container style=\"border:3px solid pink; padding:5px; height:20rem; width:15rem; display:flex; flex-direction: row;\">\n                    <box style=\"\">\n                        <h3>${$(data.positions)[n].post_title}</h3>\n                            <box style=\"display:flex; flex-direction: row;\">\n                            \n                        ${\n                            $(data.positions)[n].weather === \"sunny\"\n                                ? \"<img src='img/icons-write/sunny.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"cloudy\"\n                                ? \"<img src='img/icons-write/cloudy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"rainy\"\n                                ? \"<img src='img/icons-write/rainy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"snowy\"\n                                ? \"<img src='img/icons-write/snowy.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].wind === \"breezy\"\n                                ? \"<img src='img/icons-write/breezy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"windy\"\n                                ? \"<img src='img/icons-write/windy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"strong\"\n                                ? \"<img src='img/icons-write/strong.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].temp === \"cold\"\n                                ? \"<img src='img/icons-write/cold.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].temp === \"hot\"\n                                ? \"<img src='img/icons-write/hot.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].top_id === \"tshirts\"\n                                ? \"<img src='img/icons-write/tshirts.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"shirts\"\n                                ? \"<img src='img/icons-write/shirts.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].bottom_id === \"shorts\"\n                                ? \"<img src='img/icons-write/shorts.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].bottom_id === \"pants\"\n                                ? \"<img src='img/icons-write/pants.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        </box>\n                        <img src=${\n                            $(data.positions)[n].post_photo\n                        } style=\"padding:5px; width:80%;\"></img>\n                        <div>${$(data.positions)[n].post_content}</div>\n                    </box>\n                </container>\n\n\n                             `, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                    iwRemoveable = true // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n                // 인포윈도우를 생성합니다\n                var infowindow = new kakao.maps.InfoWindow({\n                    content: iwContent,\n                    removable: iwRemoveable,\n                })\n                kakao.maps.event.addListener(markers[n], \"click\", function () {\n                    // 마커 위에 인포윈도우를 표시합니다\n                    infowindow.open(map, markers[n])\n                })\n            })\n\n            clusterer.addMarkers(markers)\n        })\n\n        let timer\n        // 지도가 이동, 확대, 축소로 인해 지도영역이 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n        kakao.maps.event.addListener(map, \"idle\", function () {\n            if (timer) {\n                clearTimeout(timer)\n            }\n\n            timer = setTimeout(function () {\n                console.log(\"지도 위치가 변경 될 때마다 API요청\")\n                // setWeatherCount({\n                //     sunny: 0,\n                //     cloudy: 0,\n                //     rainy: 0,\n                //     snowy: 0,\n                // })\n                // 지도 영역정보를 얻어옵니다\n                var bounds = map.getBounds()\n\n                // 영역정보의 남서쪽 정보를 얻어옵니다\n                var swLatlng = bounds.getSouthWest()\n\n                // 영역정보의 북동쪽 정보를 얻어옵니다\n                var neLatlng = bounds.getNorthEast()\n\n                var message =\n                    \"영역좌표는 남서쪽 위도, 경도는  \" +\n                    swLatlng.toString() +\n                    \"이고 <br>\"\n                message +=\n                    \"북동쪽 위도, 경도는  \" + neLatlng.toString() + \"입니다 \"\n\n                // setTimeout(() => {\n                console.log(message)\n                console.log(swLatlng)\n                console.log(neLatlng)\n                axios({\n                    url:\n                        url +\n                        `/post/list?top=${neLatlng.La}&bottom=${swLatlng.La}&left=${swLatlng.Ma}&right=${neLatlng.Ma}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setPostList(res.data)\n                    console.log(postList)\n                    let sunny = 0\n                    let cloudy = 0\n                    let rainy = 0\n                    let snowy = 0\n                    for (let n = 0; n < res.data.length; n++) {\n                        if (res.data[n].weather === \"sunny\") {\n                            sunny = sunny + 1\n                        } else if (res.data[n].weather === \"cloudy\") {\n                            cloudy++\n                        } else if (res.data[n].weather === \"rainy\") {\n                            rainy++\n                        } else if (res.data[n].weather === \"snowy\") {\n                            snowy++\n                        }\n                    }\n                    setWeatherCount({\n                        sunny: sunny,\n                        cloudy: cloudy,\n                        rainy: rainy,\n                        snowy: snowy,\n                    })\n                })\n            }, 1000)\n        })\n    }, [\n        kakao.maps.LatLng,\n        kakao.maps.Marker,\n        kakao.maps.event,\n        kakao.maps.Map,\n        searchWord,\n    ])\n\n    const Box = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n        // height: 50%;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const Box2 = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        // width: 10000px;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const EmoticonBox = styled.div`\n        display: flex;\n        flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostTitle = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostContent = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostBox = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostImg = styled.img`\n        width: 100%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const IconImg = styled.img`\n        width: 20%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    console.log(weatherCount)\n    const data = {\n        labels: [\"맑음\", \"구름\", \"비\", \"폭뢰\"],\n        datasets: [\n            {\n                data: [\n                    weatherCount.sunny,\n                    weatherCount.cloudy,\n                    weatherCount.rainy,\n                    weatherCount.snowy,\n                ],\n                backgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"#FFCE56\"],\n                hoverBackgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"#FFCE56\"],\n            },\n        ],\n    }\n    const data2 = {\n        labels: [\"사용자예보\", \"기상청\"],\n        datasets: [\n            {\n                label: \"강수 확률\",\n                backgroundColor: \"rgba(255,99,132,0.2)\",\n                borderColor: \"rgba(255,99,132,1)\",\n                borderWidth: 1,\n                hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                hoverBorderColor: \"rgba(255,99,132,1)\",\n                data: [\n                    ((weatherCount.rainy + weatherCount.snowy) /\n                        (weatherCount.sunny +\n                            weatherCount.cloudy +\n                            weatherCount.rainy +\n                            weatherCount.snowy)) *\n                        100,\n                    10,\n                ],\n            },\n        ],\n    }\n    return (\n        <>\n            <ImgContainer id=\"map\"></ImgContainer>\n            <PostListModal>\n                <GraphTitleDiv>현재지역</GraphTitleDiv>\n                <GraphTitle>\n                    <GraphTitleDiv>사용자 예보 날씨 비율</GraphTitleDiv>\n                    <GraphTitleDiv>\n                        사용자예보 vs 기상청예보 강수확률\n                    </GraphTitleDiv>\n                </GraphTitle>\n                <GraphModal>\n                    <Doughnut data={data} />\n                    <BarGraphFlex>\n                        <BarGraphchild>\n                            <Bar data={data2} />\n                        </BarGraphchild>\n                    </BarGraphFlex>\n                </GraphModal>\n                {postList.map((post) => {\n                    return (\n                        <PostBox>\n                            <Box>\n                                <PostImg src={`${post.post_photo}`} />\n                                <EmoticonBox>\n                                    <IconImg\n                                        src={`/img/icons-write/${post.weather}.png`}\n                                    />\n                                    <IconImg\n                                        src={`/img/icons-write/${post.wind}.png`}\n                                    />\n                                    <IconImg\n                                        src={`/img/icons-write/${post.temp}.png`}\n                                    />\n                                    <IconImg\n                                        src={`/img/icons-write/${post.top_id}.png`}\n                                    />\n                                    <IconImg\n                                        src={`/img/icons-write/${post.bottom_id}.png`}\n                                    />\n                                </EmoticonBox>\n                            </Box>\n                            <Box2>\n                                <PostTitle>{`${post.post_title}`}</PostTitle>\n                                <PostContent>{`${post.post_content}`}</PostContent>\n                            </Box2>\n                        </PostBox>\n                    )\n                })}\n            </PostListModal>\n        </>\n    )\n}\n\n// useEffect(() => {\n//     var container = document.getElementById(\"map\")\n//     var options = {\n//         center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n//         level: 9,\n//     }\n//     var map = new kakao.maps.Map(container, options) //지도를 생성\n//     var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n//     map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT) //줌컨트롤 위치 조정\n//     // 지도를 클릭한 위치에 표출할 마커입니다\n//     // var marker = new kakao.maps.Marker({\n//     //     // 지도 중심좌표에 마커를 생성합니다\n//     //     position: map.getCenter(),\n//     // })\n//     // 지도에 마커를 표시합니다\n//     // marker.setMap(map)\n//     //클릭이벤트 함수\n//     kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n//         // 클릭한 위도, 경도 정보를 가져옵니다\n//         var latlng = mouseEvent.latLng\n//         // 마커 위치를 클릭한 위치로 옮깁니다\n//         // marker.setPosition(latlng)\n//         //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n//         var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n//         message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n//         console.log(message)\n//     })\n\n//     // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n//     if (navigator.geolocation) {\n//         // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n//         navigator.geolocation.getCurrentPosition(function (position) {\n//             var lat = position.coords.latitude, // 위도\n//                 lon = position.coords.longitude // 경도\n\n//             var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n//                 message = '<div style=\"padding:5px;\">현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n//             // 마커와 인포윈도우를 표시합니다\n//             displayMarker(locPosition, message)\n//             console.log(locPosition)\n\n//             console.log(lat) //위도\n//             console.log(lon) //경도\n//             dispatch(changeCurLocation(lat, lon))\n//         })\n//     } else {\n//         // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n//         var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n//             message = \"geolocation을 사용할수 없어요..\"\n\n//         displayMarker(locPosition, message)\n//     }\n\n//     // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n//     function displayMarker(locPosition, message) {\n//         // 마커를 생성합니다\n//         var marker = new kakao.maps.Marker({\n//             map: map,\n//             position: locPosition,\n//         })\n\n//         var iwContent = message, // 인포윈도우에 표시할 내용\n//             iwRemoveable = true\n\n//         // 인포윈도우를 생성합니다\n//         var infowindow = new kakao.maps.InfoWindow({\n//             content: iwContent,\n//             removable: iwRemoveable,\n//         })\n\n//         // 인포윈도우를 마커위에 표시합니다\n//         infowindow.open(map, marker)\n\n//         // 지도 중심좌표를 접속위치로 변경합니다\n//         map.setCenter(locPosition)\n//     }\n\n//     // 주소-좌표 변환 객체를 생성합니다\n//     var geocoder = new kakao.maps.services.Geocoder()\n\n//     // 주소로 좌표를 검색합니다\n//     geocoder.addressSearch(searchWord, function (result, status) {\n//         // 정상적으로 검색이 완료됐으면\n//         if (status === kakao.maps.services.Status.OK) {\n//             var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n//             // 결과값으로 받은 위치를 마커로 표시합니다\n//             // var marker = new kakao.maps.Marker({\n//             //     map: map,\n//             //     position: coords,\n//             // })\n//             console.log(arguments)\n//             // 인포윈도우로 장소에 대한 설명을 표시합니다\n//             // var infowindow = new kakao.maps.InfoWindow({\n//             //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n//             // })\n//             // infowindow.open(map, marker)\n\n//             // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n//             dispatch(changeSearchword(searchWord))\n//             map.setCenter(coords)\n//         }\n//     })\n//     // 마커찍기\n//     // var positions = [\n//     //     {\n//     //         title: \"남산 등산 시작 하는 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.54985519962201,\n//     //             126.98760278488614\n//     //         ),\n//     //     },\n//     //     {\n//     //         title: \"남산 중턱에 있는 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.55097273746865,\n//     //             126.990895747622\n//     //         ),\n//     //     },\n//     //     {\n//     //         title: \"남산 동쪽에 있는 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.54959434528029,\n//     //             126.99286497772725\n//     //         ),\n//     //     },\n//     //     {\n//     //         title: \"남산 정상 도착한 사람\",\n//     //         latlng: new kakao.maps.LatLng(\n//     //             37.548621124373355,\n//     //             126.99080550321914\n//     //         ),\n//     //     },\n//     // ]\n//     // var imageSrc =\n//     //     \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"\n//     // for (var i = 0; i < positions.length; i++) {\n//     //     // 마커 이미지의 이미지 크기 입니다\n//     //     var imageSize = new kakao.maps.Size(24, 35)\n\n//     //     // 마커 이미지를 생성합니다\n//     //     var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize)\n\n//     //     // 마커를 생성합니다\n//     //     var marker = new kakao.maps.Marker({\n//     //         map: map, // 마커를 표시할 지도\n//     //         position: positions[i].latlng, // 마커를 표시할 위치\n//     //         title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n//     //         image: markerImage, // 마커 이미지\n//     //     })\n//     // }\n//     // 마커 클러스터러를 생성합니다\n//     var clusterer = new kakao.maps.MarkerClusterer({\n//         map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n//         averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n//         minLevel: 9, // 클러스터 할 최소 지도 레벨\n//     })\n\n//     // 데이터를 가져오기 위해 jQuery를 사용합니다\n//     // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n//     $.get(url + \"/post/location\", function (data) {\n//         // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n//         // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n//         // // console.log($(data.positions))\n//         // var markers = $(data.positions).map((i, position) => {\n//         //     return new kakao.maps.Marker({\n//         //         position: new kakao.maps.LatLng(position.lat, position.lng),\n//         //     })\n//         // })\n//         // console.log(markers)\n//         // // 클러스터러에 마커들을 추가합니다\n//         // clusterer.addMarkers(markers)\n//         //////////////////////////////////////////////////////////\n//         ////////////////////////////////////////////////////\n//     })\n// }, [\n//     kakao.maps.LatLng,\n//     kakao.maps.Marker,\n//     kakao.maps.event,\n//     kakao.maps.Map,\n//     searchWord,\n// ])\n","import React from \"react\"\n// import { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\n\nconst Container = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100%;\n    border: 1px solid pink;\n    position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // max-width: 100%;\n        width: 100%;\n        position: relative;\n    }\n`\n\nexport default function Map() {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { updateWeatherInfo } from \"../actions/index\"\n// import Loading from \"./Loading\";\n\n\nconst HomeContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nbackground-color: var(--page-bg-color);\nul {\n  list-style: none;\n}\n`;\n\nconst LeftContainer1 = styled.div`\ndisplay: flex;\ngap: 0.1rem;\nflex-direction: row;\nwidth: 50vw;\nflex-wrap: wrap;\n.weatherInfo {\n    text-align: center;\n  }\n.codiInfo {\n  text-align: center;\n}\n`;\n\n\nconst LeftNav1 = styled.nav`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 5px;\n    padding: 10px;\n`\n\nconst LeftNav2 = styled(LeftNav1)``\nconst LeftNav3 = styled(LeftNav1)``\n\nconst RightContainer = styled.div`\n  display: grid;\n  height:100vh;\n  width: 80vw;\n  grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr 2.3fr;\n  grid-template-columns: 1fr 1fr;\n  grid-area: \n  \"nav nav\"\n  \"main main\"\n  \"main main\"\n  ;\n  grid-gap:0.1rem;\n  transition: all 0.01s ease-in-out;\n  //(max-width: 1081px)\n  @media (max-width: 600px) {\n    grid-template-rows: 0.5fr 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      \"nav\"\n      \"main\"\n  }\n  .userPost {\n    text-align: center;\n  }\n`;\n\n\nconst RightNav1 = styled.nav`\n    margin-top: 0.8rem;\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \"nav nav\";\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n`\n// const RightNav2 = styled(RightNav1)``;\n\nconst url = process.env.REACT_APP_LOCAL_URL;\n\nexport default function Home() {\n    const dispatch = useDispatch()\n    const { item } = useSelector((state) => state.itemReducer)\n    console.log(item)\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n  \n    const [weatherData, setWeatherData] = useState()\n    useEffect(() => {\n\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n          let lat = position.coords.latitude, // 위도\n              lon = position.coords.longitude // 경도\n          console.log(lat, lon) //브라우저에 찍힘        \n          axios({\n              url: url + \"/map\",\n              method: \"post\",   \n              data: { lat: lat, lon: lon },\n              withCredentials: true\n          })\n          .then((res) => {\n            //console.log(res.data)\n            //console.log(res.data.item)\n            setWeatherData(res.data)\n            dispatch(updateWeatherInfo(res.data))    \n          })\n      })\n    };\n  }, [])\n \n\n    return (\n        <div className=\"homecontainer\">\n            {/* <Loading /> */}\n            <HomeContainer>\n                <LeftContainer1>\n                    <LeftNav1>\n                        00구 주민예보\n                        <div className=\"weatherInfo\"></div>\n                    </LeftNav1>\n                    <LeftNav2>\n                        기상청 일기예보\n                        <div className=\"weatherInfo\">\n                        <ul>\n                          {/* {console.log(weatherData.item)}  */}\n                          {/* weatherData -> {item: Array(30)}, weatherData.item -> [ baseDate: '20211106',baseTime: '2130',category: 'T1H', fcstDate: '20211107', fcstTime: '0300', fcstValue: '10', nx: 59, ny: 128, ... ] */}\n                         { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>날짜:{info.baseDate}</li> })[0] }\n                         { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>기준 예보시각:{info.baseTime}</li> })[0] }\n                         { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>현재위치 기온:{info.fcstValue}</li> })[24] } {/* T1H */}\n                         { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>현재위치 하늘상태:{info.fcstValue  === \"1\" ? (info.fcstValue  === \"3\" ? \"맑음\" : \"구름많음\") : \"흐림\" }</li> })[18] } {/* SKY */}\n                         {/* { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>현재위치 날씨상태:{info.fcstValue === 0 ? null : \"해\"}</li> })[6] } PTY */}\n                         { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>현재위치 날씨상태:{info.fcstValue === \"0\" ? (info.fcstValue === \"1\" ? \"비\" : \"강수량 없음\"): \"눈\" }</li> })[6] } {/* PTY */}\n                        </ul> \n                        </div>\n                    </LeftNav2>\n                    <LeftNav3>\n                        00구 날씨 기반 추천 코디\n                        <div className=\"codiInfo\"></div>\n                    </LeftNav3>\n                </LeftContainer1>\n\n                <RightContainer>\n                    <RightNav1>00구 주민예보글</RightNav1>\n                    {/* <RightNav2>오른쪽2</RightNav2> */}\n                    <div className=\"userPost\">1</div>\n                    <div className=\"userPost\">2</div>\n                    <div className=\"userPost\">3</div>\n                    <div className=\"userPost\">4</div>\n                    <div className=\"userPost\">5</div>\n                    <div className=\"userPost\">6</div>\n                    <div className=\"userPost\">7</div>\n                    <div className=\"userPost\">8</div>\n                </RightContainer>\n            </HomeContainer>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\"\n//import { updateCurrentPage, updateStartEndPage } from \"../actions/index\"\nimport { UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE } from \"../actions/index\"\n\nconst Outer = styled.div`\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  min-height: 100vh;\n  padding-top: 100px;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 3vh;\n  }\n`\n\n// 그리드\nconst Container = styled.div` \n  display: grid;\n  /* height: 83vh; */\n  gap: 3rem;\n  margin-left: 3vw;\n  margin-right: 3vw;\n  \n  justify-content: center;\n  align-items: center;\n  grid-template-rows: 3fr 3fr;\n  /* grid-template-columns: 5fr 5fr; */\n  grid-template-areas: \n  \"div div\"\n  \"div div\";\n  /* overflow: auto; */\n  // (max-width: 600px)\n\n  @media (max-width: 1081px) {\n    gap: 2rem;\n    grid-template-rows: 1fr 1fr 1fr 1fr;\n    /* grid-template-columns: 5fr; */\n    grid-template-areas: \n    \"div\"\n    ;\n  }\n`;\n\nconst BookMarkContainer = styled.div`\n  background-color: rgba(255, 255, 255, 0.6);\n  display: flex;\n  gap: 0.1rem;\n  justify-content: space-around;\n  border: 1px solid #dbdbdb;\n  border-radius: 3px;\n`;\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n  flex-basis: 30rem;\n  .postPicture{\n    margin: 1rem 2rem 1rem 1rem;\n    padding: 0;\n    /* border: solid 1px black; */\n    height: 25vh;\n    align-items: center;\n  }\n  .postImg {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media screen and (max-width: 1081px) {\n    .postPicture{\n      height: 20vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    .postPicture{\n      margin: 0;\n    }\n  }\n`;\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n  margin: 1rem;    \n  line-height: 3rem;\n  flex-direction: column;\n  flex-basis: 15rem;\n  justify-content: flex-start;\n\n  .postTitle {\n    font-weight: bold;\n    font-size: 2rem;\n  }\n  .postDate {\n    font-size: 1.5rem;\n  }\n  .postWeather {\n    /* font-size: 1.5rem; */\n    width: 3rem;\n    height: 3rem;\n  }\n  img{\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 1081px) {\n    line-height: 2rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    margin: 0.1rem 0 0 0.5rem;\n    line-height: 1.4rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n`;\n// 북마크 아이콘\nconst BookMarkIcon = styled.div`\n  flex-direction: column;\n  flex-basis: 10.5rem;\n  text-align: end;\n  margin: 1rem;\n  color: #ED4956;\n\n  @media screen and (max-width: 375px) {\n    margin: 0;\n    padding: 0 0.3rem 0 0;\n    font-size: 10px;\n  }\n`\n\n// 페이지네이션\nconst Pagination = styled.div`\n  background-color: #FAFAFA;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10vh;\n  /* margin: 2rem; */\n  list-style: none;\n  \n  button{\n    font-size: 1.5rem;\n    margin: 0 1vw;;\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 2vh;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 5vh;\n    padding-bottom: 3vh;\n    button{\n      font-size: 1rem;\n    }\n  } \n`\n\n\nconst PrevPage = styled.div``\n\nconst PageNumber = styled.div`\n  li {\n    float: left;\n    margin: 1rem;\n  }\n  button{\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    li{\n      margin: 0;\n    }\n    button{\n      margin: 0 2vw;\n      font-size: 1rem;\n    }\n  }\n`\n\nconst NextPage = styled.div``;\n\nexport default function BookMark() { \n  \n  // 페이지네이션\n  const state = useSelector(state => state.itemReducer);\n  const { start, end, current } = state; \n  const dispatch = useDispatch();\n  // const updateCurrentPages = dispatch(updateCurrentPage);\n  // const updateStartEndPages = dispatch(updateStartEndPage);\n  const updateCurrentPages = page => (dispatchs) => {\n    dispatch({ type: UPDATE_CURRENT_PAGE, payload: page })\n  }\n  const updateStartEndPages = (start, end) => (dispatchs) => {\n    dispatch({ type: UPDATE_START_END_PAGE, payload: { start, end } })\n  }\n\n  const per = 4\n  //테스트중 갯수 20개로 고정\n  const total = Math.ceil(20 / per)\n\n  const arr = []\n  for (let i = 0; i < total; i++) {\n      arr.push(i + 1)\n  }\n  const target = arr.slice(start, end)\n\n  return (\n    <Outer>\n      <Container>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n        <BookMarkContainer>\n          <BookMarkPhoto>\n            <div className=\"postPicture\">\n              <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" />\n            </div>\n          </BookMarkPhoto>\n          <BookMarkList>\n            <div className=\"postTitle\">\n              00구\n            </div>\n            <div className=\"postDate\">10 / 25</div>\n            <div className=\"postWeather sky\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img>\n            </div>\n            <div className=\"postWeather wind\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img>\n            </div>\n            <div className=\"postWeather temp\">\n              <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img>\n            </div>\n          </BookMarkList>\n          <BookMarkIcon>\n            {/* 북마크 버튼 렌더링 필요  */}\n            <FontAwesomeIcon icon={faHeart} size=\"2x\"/>\n          </BookMarkIcon>\n        </BookMarkContainer>\n\n\n        {/* <Pagenation>\n          <PrevPage>이전</PrevPage>\n          <NextPage>다음</NextPage>\n        </Pagenation> */}\n      </Container>\n\n      <Pagination>\n        <PrevPage>\n          <li className=\"prevPage\">\n            <button className=\"previousPages\" onClick={() => {\n              if(current === 1) return alert('첫번째 페이지입니다')\n              if(current % 10 === 1) {\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPages(s, e);\n              }\n              updateCurrentPages(current - 1);\n            }}>\n              이전\n            </button>\n          </li>\n        </PrevPage>\n\n        <PageNumber>\n        {target.map(el => (\n          <li className=\"pageNum\" key={el}>\n            <button className=\"pageNumbers\" onClick={() => {updateCurrentPages(el)}}>\n              {el}\n            </button>\n          </li>\n        ))}\n        </PageNumber>\n        \n        <NextPage>\n        <li className=\"nexPage\">\n            <button className=\"nextPages\" onClick={() =>{\n              if(current % 10 === 1) {\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPages(s, e);\n              }\n              updateCurrentPages(current + 1);\n            }}>\n              다음\n            </button>\n          </li>\n        </NextPage>\n      </Pagination>\n    </Outer>\n  )\n\n\n}","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin, changeSearchword } from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100vw;\n    height: 125px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    border-bottom: 0.5px solid #dbdbdb;\n\n    h1 {\n        font-weight: bold;\n        font-size: 2.5rem;\n        margin: 0;\n        padding: 0;\n    }\n\n    @media screen and (min-width: 1081px) {\n        width: 100vw;\n        background-color: white;\n        flex-direction: row;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        /* border: 1px solid red;  // 확인용 */\n    }\n`\n\nconst Wing = styled.div`\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst TitleAndLogo = styled.div`\n    display: ${(props) => (props.isMobileLogo ? \"flex\" : \"none\")};\n    justify-content: center;\n    align-items: center;\n    color: #231f20;\n    font-family: cursive;\n    & img {\n        width: 20%;\n        margin-right: 0.5rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst Center = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-width: 350px;\n    justify-content: space-around;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        flex-growth: 2;\n        width: 60vw;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n    position: absolute;\n    top: 50px;\n    border: 1px solid #e0e0e0;\n    @media screen and (max-width: 1081px) {\n        top: 32px;\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    background-color: var(--page-bg-color);\n    border: 0.5px solid #dbdbdb;\n    border-radius: 3px;\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n        height: 30px;\n        font-size: 1rem;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: black;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n`\n// const SearchBarAndDaumPost = styled.div`\n//     // display: flex;\n//     // flex-direction: row;\n//     position: relative;\n//     margin: \"100px solid green\";\n// `\n// const DaumPostcodeWrap = styled.div`\n//     height: 3.5rem;\n//     width: 100%;\n//     // padding-right: 2.5rem;\n// `\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    /* padding: 0.3rem; */\n`\n\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    @media screen and (max-width: 1081px) {\n        padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n    }\n    @media screen and (max-width: 375px) {\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n        padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n        height: 2rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Header({ isInput, isMobileLogo }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    const [onFocus, setOnFocus] = useState(false)\n\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <HeaderOuter className=\"header\">\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n                    src=\"img/img4.png\"\n                    alt=\"logo\"\n                />\n                <h2 onClick={() => history.push(\"/\")}>There Weather</h2>\n            </TitleAndLogo>\n\n            {isInput ? (\n                <Center className=\"headerCenter\">\n                    <InputAndSubmit className=\"inputAndSubmit\">\n                        <Input\n                            // onClick={(e) => console.log(e)}\n                            onChange={(e) => setSearchEvent(e.target.value)}\n                            type=\"text\"\n                            placeholder=\"위치 검색\"\n                            value={searchEvent}\n                            // ref={inputRef}\n                            // onClick={onRest}\n                            onFocus={(e) => setOnFocus(true)}\n                        />\n                        <Buttons2 bgGrey>\n                            {onFocus ? (\n                                <Cancel onClick={() => setOnFocus(false)}>\n                                    Cancel\n                                </Cancel>\n                            ) : (\n                                <FontAwesomeIcon\n                                    onClick={() =>\n                                        dispatch(changeSearchword(searchEvent))\n                                    }\n                                    icon={faSearch}\n                                />\n                            )}\n                        </Buttons2>\n                        {/* <SearchBarAndDaumPost> */}\n                        {/* <DaumPostcodeWrap> */}\n\n                        {/* </DaumPostcodeWrap> */}\n                        {/* </SearchBarAndDaumPost> */}\n                    </InputAndSubmit>\n                    {onFocus ? (\n                        <StyledPostCode\n                            className=\"daumPostCodeContainer\"\n                            onComplete={handleComplete}\n                        />\n                    ) : (\n                        <></>\n                    )}\n                    <Buttons className=\"headerButtons\">\n                        <Button>\n                            <FontAwesomeIcon icon={faSun} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faCloud} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faCloudRain} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faPooStorm} />\n                        </Button>\n                        <Button>\n                            <FontAwesomeIcon icon={faSnowflake} />\n                        </Button>\n                    </Buttons>\n                </Center>\n            ) : (\n                <Center className=\"headerCenter\" />\n            )}\n\n            {isLogin ? (\n                <Wing className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button className=\"login\" onClick={logoutBtnHandler} isText>\n                        로그아웃\n                    </Button>\n                    <Button\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        마이페이지\n                    </Button>\n                </Wing>\n            ) : (\n                <Wing className=\"loginAndSingupButtons\">\n                    <Button\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        로그인\n                    </Button>\n                    <Button\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        회원가입\n                    </Button>\n                </Wing>\n            )}\n        </HeaderOuter>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faHome,\n    faHeart,\n    faMapMarkerAlt,\n    faPencilAlt,\n    faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\"\nconst Outer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    z-index: 100;\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    @media screen and (min-width: 1081px) {\n        width: 1080px;\n    }\n`\n\nconst Buttons = styled.div`\n    background-color: WHITE;\n    height: 70px;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 101;\n    border-top: 1px solid #dbdbdb;\n\n    @media screen and (min-width: 1081px) {\n        position: fixed;\n        background-color: white;\n        border-top: 1px solid #dbdbdb;\n        border-left: 1px solid #dbdbdb;\n        width: 400px;\n    }\n`\n\nconst Button = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n`\n\nexport default function MenuBar() {\n    const history = useHistory()\n    return (\n        <Outer className=\"menuBar\">\n            <Buttons>\n                {/*\n                    <Link to='/mainpage'>\n                    <Button>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Button>\n                    </Link>\n                */}\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/homeorlogin\")}\n                        icon={faHome}\n                    /> */}\n                    <img \n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-home-instagram-flatart-icons-outline-flatarticons.png\"\n                        onClick={() => history.push(\"/homeorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                        icon={faHeart}\n                    /> */}\n                    <img \n                        src=\"https://img.icons8.com/ios/45/000000/like--v1.png\"\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/map\")}\n                        icon={faMapMarkerAlt}\n                    /> */}\n                    <img \n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n                        onClick={() => history.push(\"/map\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/writeorlogin\")}\n                        icon={faPencilAlt}\n                    /> */}\n                    <img \n                        src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n                        onClick={() => history.push(\"/writeorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                        icon={faUserAlt}\n                    /> */}\n                    <img \n                        src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                    />\n                </Button>\n            </Buttons>\n        </Outer>\n    )\n}","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n\n    &:nth-child(2) {\n        margin-top: 3vh;\n    }\n\n    &:hover {\n        border: 1px solid #262626;\n        p {\n            color: #262626;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n\n                <InfoBox>\n                    <button onClick={() => history.push(\"/messenger\")}>\n                        <p>메신져</p>\n                    </button>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: calc(100vh - 125px);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n    p {\n        font-size: 1.5rem;\n        color: #dbdbdb;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        border: 1px solid #262626;\n        p{\n            color: #262626;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n\n    }\n`\n\nexport default function More() {\n    const history = useHistory()\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .3rem;\n  font-size: 1.2rem;\n  background-color: var(--modal-confirm-button-bg);\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Button = styled.button`\n    display: none;\n    \n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        top: 1.5vh;\n        position: fixed;\n        border-radius: 50%;\n        z-index:100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\n\nconst Outer = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: calc(100vh - 125px);\n    position: relative;\n    display: flex;\n    padding-bottom: 100px;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        min-height: calc(100vh - 125px - 70px);\n    }\n`\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n    width: 30%;\n    padding: 15vh 1vw 1vh 1vw;\n    text-align: center;\n    button {\n        // 비밀번호 수정, 회원탈퇴\n        color: #336fc9;\n        font-size: 1.5rem;\n        margin-top: 1vh;\n    }\n    .mediaBox {\n        margin-top: 2vh;\n        margin-bottom: 2vh;\n        p {\n            margin-top: 1vh;\n        }\n        #user-name {\n            font-size: 1.5rem;\n            font-weight: bold;\n        }\n        #user-changeInfo {\n            color: #336fc9;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border-bottom: 1px solid #aaa;  // 구분선 추가 */\n        margin: 0 auto;\n        margin-top: 4vh;\n        width: 100%;\n        padding: 0 1vw 3vh 1vw;\n        .mediaBox {\n            width: 40%;\n            display: inline-block;\n            text-align: left;\n            p {\n                margin-top: 2vh;\n                justify-content: center;\n                line-height: 3vh;\n                font-size: 1.2rem;\n            }\n        }\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            font-size: 1rem;\n        }\n        .mediaBox {\n            width: 50%;\n            display: inline-block;\n            padding-bottom: 1vh;\n            p {\n                margin-top: 0;\n                justify-content: center;\n                font-size: 1rem;\n            }\n            #user-name {\n                font-size: 1rem;\n            }\n        }\n    }\n`\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n    width: 200px;\n    height: 200px;\n    padding: 10px 10px;\n    border-radius: 50%;\n    @media screen and (max-width: 1081px) {\n        margin-right: 5vw;\n    }\n    @media screen and (max-width: 375px) {\n        width: 7rem;\n        height: 7rem;\n    }\n`\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-end;\n    text-decoration: none;\n\n    button {\n        font-size: 1.2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 100vw; // 가운데로 맞춤\n        align-items: center;\n        height: 10vh;\n        position: absolute;\n        bottom: 0;\n    }\n    @media screen and (max-width: 375px) {\n        padding: 0 15vw;\n        height: 20vh;\n        justify-content: space-between;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n    width: 100vw;\n    padding: 2vh 3vw 2vh 5vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 200px 1fr 1fr;\n\n    row-gap: 10px; /* row의 간격을 10px로 */\n    column-gap: 20px; /* column의 간격을 20px로 */\n    border-top: 1px solid #aaa; // 구분선 추가\n\n    .item:nth-child(1) {\n        border: none;\n        grid-column: 1 / 4;\n        grid-row: 1 / 2;\n    }\n\n    div {\n        background-color: rgba(255, 255, 255, 0.5); // 추가\n    }\n    div:hover {\n        border: 1px solid var(--page-bg-color);\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n    .more {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n        background-color: transparent;\n    }\n    p {\n        font-size: 2rem;\n        margin: 0 auto;\n        font-weight: bold;\n        color: #8e8e8e;\n    }\n    .moreView {\n        font-size: 1.5rem;\n        color: #336fc9;\n        width: 5vw;\n    }\n\n    @media screen and (max-width: 1380px) {\n        .moreView {\n            font-size: 1.4rem;\n            width: 6vw;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        margin-bottom: 10vh;\n        padding: 0;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 100px 300px 300px;\n        row-gap: 5px;\n        column-gap: 3px;\n\n        p {\n            font-size: 2rem;\n        }\n        .item {\n            margin: 0.5vh;\n        }\n        .moreView {\n            width: 80px;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        padding-left: 2vw;\n        padding-right: 2vw;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 50px 150px 150px 150px;\n        .item:nth-child(1) {\n            border: none;\n            grid-column: 1 / 3;\n            grid-row: 1 / 2;\n        }\n        p {\n            font-size: 1rem;\n        }\n        .moreView {\n            font-size: 1rem;\n            width: 50px;\n            height: 3rem;\n        }\n    }\n`\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function MyPage() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, userInfo } = useSelector((state) => state.itemReducer)\n    console.log(userInfo)\n\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [removeUser, setremoveUser] = useState(false)\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const [currentPosts, setcurrentPosts] = useState([])\n    // 게시물 데이터 조회\n    useEffect(() => {\n        axios({\n            url: url + \"/mypage\",\n            method: \"get\",\n            withCredentials: true,\n        }).then((res) => {\n            setcurrentPosts(res.data)\n            console.log(currentPosts)\n        })\n    }, [])\n\n    // 정보수정\n    const changeUserInfo = () => {\n        console.log(\"정보수정 클릭\")\n    }\n\n    const removeUserInfo = () => {\n        setIsModalOpen(true)\n    }\n\n    const modalYesButtonHandlers = () => {\n        //console.log('회원탈퇴 완료');\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .delete(url + \"/removeuser\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `token ${token}`,\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                localStorage.clear(token)\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n        //setIsModalOpen(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n    const modalCloseButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n\n    // 게시물사진 클릭했을 때\n    const postClickHandler = () => {\n        //test\n        history.push(\"/postread\")\n        // 해당 게시물의 id, user_id\n    }\n\n    // 더보기\n    const moreViewHandler = () => {\n        history.push(\"/mypost\")\n    }\n\n    return (\n        <Outer>\n            <GoBackButton />\n            <ProfileArea>\n                <ProfileImg src={`${process.env.PUBLIC_URL}img/user-img.png`} />\n                <div className=\"mediaBox\">\n                    <p id=\"user-name\">{userInfo.user_id}</p>\n                    <p id=\"user-gender\">성별 : {\"남성\"}</p>\n                    <p id=\"user-location\">나의 위치 : {userInfo.location}</p>\n                    <p id=\"user-changeInfo\" onClick={changeUserInfo}>\n                        정보수정\n                    </p>\n                </div>\n                <ButtonArea>\n                    <button onClick={() => history.push(\"/editpassword\")}>\n                        비밀번호 수정\n                    </button>\n                    <button onClick={removeUserInfo}>회원탈퇴</button>\n                    {isModalOpen === false ? null : (\n                        <ModalConfirm\n                            yesHandler={modalYesButtonHandlers}\n                            noHandler={modalNoButtonHandler}\n                            closeHandler={modalCloseButtonHandler}\n                        >\n                            <p>탈퇴하시겠습니까?</p>\n                            <p>이유를 선택해 주세요</p>\n                            <select name=\"pets\" id=\"pet-select\">\n                                <option value=\"\">선택</option>\n                                <option value=\"notUseful\">\n                                    사용을 많이 하지 않음\n                                </option>\n                                <option value=\"inconvenientDesign\">\n                                    디자인이 불편함\n                                </option>\n                                <option value=\"otherOptions\">\n                                    다른 앱을 이용하기 위해\n                                </option>\n                                <option value=\"andSoForth\">기타</option>\n                            </select>\n                        </ModalConfirm>\n                    )}\n                </ButtonArea>\n            </ProfileArea>\n\n            <GridArea>\n                <div className=\"item more\">\n                    <p>내가 쓴 예보</p>\n                </div>\n                <div className=\"item\" onClick={postClickHandler}>\n                    <img\n                        src={`${process.env.PUBLIC_URL}img/sky.png`}\n                        alt=\"weather\"\n                    />\n                </div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <div className=\"item\"></div>\n                <button className=\"moreView\" onClick={moreViewHandler}>\n                    더 보기\n                </button>\n            </GridArea>\n        </Outer>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\n\n/*\n  TODO\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우 (버튼과 연결?)\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100vw;\n    min-height: calc(var(--mobile-page-height) - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst LoginInputAndTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: black;\n    background-color: pink;\n    border-radius: 1rem;\n    > span {\n        margin: 0.25rem;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#419300\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = \"http://localhost:3000\"\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    if (!url) {\n        url = \"https://thereweather.space\"\n        clientUrl = \"https://there-weather.vercel.app\"\n    }\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] =\n        useState(\"아이디를 입력하세요.\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    useEffect(() => {\n        console.log(\"나는 login.js\")\n\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        {/* <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호\"\n                                    onChange={idOnChangeHanlder(\"pwInput\")}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.pwInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호 확인</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwCheckInput\"\n                                    placeholder=\"비밀번호 확인\"\n                                    onChange={idOnChangeHanlder2}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{pwCheckInputMessage}</li>\n                            </ValidationListBox>\n                        </StyledArticle> */}\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <h2>로그인</h2>\n                    <div className=\"Login--center\">\n                        <LoginStyledArticle className=\"id\">\n                            <LoginInputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <LoginInputText\n                                    type=\"text\"\n                                    name=\"idInput\"\n                                    placeholder=\"아이디를 입력하세요\"\n                                    value={idInput}\n                                    onChange={loginidOnChangeHanlder}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"idValidationList\">\n                                <li>{idInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n\n                        <LoginStyledArticle className=\"password\">\n                            <LoginInputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <LoginInputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                    value={pwInput}\n                                    onChange={pwOnChangeHandler}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"pwValidationList\">\n                                <li>{pwInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n\n                        {/* 소셜로그인 */}\n                        <LoginButton onClick={googleLoginButtonHandler} google>\n                            <FontAwesomeIcon icon={faGoogle} />\n                            <span>구글 로그인</span>\n                        </LoginButton>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport axios from \"axios\";\nimport { changeUserPw } from \"../actions/index\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\n\n/*\n  TODO - 비밀번호 수정 페이지\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [x] 함수로 구현\n      - [x] (둘 다) input이 없는 경우 - li\n      - [x] (새 비밀번호) 조건에 안 맞는 경우 - li\n      - [] (현재 비밀번호) 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n  [] 최종 결과 모아서 악시오스 요청\n*/\n\nconst Outer = styled.section`\n  position: relative;\n  width: 100vw;\n  /* height: var(--mobile-page-height); */\n  min-height: 100vh;\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    text-align: center;\n    font-size: 2rem;\n    font-weight: bold;\n    margin-bottom: 2rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    /* height: calc(100vh - 125px); */\n\t}\n`;\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst InputAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n\n  h3 {\n    font-size: 1.4rem;\n    margin: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst InputText = styled.input`\n  min-width: 150px;\n  width: 30vw;\n  font-size: 1.2rem;\n  padding: .5rem;\n`;\n\nconst ValidationListBox = styled.ul`\n  list-style: none;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n`;\n\nconst StyledLi = styled.li`\n  height: 1.2rem;\n  padding: 0 1.5rem;\n  color: ${ props => props.valid ? `var(--font-validation-positive)` : `var(--font-validation-negative)` };\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem auto;\n`;\n\nconst Button = styled.button`\n  width: 25vw;\n  min-width: 50px;\n  max-width: 200px;\n  margin: 1rem;\n  padding: .8rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: white;\n  background-color: ${ props => props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)` };\n  border-radius: 1rem;\n`;\n\nconst TextButton = styled.button`\n  align-self: flex-end;\n  margin: 1rem 3rem;\n  font-size: 1rem;\n  color: grey;\n  text-decoration: underline;\n`;\n\n\nexport default function PasswordEdit() {\n  const { password } = useSelector((state) => state.itemReducer)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n\n  const [ curPwd, setCurPwd ] = useState('');\n  const [ newPwd, setNewPwd ] = useState('');\n  const [ curPwdInputWarning, setCurPwdInputWarning ] = useState('비밀번호를 입력해주세요.');\n  const [ newPwdInputWarning, setNewPwdInputWarning ] = useState({\n    isNoInput: '비밀번호를 입력해주세요.',\n    isTooShort: '8자 이상이어야 합니다.',\n    isWrongType: '숫자와 문자를 포함해야 합니다.'\n  });\n  const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning;\n  const [ isValid, setIsValid ] = useState('');\n\n  const validationReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    // 정규식 : 문자/숫자/특수문자 모두 포함, 8자 이상\n\n  const curInputHandler = (e) => {\n    setCurPwd(prev => e.target.value);\n    // console.log(e.target.value)\n    if (e.target.value.length === 0) {\n      setCurPwdInputWarning(prev => '비밀번호를 입력해주세요.');\n    } else {\n      setCurPwdInputWarning(prev => '');\n    }\n  }\n\n  const newInputHandler = (e) => {\n    setNewPwd(prev => e.target.value);\n\n    // 유효성 검사\n    if (e.target.value.length === 0) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: '비밀번호를 입력해주세요.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: ''}\n      });\n    }\n\n    if (!validationReg.test(e.target.value)) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: '문자, 숫자, 특수문자가 모두 포함되어야 합니다.'}\n      });\n      setIsValid(prev => '')\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: ''}\n      });\n      setIsValid(prev => '사용 가능합니다.')\n    }\n\n    if (e.target.value.length < 8) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: '8자 이상이어야 합니다.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: ''}\n      });\n    }\n  }\n\n  // 버튼 클릭 이벤트\n  const editButtonHandler = (e) => {\n    // e.prevntDefault()\n\n    let newPwdValid = validationReg.test(newPwd)\n    console.log('새 비밀번호 유효성 검사 결과', newPwdValid);\n    // TODO\n    // 클라이언트 로컬스토리지에 있는 토큰을 찾아서 \n    // 헤더에 담아서 서버에 전달 \n    // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\")) //문자열벗긴 토큰\n    //console.log(token) //토큰찾음\n    axios.put(\"http://localhost/password\", \n    { password: newPwd }, \n    { headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `token ${token}`,\n    },\n     withCredentials: true })\n     .then((res) => {\n      // console.log(res.data)\n      dispatch(changeUserPw(true))\n      history.push(\"/mypage\")\n     })\n  }\n\n  const cancelButtonHandler = (e) => {\n    console.log('취소 버튼 동작 확인')\n    setCurPwd(prev => '');\n    setNewPwd(prev => '');\n    setIsValid(prev => '');\n    // TODO 이전 페이지로\n    history.push('/home');\n  }\n\n  // 탈퇴 모달에 붙은 함수\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\n  const withdrawButtonHandler = (e) => {\n    console.log('탈퇴 버튼 동작확인');\n    setIsModalOpen(true);\n  }\n\n  const modalSelectList = [\n    [null, \"--탈퇴 이유 선택--\"],\n    [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n    [\"inconvenientDesign\", \"디자인이 불편함\"],\n    [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n    [\"etc\", \"기타\"]\n  ];\n\n  const [ modalSelected, setModalSelected ] = useState(\"\");\n  const handleChangeSelect = (e) => {\n    setModalSelected(prev => e.target.value);\n  }\n\n  const modalCloseButtonHandler = (e) => {\n    console.log('모달 닫기 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n  const modalYesButtonHandler = (e) => {\n    console.log('모달 yes 버튼 동작 확인');\n  }\n\n  const modalNoButtonHandler = (e) => {\n    console.log('모달 no 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n\n  return (\n    <Outer className=\"loginPageComponent\">\n      <h2>비밀번호 변경</h2>\n\n      <div className=\"Login--center\">\n        <StyledArticle className=\"id\">\n          <InputAndTitle className=\"inputIdSection\">\n            <h3>현재 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"curPwd\"\n              placeholder=\"현재 비밀번호를 입력하세요\"\n              onChange={curInputHandler}\n              value={curPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"idValidationList\">\n            <StyledLi>{curPwdInputWarning}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n\n        <StyledArticle className=\"password\">\n          <InputAndTitle className=\"inputPwSection\">\n            <h3>새 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"newPwd\"\n              placeholder=\"비밀번호를 입력하세요\"\n              onChange={newInputHandler}\n              value={newPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"pwValidationList\">\n            <StyledLi valid>{isValid}</StyledLi>\n            <StyledLi>{isNoInput}</StyledLi>\n            <StyledLi>{isTooShort}</StyledLi>\n            <StyledLi>{isWrongType}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n      </div>\n\n      <Buttons className=\"login--buttons\">\n        <div>\n          <Button onClick={editButtonHandler} edit>수정</Button>\n          <Button onClick={cancelButtonHandler}>취소</Button>\n        </div>\n      </Buttons>\n\n      <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton>\n\n      {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      }\n    </Outer>\n  );\n}","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\n\n/*\n  TODO\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#419300\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n// const url = process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_URL\n\nexport default function SignUp() {\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력해주세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n    })\n    const history = useHistory()\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\n\nconst Outer = styled.div`\n\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  /* height: 100vh; */\n  min-height: 100vh;\n  padding-top: 100px;\n  button{\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    padding-top: 2vh;\n  }\n  @media screen and (max-width: 1081px) {\n    /* height: auto; */\n  }\n`\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 300px 300px;\n    grid-gap: 1.5rem;\n    height: 70vh;\n    p{\n      font-size: 28px;\n    }\n\n    .item {\n      background-color: rgba(255, 255, 255, 0.6);\n      display: flex;\n    }\n    .item:nth-child(odd) {\n        margin-left: 5vw;\n    }\n    .item:nth-child(even) {\n        margin-right: 5vw;\n    }\n    .item:hover {\n    }\n    \n    @media screen and (min-width: 2100px) {\n        height: 50vh;\n\n        .item:nth-child(odd) {\n            margin-left: 30vw;\n        }\n        .item:nth-child(even) {\n            margin-right: 30vw;\n        }\n    }\n    @media screen and (max-width: 1081px) {\n      padding-left: 5vw;\n      padding-right: 5vw;\n      height: 100vh;\n      grid-template-columns: 1fr;\n      grid-template-rows: 3fr 3fr 3fr 3fr;\n\n      .item:nth-child(odd),\n      .item:nth-child(even) {\n        margin: 0 2vw;\n      }\n    }\n    @media screen and (max-width: 600px) {\n      padding-left: 2vw;\n      padding-right: 2vw;\n      p{\n        font-size:20px\n      }\n    }\n    @media screen and (max-width: 375px) {\n      height: auto;\n    }\n`\n// 게시물 사진\nconst PostImg = styled.img`\n  width: 50%;\n  height: 100%;\n  background-color: #FFFFFF;\n\n  @media screen and (min-width: 2100px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    // 이미지 크기 수정 필요\n  }\n`\n// 게시물 내용\nconst PostInfo = styled.div`\n  width: 50%;\n  padding: 3vh 2vw 2vh 2vw;\n  font-size: 2rem;\n  align-items: center;\n  p{\n    margin-top: 10px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    padding: 1vh 2vw 2vh 2vw;\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    font-size: 1rem;\n    padding-left: 3vw;\n  }\n\n`\n\n// 페이지네이션\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    li {\n      /* margin: 3px; */\n      list-style: none;\n      padding: 3px;\n      /* border: 1px solid red; */\n    }\n    button {\n      margin: 0 1vw;\n      padding: 1rem 1.5rem;\n      border-radius: 50%;\n    }\n    button:focus{\n      background-color: var(--modal-bg-color);\n    }\n    #prev,\n    #next{\n      background: none;\n    }\n    @media screen and (max-width: 1081px) {\n      margin-top: 30rem;\n      padding-bottom: 5rem;\n\n    }\n\n    @media screen and (max-width: 375px) {\n      margin-top: 3rem;\n      padding-bottom: 3rem;\n      li {\n        /* margin: 0 1vw; */\n        /* margin: 1vh; */\n        padding: 0;\n\n      }\n      button {\n        /* margin: 0 1.5vw; */\n        font-size: 1.5rem;\n        margin: 0;\n        padding: 1px 7px;\n      }\n    }\n`\n\nexport default function MyPost() {\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.itemReducer)\n  const { start, end, current } = state;\n  const updateCurrPage = page => (dispatchs) => {\n    dispatch({ type : UPDATE_CURRENT_PAGE, payload: page })\n  }\n  const updateStartEndPage = (start, end) => (dispatchs) => {\n    dispatch({type: UPDATE_START_END_PAGE, payload: {start, end}})\n  }\n\n  // 페이지별 담는 글 갯수\n  const per = 4;\n\n  // 총 몇개 페이지가 필요한지?\n  const total = Math.ceil(20 / per);\n  // total의 갯수만큼 각 페이지번호가 있는 박스들을 생성하기 위한 mapping을 위한 배열\n  const array = [];\n  for(let i = 0; i < total; i++){\n    array.push(i + 1);\n  }\n  // 총페이지가 10페이지가 넘을 경우에 10개씩 자른다.\n  const target = array.slice(start, end)\n\n  return (\n    <Outer>\n      <GoBackButton/>\n      <GridArea>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        <div className=\"item\">\n          <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n          <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo>\n        </div>\n        {/* <div className=\"item\"></div>\n        <div className=\"item\"></div>\n        <div className=\"item\"></div> */}\n      </GridArea>\n\n      {/* 페이지네이션이나 무한스크롤 */}\n      <Page>\n        <li className=\"page-item\">\n          <button\n            id=\"prev\"\n            className=\"item page-link\"\n            onClick={() => {\n              if(current === 1) return alert('첫번째 페이지 입니다.')\n              if(current % 10 === 1){\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPage(s, e);\n              }\n              updateCurrPage(current - 1);\n            }}\n          >\n            이전\n          </button>\n        </li>\n\n        {target.map(el => (\n          <li className=\"page-item\" key={el}>\n            <button\n              className=\"item page-link\"\n              onClick={() => {\n                updateCurrPage(el)\n              }}\n            >\n              {el}\n            </button>\n          </li>\n        ))}\n\n        \n        <li className=\"page-item\">\n          <button\n            id=\"next\"\n            className=\"item page-link\"\n            onClick={() => {\n              if(current % 10 === 1){\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPage(s, e);\n              }\n              updateCurrPage(current + 1);\n            }}\n          >\n            다음\n          </button>\n        </li>\n      </Page>\n    </Outer>\n  )\n}\n\n","import styled from \"styled-components\"\nimport { useState, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\n\nimport axios from \"axios\"\n\n// import { Upload, SunFill, CloudyFill, CloudRainFill, Snow, Thermometer, ThermometerHalf, ThermometerHigh } from \"@styled-icons/bootstrap\"\n\n/* TODO\n  [] 업로드된 이미지의 크기 정리를 어떻게 할지\n    - 가로, 세로 비율 유지 방법\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    & > img {\n        width: 80%;\n        height: auto;\n        margin: 1rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"blue\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Write() {\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // img src 상태\n    // 테스트용 이미지\n    const imageUrl = {\n        normalLarge:\n            \"https://dummyimage.com/1000x750/7e57c2/fff.png&text=dummy(1000x750)\",\n        normalSmall: \"https://dummyimage.com/300x180/000/fff&text=300x180\",\n        narrowLong:\n            \"https://dummyimage.com/400x800/857285/fff.png&text=400x800\",\n        wideShort: \"https://dummyimage.com/800x300/857285/fff.png&text=800x300\",\n        realImageNormal:\n            \"https://cdn.pixabay.com/photo/2020/11/08/13/28/tree-5723734_1280.jpg\",\n        realImageLong:\n            \"https://cdn.pixabay.com/photo/2021/09/03/02/08/skyscrapers-6594833_1280.png\",\n    }\n\n    // state 변수\n    const [photoSrc, setPhotoSrc] = useState(imageUrl.realImageNormal)\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n        breezy: false,\n        windy: false,\n        strong: false,\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"tshirts\", \"티셔츠\"],\n        [\"shirts\", \"셔츠\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"shorts\", \"반바지\"],\n        [\"pants\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // 사진 업로드 버튼 이벤트\n    const photoUploadButtonHandler = (e) => {\n        console.log(\"사진 업로드 버튼 동작 확인\")\n        // TODO\n        // multer 연결\n        // axios 요청\n        // 이미지 src 바꾸기\n        // setPhotoSrc(res로 받은 src);\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        console.log(userInfo.user_id)\n        axios({\n            url: url + \"/post/write\",\n            method: \"post\",\n            // headers: {\n            //     // accept: \"application/json\",\n            // },\n            data: {\n                user_id: userInfo.user_id,\n                post_photo: uploadedImg.filePath,\n                post_title: title,\n                post_content: postText,\n                weather: selectWeather,\n                wind: selectWind,\n                temp: selectTemp,\n                top_id: selectValueTop,\n                bottom_id: selectValueBottom,\n                xLocation: curLocation.lat,\n                yLocation: curLocation.lon,\n            },\n            withCredentials: true,\n        })\n    }\n\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        if (\n            select === \"sunny\" ||\n            select === \"cloudy\" ||\n            select === \"rainy\" ||\n            select === \"snowy\"\n        ) {\n            setSelectWeather(select)\n        } else if (\n            select === \"breezy\" ||\n            select === \"windy\" ||\n            select === \"strong\"\n        ) {\n            setSelectWind(select)\n        } else if (select === \"cold\" || select === \"hot\") {\n            setSelectTemp(select)\n        }\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons\n                            className=\"filteringButtons\"\n                            onClick={weatherBtnHandler}\n                        >\n                            {weathers.map((weather, idx) => {\n                                return (\n                                    <FilteringBtn\n                                        key={idx}\n                                        name={weather}\n                                        className=\"weatherButton\"\n                                        type=\"button\"\n                                        active={isFilteringBtnActive[weather]}\n                                        onClick={() => weatherFunc(weather)}\n                                    >\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${weather}.png`}\n                                        />\n                                    </FilteringBtn>\n                                )\n                            })}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faTshirt, faSun, faWind, faThermometerHalf } from \"@fortawesome/free-solid-svg-icons\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from  \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Outer = styled.div`\n  width: 100vw;\n  background-color: var(--page-bg-color);\n\n  // 오늘의 코디\n  .todayCodi{\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    font-size: 25px;\n    font-weight: bold;\n    color: #2E2E2E;\n    padding-top: 2vh;\n    border-top: 1px solid #aaa;\n  }\n  @media screen and (max-width: 1081px){\n    .todayCodi{\n      margin-top: 2vh;\n      font-size: 2rem;\n      font-weight: bold;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    .todayCodi{\n      font-size: 1.5rem;\n    }\n  }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`\n// 제목\nconst Title = styled.div`\n  width: 60rem;\n  text-align: center;\n  margin: 0 auto;\n\n  // 제목글자수 제한 필요?\n  span{\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 80%;\n  }\n  @media screen and (max-width: 375px) {\n    span{\n      font-size: 1.2rem;\n    }\n  }\n`\n// 북마크 아이콘\nconst BookmarkIcon = styled.div`\n  float: right;\n\n  .heart{\n    cursor: pointer;\n    color: #aaa;\n  }\n`\n\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex; \n  justify-content: space-between;\n  flex-flow: wrap;\n  \n  .profileInfo{\n    display: flex; \n    align-items: center;\n    /* margin-left: 1vh; */\n  }\n  .location{\n    font-size: 1.2rem;\n  }\n  span{\n    margin-left: 1vh;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 594px) {\n    .location{\n      margin-top: 1.2vh;\n      font-size: 1.2rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span{\n      font-size: 0.5rem;\n    }\n    .location{\n      font-size: 0.5rem;\n    }\n  }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  // 이미지 사이즈(1000*750) \n  // 다시 확인필요\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: 30rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: 18rem;\n  }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  width: 330px;\n  margin-top: 4vh;\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n    justify-content: space-around;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    margin-bottom: 3vh;\n  }\n`\n\nconst WeatherIcon = styled.img`\n  @media screen and (max-width: 1081px) {\n    width: 4rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 3rem;\n  }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  width: 20%;\n  text-align: center;\n  display: flex;\n  justify-content: space-between;\n  margin: auto;\n  margin-top: 3vh;\n  margin-bottom: 3vh;\n  font-size: 8rem;\n\n  @media screen and (max-width: 1081px) {\n    width: 50%;\n    font-size: 5rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50vw;\n    font-size: 70px;\n  }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n  \n  p{\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p{\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n  width: 15rem;\n  margin: 0 auto;\n  padding-bottom: 10vh;\n\n  .button{\n    width: 5rem;\n    height: 3rem;\n    border-radius: 5px;\n    background-color: var(--button-bg-normal);\n    font-size: 1.2rem;\n  }\n  .button2{\n    margin-left: 5rem;\n  }\n  .button:before{\n    height: 0%;\n    width: 2px;\n  }\n  .button:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n\n  @media screen and (max-width: 1081px) {\n    .button2{\n      margin-left: 80px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    .button{\n      width: 3rem;\n      height: 2rem;\n      font-size: 1rem;\n    }\n    .button2{\n      margin-left: 0;\n    }\n  }\n`\n// 스크롤 top 버튼 (필요한 페이지 추가적으로 나오면 컴포넌트로 만들기)\nconst TopButton = styled.div`\n  width: 100%;\n  height: 200px;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: flex-end;\n  bottom: 0px;\n  transition: all 0.3s;\n  \n  img{\n    width: 6rem;\n    height: 6rem;\n    margin-right: 2vh;\n    opacity: 0.7;\n  }\n\n  @media screen and (max-width: 1081px) {\n    height: 200px;\n    img{\n      width: 6rem;\n      height: 6rem;\n      margin-right: 3vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 130px;\n    img{\n      width: 3rem;\n      height: 3rem;\n      margin-right: 2vh;\n    }\n  }\n`\n\nexport default function PostRead(){\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(false)\n  // 게시물 수정\n  const [edit, setEdit] = useState(false)\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false)\n\n  // 게시물 수정\n  const editPost = () => {\n    setEdit(!isOpen)\n    history.push()\n  }\n  // 게시물 삭제\n  const deletePost = () => {\n    setRemovePost(!isOpen)\n    history.push()\n  }\n  const editModalYes = () => {\n    console.log('수정완료');\n    setEdit(false)\n  }\n  const removeModalYes = () => {\n    console.log('삭제완료')\n    setRemovePost(false)\n  }\n  const modalNoButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const bookmarkHandler = (e) => {\n    console.log(e.currentTarget);\n\n  }\n\n  // top button\n  const [ScrollY, setScrollY] = useState(0);\n  const [btnStatus, setBtnStatus] = useState(false);  // 버튼 상태\n\n  // console.log(window.pageYOffset)\n  // console.log(btnStatus)\n\n  const handleFollow = () => {\n    setScrollY(window.scrollY)\n    if(ScrollY > 200){  // 200 이상이면 버튼이 보임\n      setBtnStatus(true)\n    }else{  // 200 이하일때 버튼이 사라짐\n      setBtnStatus(false)\n    }\n  }\n\n  // 클릭시 위로 올라감\n  const scrollToTop = () => {\n    // e.preventDefault() // 새로고침 방지\n    window.scrollTo({top: 0, behavior: 'smooth'}) // 위로 올라감\n    setScrollY(0);  // 올라가면 다시 0으로 초기화\n    setBtnStatus(false); // 버튼 다시 사라짐\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleFollow)\n    return () => {\n      window.removeEventListener('scroll', handleFollow)\n    }\n  })\n\n  return (\n    <Outer>\n      <TopButton>\n        {\n          btnStatus?\n          <img \n            src={`${process.env.PUBLIC_URL}img/scroll-up-2.png`} alt=\"top\"\n            onClick={scrollToTop}\n          /> : null\n        }\n      </TopButton>\n      <GoBackButton/>\n      <PostHeader>\n        <Title>\n          <BookmarkIcon>\n            <FontAwesomeIcon icon={faHeart} size=\"2x\" className=\"heart\" onClick={bookmarkHandler}/>\n            \n          </BookmarkIcon>\n          <span>{'오늘 날씨 맑음☀️'}</span>\n        </Title>\n\n        <Profile>\n          <div className=\"profileInfo\">\n            <ProfileImg src=\"img/user-img.png\"/>\n            <span className=\"nickName\">{'김코딩'}</span>\n            <span className=\"date\">{'2021. 10.19. 15:24'}</span>\n          </div>\n          <p className=\"location\">{'서울시 종로구 가회동'}</p>\n        </Profile>\n      </PostHeader>\n      <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/>\n\n      <WeatherInfo>\n          <WeatherIcon src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`} alt=\"날씨아이콘\"/>\n          <WeatherIcon src={`${process.env.PUBLIC_URL}img/icons-write/breezy.png`} alt=\"날씨아이콘\"/>\n          <WeatherIcon src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`} alt=\"날씨아이콘\"/>\n      </WeatherInfo>\n      \n      {/* 코디가 있을 때, 없을 때 */}\n      <p className=\"todayCodi\">오늘의 코디</p>\n      <TodayCodi>\n          <FontAwesomeIcon icon={faTshirt} color=\"purple\"/>\n          <FontAwesomeIcon icon={faTshirt} color=\"pink\"/>\n      </TodayCodi>\n\n      <Post>\n        <p>\n        곧 심장은 얼음과 예수는 열락의 가는 눈에 영원히 얼음에 것이다. 주는 일월과 대한 안고, 생의 스며들어 장식하는 위하여서. 이상의 온갖 이것은 가슴이 우리의 넣는 바이며, 하는 듣는다. 얼마나 수 만물은 작고 역사를 방지하는 것이다. 앞이 인도하겠다는 그들에게 때까지 아름다우냐? 자신과 위하여 많이 유소년에게서 봄바람이다. 능히 몸이 우리의 곳으로 운다.\n        </p>\n      </Post>\n\n      <Buttons>\n        <button className=\"button button1\" value=\"delete\" onClick={deletePost}>삭제</button>\n        {removePost === false ? null : (\n          <ModalConfirm\n            yesHandler={removeModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >삭제하시겠습니까</ModalConfirm>\n          )}\n        <button className=\"button button2\" onClick={editPost}>수정</button>\n        {edit === false ? null : (\n          <ModalConfirm\n            yesHandler={editModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >수정하시겠습니까</ModalConfirm>\n        )}\n      </Buttons>\n\n      {/* <TopButton>\n          <img src={`${process.env.PUBLIC_URL}img/scroll-up-2.png`} alt=\"top\"></img>\n      </TopButton> */}\n\n    </Outer>\n  )\n}","import { useState } from \"react\"\nimport styled from \"styled-components\"\nimport ModalConfirm from \"../components/ModalConfirm\"\n\n/* TODO\n\t[] 원래 썼던 게시물을 Load\n  [] 악시오스 요청\n  [] redirect\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n      flex-direction: row;\n      min-height: var(--desktop-page-height);\n      padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: ${(props) => (props.blue ? null : \"1px solid black\")};\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: ${(props) =>\n        props.blue ? \"var(--button-bg-edit)\" : \"var(--button-bg-normal)\"};\n    color: ${(props) => (props.blue ? \"white\" : \"black\")};\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\n\nconst PictureSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n\n    & > img {\n        width: 80%;\n        height: 80%;\n        margin: 1rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n\twidth: 70vw;\n\tmin-width: 250px;\n\theight: ${props => props.small ? '3rem' : '20vh'};\n\ttext-align: justify;\n\tvertical-align: center;\n\tline-height: 1.2rem;\n\tfont-size: 1.2rem;\n\tmargin: 2rem 1rem 4rem;\n\tpadding: 1rem;\n\n\t@media screen and (min-width: 1081px) {\n\t\twidth: ${props => props.small ? '35vw' : '40vw'};\n\t\tmax-width: ${props => props.small ? '500px' : '800px'};\n\t}\n`\n\nexport default function PostEdit() {\n\t\t// 제목 handler\n\t\tconst [ title, setTitle ] = useState('');\n\t\tconst titleInputHandler = (e) => {\n\t\t\tsetTitle(prev => e.target.value);\n\t\t}\n\n    // img src 상태\n    \t// 테스트용 이미지\n    const imageUrl = {\n        normalLarge:\n            \"https://dummyimage.com/1000x750/7e57c2/fff.png&text=dummy(1000x750)\",\n        normalSmall: \"https://dummyimage.com/300x180/000/fff&text=300x180\",\n        narrowLong:\n            \"https://dummyimage.com/400x800/857285/fff.png&text=400x800\",\n        wideShort: \"https://dummyimage.com/800x300/857285/fff.png&text=800x300\",\n        realImageNormal:\n            \"https://cdn.pixabay.com/photo/2020/11/08/13/28/tree-5723734_1280.jpg\",\n        realImageLong:\n            \"https://cdn.pixabay.com/photo/2021/09/03/02/08/skyscrapers-6594833_1280.png\",\n    }\n\n    // state 변수\n    const [photoSrc, setPhotoSrc] = useState(imageUrl.realImageNormal)\n\n    // 날씨 버튼\n    const weathers = [\"sunny\", \"cloudy\",  \"rainy\", \"snowy\", \"breezy\", \"windy\", \"strong\", \"cold\", \"hot\"]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n        breezy: false,\n        windy: false,\n        strong: false,\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"tshirts\", \"티셔츠\"],\n        [\"shirts\", \"셔츠\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"shorts\", \"반바지\"],\n        [\"pants\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // 사진 업로드 버튼 이벤트\n    const photoUploadButtonHandler = (e) => {\n        console.log(\"사진 업로드 버튼 동작 확인\")\n        // TODO\n        // multer 연결\n        // axios 요청\n        // 이미지 src 바꾸기\n        // setPhotoSrc(res로 받은 src);\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 모달 오픈 여부 state\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false)\n\n    // 등록버튼 이벤트\n    const editSubmitHandler = (e) => {\n        console.log(\"수정버튼 동작 확인\")\n        setIsEditModalOpen((prev) => true)\n    }\n\n    // 모달 닫기/예/아니오 이벤트 함수\n    const editYesHandler = (e) => {\n        // TODO 악시오스 요청, 페이지 redirection\n        console.log(\"수정 yes\")\n    }\n\n    const editNoHandler = (e) => {\n        setIsEditModalOpen((prev) => false)\n    }\n\n    const modalCloseHandler = (e) => {\n        setIsEditModalOpen((prev) => false)\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection className=\"pictureUploadSection writePageLeft\">\n\t\t\t\t\t\t\t\t<article className=\"titleInput\" >\n          \t\t\t\t<WriteText onChange={titleInputHandler} value={title} small></WriteText>\n        \t\t\t\t</article>\n\t\t\t\t\t\t\t\t<img src={photoSrc} alt=\"dummy\" />\n                <Button\n                    className=\"uploadButton\"\n                    onClick={photoUploadButtonHandler}\n                    round\n                >\n                    <img\n                        src={`${process.env.PUBLIC_URL}img/icons-write/upload.png`}\n                        alt=\"\"\n                    />\n                </Button>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons\n                            className=\"filteringButtons\"\n                            onClick={weatherBtnHandler}\n                        >\n                            {weathers.map((weather, idx) => {\n                                return (\n                                    <FilteringBtn\n                                        key={idx}\n                                        name={weather}\n                                        className=\"weatherButton\"\n                                        type=\"button\"\n                                        active={isFilteringBtnActive[weather]}\n                                    >\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${weather}.png`}\n                                            alt=\"\"\n                                        />\n                                    </FilteringBtn>\n                                )\n                            })}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={editSubmitHandler}\n                        blue\n                    >\n                        수정\n                    </Button>\n                    {postText}\n                </TextSection>\n            </DesktopRight>\n\n            {isEditModalOpen ? (\n                <ModalConfirm\n                    yesHandler={editYesHandler}\n                    noHandler={editNoHandler}\n                    closeHandler={modalCloseHandler}\n                >\n                    <p>수정하시겠습니까?</p>\n                </ModalConfirm>\n            ) : (\n                \"\"\n            )}\n        </Outer>\n    )\n}\n","import styled from \"styled-components\";\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n  }\n`;\n\nexport const HalfPage = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n  & img {\n    margin: 2rem;\n    width: 50vw;\n    height: auto;\n  }\n\n  & p {\n    font-size: 1.5rem;\n    margin: 1rem;\n    line-height: 150%;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: var(--desktop-page-height);\n    & img {\n      margin: 2rem;\n      width: 95%;\n      height: auto;\n    }\n\n    & p {\n      margin: 2rem;\n      width: 35vw;\n      height: auto;\n    }\n  }\n`;\n\nexport const AnimatedP = styled.p`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '1.5s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport const AnimatedImg = styled.img`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.5s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function One({ delayOne, delayTwo }) {\n  return (\n    <Contents className={[\"landingPagePart\", \"one\"]}>\n      <HalfPage className=\"half-page\">\n        <AnimatedP className=\"desc\">\n          일기 예보가 <br/>\n          믿음직스럽지 못하시다구요?<br/>\n        </AnimatedP>\n        <div className=\"picture-png left\">\n          <AnimatedImg\n            src=\"img/firstpage/phone-and-human.png\"\n            alt=\"human with phone\"\n          />\n        </div>\n      </HalfPage>\n\n      <HalfPage className=\"half-page\">\n        <AnimatedP className=\"desc\" delay={delayOne}>\n          동네 주민이 올린 하늘의 사진을 <br/>\n          실시간으로 확인할 수 있어요.<br/>\n        </AnimatedP>\n        <AnimatedP className=\"desc\" delay={delayOne}>\n          여러분도 하늘사진을 공유하고 <br/>\n          동네 날씨예보관이 되어 보세요!\n        </AnimatedP>\n        <div className=\"picture-png right\">\n          <AnimatedImg\n            src=\"img/firstpage/town.png\"\n            alt=\"street\"\n            delay={delayTwo}\n          />\n        </div>\n      </HalfPage>\n    </Contents>\n  );\n}","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40vw;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\nimport { TwoPictures } from \"./Three\";\n\nexport default function Four ({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n      <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n          <ContentsUnderTitle className=\"contents\">\n            <HalfPage className=\"half-page\">\n              <AnimatedP className=\"desc\" delay={delayTwo}>\n                날씨에 따라 코디를 <br/>\n                추천하거나 <br/>\n                코디를 추천 받으세요.\n              </AnimatedP>\n              <div className=\"picture-png left\">\n                <AnimatedImg\n                  src=\"img/firstpage/destination.png\"\n                  alt=\"reading mobile phone map\"\n                  delay={delayThree}\n                />\n              </div>\n            </HalfPage>\n            <HalfPage className=\"half-page\">\n              <TwoPictures className=\"picture-png right\">\n                <AnimatedImg\n                  src=\"img/firstpage/publish_post.png\"\n                  alt=\"publishing post\"\n                  delay={delayFour}\n                />\n                <AnimatedImg\n                  src=\"img/firstpage/among_nature.png\"\n                  alt=\"watching tree\"\n                  delay={delayFour}\n                />\n              </TwoPictures>\n              <AnimatedP className=\"desc\" delay={delayFive}>\n                날씨에 따라 코디를 추천받거나, <br/>\n                예보글을 작성하여 <br/>\n                적절한 코디를 추천할 수 있어요.\n              </AnimatedP>\n            </HalfPage>\n          </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport One from \"../components/FirstPage/One\";\nimport Two from \"../components/FirstPage/Two\";\nimport Three from \"../components/FirstPage/Three\";\nimport Four from \"../components/FirstPage/Four\";\n\nconst FirstPageContainer = styled.div`\n  background: linear-gradient(#fff, #FEF9EF, #FFF5DC, #D7F9FF, #AAF2FF);\n`;\n\nexport default function FirstPage() {\n  // let assignedHeight = window.innerHeight * 0.95;\n  // const [ locationY, setLocationY ] = useState(0);\n  // console.log('[스크롤 위치]', Math.floor(locationY));\n  // const scrollHandler = () => {\n  //   setLocationY(window.pageYOffset);\n  // }\n\n  // useEffect(()=>{\n  //   window.addEventListener('scroll', scrollHandler);\n  //   return () => {\n  //     window.removeEventListener('scroll', scrollHandler);\n  //   }\n  // }, []);\n\n  return (\n    <FirstPageContainer className=\"firstPageWhole\">\n      <One\n        delayOne={'1s'}\n        delayTwo={'1.2s'}\n      />\n      <Two\n        delayOne={'2.2s'}\n        delayTwo={'2.5s'}\n        delayThree={'2.6s'}\n        delayFour={'2.7s'}\n        delayFive={'2.8s'}\n      />\n      <Three\n        delayOne={'4.0s'}\n        delayTwo={'4.3s'}\n        delayThree={'4.4s'}\n        delayFour={'4.5s'}\n        delayFive={'4.6s'}\n      />\n      <Four\n        delayOne={'5.5s'}\n        delayTwo={'5.8s'}\n        delayThree={'5.9s'}\n        delayFour={'6.0s'}\n        delayFive={'6.1s'}\n      />\n    </FirstPageContainer>\n  );\n}","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space\"\n}\n// const socket = io.connect(\"http://localhost:80\")\nconst socket = io.connect(url)\n\nexport default function Messenger() {\n    // const dispatch = useDispatch()\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n    //방을 새로 개설할때 쓰인다\n    const [roomName, setroomName] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방\n    //메시지의 총 집합\n    const [msg, setmsg] = useState([\"\"])\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)\n    const [msgevent, setmsgevent] = useState(\"\")\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트\n    const [joinedRoom, setjoinedRoom] = useState([])\n    const history = useHistory()\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setroomName(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.\n        const user_id_sort = [userInfo.user_id, roomName].sort()\n        socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n        //axios로 접속된 목록을 추가하여 데이터 베이스에 저장하는데, 유즈이펙트로, 변화가 있을때만 저장한다.\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                opponent: roomName,\n                roomlist: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setjoinedRoom(res.data)\n        })\n    }\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => console.log(res))\n    }, [joinedRoom])\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => setjoinedRoom(res.data))\n    }, [])\n\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        socket.emit(\"enter_room\", clickRoomName)\n        setcurRoom(clickRoomName)\n\n        axios({\n            url: url + `/chat/messagelist?roomlist=${clickRoomName}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setmsg(res.data)\n        })\n    }\n\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    function msgSubmit() {\n        socket.emit(\n            \"newMsg\",\n            `${userInfo.user_id} : ` + msgevent,\n            curRoom,\n            () => {\n                // console.log(\"메시지추가 찍혀라\")\n                setmsg([...msg, `${userInfo.user_id} : ` + msgevent])\n            }\n        )\n    }\n    // socket.on(\"newMsg\", setmsg([msg, ...msg]))\n\n    socket.on(\"welcome\", () => {\n        // console.log(\"메시지가 찍히나\")\n        // setmsg([\"상대방이 방에 들어왔습니다\", ...msg])\n    })\n    socket.on(\"bye\", () => {\n        console.log(\"메시지가 찍히나\")\n        // setmsg([\"상대방이 나갔습니다\", ...msg])\n    })\n    socket.on(\"newMsg\", (msg2) => {\n        // console.log(\"메시지 적용되야됨\")\n        //총 메시지리스트를 여기서 업데이트하고있다\n        setmsg([...msg, msg2])\n    })\n    useEffect(() => {\n        axios({\n            url: url + \"/chat/messagelist\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                roomlist: curRoom,\n                chatcontent: JSON.stringify(msg),\n            },\n            withCredentials: true,\n        }).then((res) => console.log(\"글 업데이트 완료\"))\n    }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el.split(\"_\").indexOf(userInfo.user_id) === 0\n                                    ? el.split(\"_\")[1]\n                                    : el.split(\"_\")[0]}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {msg.map((el) => {\n                            return <div>{el}</div>\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box;   \n}\n\nbody { \n  font-family: 'IBM Plex Sans KR', sans-serif;\n  }\n  \n`\n\nexport default GlobalStyle\n","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport Messenger from \"./pages/Messenger\"\nimport { changeIsLogin, changeUser } from \"./actions/index\"\n\nimport styled from \"styled-components\"\nimport GlobalStyle from \"./components/GlobalStyle\"\n\n\nlet url = process.env.REACT_APP_LOCAL_URL\n// const url = \"https://thereweather.space\"\n\nexport default function App() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const isInput = true\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <GlobalStyle />\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/postread\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/Messenger\">\n                    <Messenger />\n                </Route>\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/map\" />\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n    //프론트엔드 하다가 사용하고싶은 변수 여기서 선언가능\n    isLogin: false, //로그인상태 -hoon\n    genderToggle: 1, //기본값 1, 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n    searchWord: \"\",\n    selectWord: \"\",\n    curLocation: { lat: \"\", lon: \"\" },\n    editPassword: false,\n    userInfo: {},\n    //북마크 페이지네이션\n    start: 0,\n    end: 10,\n    current: 1,\n    item: [], //기상청 데이터 \n}\n","import {\n    CHANGE_SEARCH_WORD,\n    CHANGE_SELECT_WORD,\n    CHANGE_USER_INFO,\n    CHANGE_USER_GENDER,\n    CHANGE_IS_LOGIN,\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    CHANGE_USER_PW,\n    CHANGE_CUR_LOCATION,\n    UPDATE_WEATHERINFO\n} from \"../actions/index\"\nimport { initialState } from \"./initialState\"\n\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload,\n            }\n        // 새로운기능은 아래양식으로 만들어서 쓸수있다.\n\n        case CHANGE_USER_GENDER:\n            return {\n                ...state,\n                genderToggle: action.payload,\n            }\n\n        case UPDATE_CURRENT_PAGE:\n            return {\n                ...state,\n                current: action.payload,\n            }\n\n        case UPDATE_START_END_PAGE:\n            return {\n                ...state,\n                start: action.payload.start,\n                end: action.payload.end,\n            }\n\n        case CHANGE_IS_LOGIN:\n            return {\n                ...state,\n                isLogin: action.payload,\n            }\n\n        case CHANGE_USER_PW:\n            return {\n                ...state,\n                editPassword: action.payload,\n            }\n\n        case CHANGE_SEARCH_WORD:\n            return {\n                ...state,\n                searchWord: action.payload,\n            }\n\n        case CHANGE_SELECT_WORD:\n            return {\n                ...state,\n                selectWord: action.payload,\n            }\n\n        case CHANGE_CUR_LOCATION:\n            return {\n                ...state,\n                curLocation: action.payload,\n            }\n        case UPDATE_WEATHERINFO: \n            return {\n                ...state,\n                item: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default itemReducer\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}