{"version":3,"sources":["actions/index.js","components/LoadingSpinner.js","components/MapBox.js","pages/Map.js","components/TopButton-home.js","components/Footer.js","pages/Home.js","components/BookMarks.js","components/Pagination.js","pages/BookMark.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","LoginIcon/kakaoIcon.png","LoginIcon/googleIcon.png","pages/Login.js","pages/PasswordEdit.js","components/OneChoiceModal.js","pages/SignUp.js","pages/MyPost.js","pages/Write.js","components/TopButton.js","components/PostRead-comment.js","pages/PostRead.js","pages/ReadBookMarkPost.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/Loading.js","pages/FirstPage.js","pages/Messenger.js","pages/Messenger2.js","pages/EditUserInfo.js","pages/ChatRoom.js","components/FindAccountModal.js","pages/FindAccount.js","components/FindPwModal.js","pages/FindPassword.js","components/GlobalStyle.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","UPDATE_WEATHERINFO","UPDATE_USER_POST","UPDATE_POST_ID","CHANGE_WHEATER_FILTER","CHANGE_MAP_PAGE","CHANGE_CURROOM","CHANGE_NEWMSGSECTION","CURPAGE","MAPSET","changeUser","userinfo","type","payload","changeIsLogin","trueOrFalse","userPosts","postinfo","updatePostId","pageId","changeWeatherFilter","weatherFilter","changeMapPage","mapPage","curPageAction","curPage","Spinner","styled","img","props","size","duration","LoadingSpinner","src","ImgContainer","div","PostListModal","SlideModal","bottom","GraphModal","GraphTitle","GraphTitleDiv","GraphTitleDiv2","BarGraphFlex","BarGraphchild","Location","console","log","useSelector","state","itemReducer","searchWord","useState","isLoading","setisLoading","history","useHistory","dispatch","useDispatch","kakao","window","sunny","cloudy","rainy","snowy","weatherCount","setWeatherCount","weatherApi","setweatherApi","bottom_id","createdAt","id","post_content","post_photo","post_title","temp","top_id","updatedAt","user_id","weather","wind","xLocation","yLocation","postList","setPostList","url","process","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","LEFT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","changeSearchword","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","timer","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","markers","positions","i","n","idx","outer_id","infowindow","addMarkers","clearTimeout","setTimeout","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","toString","axios","La","Ma","method","headers","withCredentials","then","res","length","getCenter","fcstValue","Box","Box2","EmoticonBox","PostTitle","PostContent","PostBox","PostImg","IconImg","LoadingBoxDiv","Button","button","bgGrey","isText","labels","datasets","backgroundColor","hoverBackgroundColor","data2","label","borderColor","borderWidth","hoverBorderColor","isOnOff","setisOnOff","postBoxHandler","e","elem","target","classList","contains","parentNode","push","pathname","postId","onClick","icon","faChevronDown","faChevronUp","className","post","Container","TopButton","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","alt","scrollTo","top","behavior","HeaderOuter","TitleAndLogo","isMobileLogo","Center","MenuButtons","Button3","DaumPostcode","input","Buttons3","MobileMenuBar","Header","isInput","isLogin","setweatherFilter","token","JSON","parse","localStorage","getItem","Authorization","clear","HomeContainer","FooterDiv","TodaysDate","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","Codi","RightContainer","RightNav1","Home","curLocation","item","weatherData","setWeatherData","a","curAddress","setcurAddress","currentPosts","setcurrentPosts","right","left","curtPost","address","todaysDate","settodaysDate","currentDate","date","Date","getFullYear","getMonth","getDate","currentTemp","setcurrentTemp","currentWind","setcurrentWind","currentWeather","setcurrentWeather","currentOuter","setcurrentOuter","currentTop","setcurrentTop","currentBottom","setcurrentBottom","tempArr","windArr","weatherArr","outerArr","topArr","bottomArr","getCount","arr","reduce","pv","cv","tempObj","windObj","weatherObj","outerObj","topObj","bottomObj","newTempArr","Object","values","newWindArr","newWeatherArr","newOuterArr","newTopArr","newBottomArr","tempMaxNum","Math","max","windMaxNum","weatherMaxNum","outerMaxNum","topMaxNum","bottomMaxNum","matchKey","obj","maxNum","key","maxTemp","maxWind","maxWeather","maxOuter","maxTop","maxBottom","photoClickHandler","undefined","info","baseTime","substring","nanoid","el","Bookmark","like","bookmarkHandler","color","faBookmark","PaginationContainer","attrs","PageNumbersList","ul","ArrowButton","span","PageNumberItem","li","Pagination","unit","dataLength","itemsPerPage","numberButtonClickHandler","numberOfPages","ceil","numberArr","Array","fill","startIdx","setStartIdx","lastIdx","setLastIdx","cutArrInit","cutArr","setCutArr","tempIdxEnd","slice","prev","number","Outer","BookMarkPhoto","BookMarkList","Img1","Div1","BookMark","userInfo","readPostId","postInfo","bookmarkList","setBookmarkList","Number","post_id","post_info","formatDate","dateString","dateOnly","toLocaleDateString","postClickHandler","setCurrentPage","Buttons","Button1","Button2","Button4","Button5","MenuBar","url1","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faChevronLeft","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","isModalOpen","setIsModalOpen","user_Photo","gender","location","delete","name","value","ToggleContainer","Desc","Toggle","isOn","setisOn","Kakao","LoginOuter","LoginStyledArticle","article","FindBtn","LoginInputAndTitle","LoginInputText","LoginValidationListBox","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","Buttons2","google","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","href","accessToken","split","authorization","accept","email","verified_email","res2","alert","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","password","nickName","user_photo","guestuserInfo","placeholder","onChange","onComplete","complevent","roadAddress","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","prevInput","prevText","assign","googleIcon","Auth","login","scope","success","response","API","request","kakao_account","profile","access_token","nickname","profile_image_url","fail","kakaoIcon","StyledLi","valid","edit","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","test","newPwdValid","True","False","BackgroundView","FlexArea","FlexArea2","FlexArea3","DivTag1","BtnTag1","OneChoiceModal","boolean","yesMessage","alertFunc","faExclamationCircle","SignUp","emailInput","emailVaildCode","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","codeOn","setCodeOn","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","indexOf","alertState","setalertState","alertState2","setalertState2","temporary_id","code","PhotoArea","FSArea","CurPage","MyPost","start","end","current","listLength","setListLength","dividNum","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Write","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","isFilteringBtnActive","setIsFilteringBtnActive","breezy","windy","strong","isFilteringBtnActive2","setIsFilteringBtnActive2","cold","hot","isFilteringBtnActive3","setIsFilteringBtnActive3","selectValueOuter","setSelectValueOuter","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","weatherFunc","select","weatherFunc2","weatherFunc3","LeftDiv","RightDiv","DeleteBtn","LikeBtn","Comment","commentDelete","click","setClick","dateForm","getHours","getMinutes","comment_user_id","comment_id","comment_content","faHeart","PostHeader","Title","IconDiv","BookmarkIcon","Profile","SelectIcon","WeatherInfo","Icon","TodayCodi","Post","CommentSection","PostComment","CommentList","PostRead","postIds","postData","setPostData","noIdWarning","setNoIdWarning","selectList","setSelectList","currentPostId","setBookmarked","bookmarked","params","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","getCommentList","commentMsg","setCommentMsg","commentList","setCommentList","commentId","replace","dateObject","hourAndMin","toLocaleTimeString","hour12","Link","sendDefault","objectType","description","imageUrl","link","mobileWebUrl","androidExecutionParams","buttons","Secret","random","min","parseFloat","toFixed","getRandomIntInclusive","floor","substr","sFunc","Contents","HalfPage","AnimatedP","p","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","LoadingContainer","hide","Loading","FirstPageContainer","FirstPage","ProfileName","UserPhotoDiv","UserPhotoImg","RoomChatDiv","RoomList","FriendInput","FriendInputAndBtn","FriendListDiv","io","connect","Messenger","prevmsg","setprevmsg","newMsgSection","setNewMsgSection","receiver_id","setreceiver_id","joinedRoom","setjoinedRoom","roomInOut","recievemessage","roomListClick","clickRoomName","room","joinRoom","Set","roomNamefunc","required","user_id_sort","sort","roomName","faPlusSquare","ChatList","socket","Messenger2","setroomName","curRoom","setcurRoom","msg","setmsg","msgevent","setmsgevent","setRoomInOut","on","msg2","roomlist","chatcontent","msgfunc","emit","faPaperPlane","opponent","MeDiv","YouDiv","ChatRoom","msgobj","newmsg","Div2","Div3","FindAccountModal","closeBtn","loginBtn","userId","userNickName","Form","FindAccount","findNickName","authEmail","authCode","inputFindInfo","setInputFindInfo","isOpen","setIsOpen","userData","setUserData","ChangeHanlder","Div4","ValidationMsg","FindPwModal","userEmail","newPw","againPw","inputNewPw","setInputNewPw","again","ChangeHanlderPw","newPwMsg","FindPassword","findId","GlobalStyle","createGlobalStyle","App","exact","path","to","initialState","selectWord","editPassword","homePost","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f7138c27.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\"\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\"\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\"\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\"\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\"\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\"\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\"\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\"\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\"\n\nexport const UPDATE_WEATHERINFO = \"UPDATE_WEATHERINFO\"\nexport const UPDATE_USER_POST = \"UPDATE_USER_POST\"\nexport const UPDATE_POST_ID = \"UPDATE_POST_ID\"\nexport const UPDATE_HOME_POST = \"UPDATE_HOME_POST\"\n\nexport const CHANGE_WHEATER_FILTER = \"CHANGE_WHEATER_FILTER\"\nexport const CHANGE_MAP_PAGE = \"CHANGE_MAP_PAGE\"\nexport const CHANGE_CURROOM = \"CHANGE_CURROOM\"\nexport const CHANGE_NEWMSGSECTION = \"CHANGE_NEWMSGSECTION\"\nexport const CURPAGE = \"CURPAGE\"\nexport const MAPSET = \"MAPSET\"\n\n// actions creator functions\n\nexport const mapSet = (map) => {\n    return {\n        type: MAPSET,\n        payload: {\n            map,\n        },\n    }\n}\nexport const changeNewMsgSection = (newmsg) => {\n    return {\n        type: CHANGE_NEWMSGSECTION,\n        payload: {\n            newmsg,\n        },\n    }\n}\nexport const changeCurRoom = (room) => {\n    return {\n        type: CHANGE_CURROOM,\n        payload: {\n            room,\n        },\n    }\n}\nexport const changeUser = (userinfo) => {\n    return {\n        type: CHANGE_USER_INFO,\n        payload: {\n            ...userinfo,\n        },\n    }\n}\nexport const updateCurrentPage = (current) => {\n    return {\n        type: UPDATE_CURRENT_PAGE,\n        payload: {\n            current,\n        },\n    }\n}\nexport const updateStartEndPage = (start, end) => {\n    return {\n        type: UPDATE_START_END_PAGE,\n        payload: {\n            start,\n            end,\n        },\n    }\n}\n\nexport const changeGender = (usergender) => {\n    return {\n        type: CHANGE_USER_GENDER,\n        payload: usergender,\n    }\n}\nexport const changeSearchword = (searchWord) => {\n    return {\n        type: CHANGE_SEARCH_WORD,\n        payload: searchWord,\n    }\n}\nexport const changeSelectword = (selectWord) => {\n    return {\n        type: CHANGE_SELECT_WORD,\n        payload: selectWord,\n    }\n}\nexport const changeIsLogin = (trueOrFalse) => {\n    return {\n        type: CHANGE_IS_LOGIN,\n        payload: trueOrFalse,\n    }\n}\n\nexport const changeUserPw = (pw) => {\n    return {\n        type: CHANGE_USER_PW,\n        payload: pw,\n    }\n}\n\nexport const changeCurLocation = (lat, lon) => {\n    return {\n        type: CHANGE_CUR_LOCATION,\n        payload: { lat: lat, lon: lon },\n    }\n}\n\nexport const updateWeatherInfo = (data) => {\n    return {\n        type: UPDATE_WEATHERINFO,\n        payload: {\n            data: data,\n        },\n    }\n}\n\nexport const userPosts = (postinfo) => {\n    return {\n        type: UPDATE_USER_POST,\n        payload: {\n            postinfo: postinfo,\n        },\n    }\n}\n\nexport const updatePostId = (pageId) => {\n    return {\n        type: UPDATE_POST_ID,\n        payload: pageId,\n    }\n}\n\nexport const homePost = (homePost) => {\n    return {\n        type: UPDATE_HOME_POST,\n        payload: {\n            homePost: homePost,\n        },\n    }\n}\nexport const changeWeatherFilter = (weatherFilter) => {\n    return {\n        type: CHANGE_WHEATER_FILTER,\n        payload: {\n            weatherFilter: weatherFilter,\n        },\n    }\n}\n\nexport const changeMapPage = (mapPage) => {\n    return {\n        type: CHANGE_MAP_PAGE,\n        payload: {\n            mapPage: mapPage,\n        },\n    }\n}\n\nexport const curPageAction = (curPage) => {\n    return {\n        type: CURPAGE,\n        payload: {\n            curPage: curPage,\n        },\n    }\n}\n","import styled from \"styled-components\";\n\nconst Spinner = styled.img`\n  width: ${(props) => props.size || \"50px\"};\n  height: ${(props) => props.size || \"50px\"};\n  animation: add-spin linear infinite reverse;\n  animation-duration: ${(props) => props.duration || \"2s\"};\n  opacity: 0.7;\n\n  position: relative;\n\n  left: 42.5%;\n\n  @media screen and (min-width: 1081px) {\n    width: ${(props) => props.size || \"100px\"};\n    height: ${(props) => props.size || \"100px\"};\n\n    position: relative;\n    left: 42.5%;\n  }\n`;\n\nexport default function LoadingSpinner({ size, duration }) {\n  return <Spinner src=\"img/spinner.png\" size={size} duration={duration} />;\n}\n","import styled from \"styled-components\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n    changeSearchword,\n    changeCurLocation,\n    updatePostId,\n} from \"../actions/index\"\nimport $ from \"jquery\"\nimport axios from \"axios\"\nimport { Doughnut, Bar } from \"react-chartjs-2\"\nimport LoadingSpinner from \"./LoadingSpinner\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst ImgContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\nconst PostListModal = styled.div`\n    // border: 1px solid black;\n    // position: relative;\n    background-color: white;\n    z-index: 999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    // bottom: 115px;\n    bottom: 110px;\n    width: 100%;\n    height: 50%;\n    overflow: auto;\n    padding: 0.5rem;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 999;\n        position: absolute;\n        right: 0;\n        bottom: 30px;\n        width: 35.3%;\n        height: 75%;\n        overflow: auto;\n    }\n`\nconst SlideModal = styled.div`\n    // border: 1px solid black;\n    background-color: white;\n    z-index: 9999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    // top: 0px;\n    bottom: 70px;\n    // bottom: 130%;\n    // bottom: ${(props) => props.bottom || \"52.9%\"};\n    width: 100%;\n    height: 40px;\n    overflow: auto;\n    display: flex;\n    justify-content: center;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 9999;\n        position: absolute;\n        // position: fixed;\n        // right: 1%;\n\n        bottom: 0px;\n        // bottom: ${(props) => props.bottom || \"52.9%\"};\n        width: 35.3%;\n        height: 8%;\n        overflow: auto;\n        display: flex;\n        justify-content: center;\n    }\n`\nconst GraphModal = styled.div`\n    // border: 1px solid black;\n    width: 50%;\n    display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\n\nconst GraphTitle = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    font-weight: bold;\n\n    @media screen and (min-width: 1081px) {\n    }\n`\nconst GraphTitleDiv = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    // margin-top: 0.5rem;\n    // margin-bottom: 0.5rem;\n    width: 100%;\n    text-align: center;\n    // font-size: 0.8rem;\n    background-color: pink;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst GraphTitleDiv2 = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    width: 100%;\n    text-align: center;\n    font-size: 0.8rem;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst BarGraphFlex = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\nconst BarGraphchild = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\n\nexport default function Location({ bottom }) {\n    console.log(\"mapbox임\")\n    const { searchWord, weatherFilter } = useSelector(\n        (state) => state.itemReducer\n    )\n\n    const [isLoading, setisLoading] = useState(false)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const { kakao } = window\n    const [weatherCount, setWeatherCount] = useState({\n        sunny: 0,\n        cloudy: 0,\n        rainy: 0,\n        snowy: 0,\n    }) //그래프 통계용\n    const [weatherApi, setweatherApi] = useState(0)\n    console.log(kakao)\n    const [postList, setPostList] = useState([\n        {\n            bottom_id: \"\",\n            createdAt: \"Z\",\n            id: null,\n            post_content: \"\",\n            post_photo: \"\",\n            post_title: \"예보가 없는 지역 입니다.\",\n            temp: \"\",\n            top_id: \"\",\n            updatedAt: \"\",\n            user_id: \"\",\n            weather: \"\",\n            wind: \"\",\n            xLocation: null,\n            yLocation: null,\n        },\n    ])\n    console.log(weatherFilter)\n    let url =\n        process.env.REACT_APP_LOCAL_URL || \"https://thereweather.space/api\"\n\n    //---------------\n    useEffect(() => {\n        var container = document.getElementById(\"map\")\n        var options = {\n            center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n            level: 3,\n        }\n        var map = new kakao.maps.Map(container, options) //지도를 생성\n        var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n        map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT) //줌컨트롤 위치 조정\n        // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n\n                var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                    message =\n                        '<div style=\"font-align:center;\"> 현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n                // 마커와 인포윈도우를 표시합니다\n                displayMarker(locPosition, message)\n                console.log(locPosition)\n\n                console.log(lat) //위도\n                console.log(lon) //경도\n                dispatch(changeCurLocation(lat, lon))\n            })\n        } else {\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n            var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n                message = \"geolocation을 사용할수 없어요..\"\n\n            displayMarker(locPosition, message)\n        }\n        // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n\n        function displayMarker(locPosition, message) {\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: locPosition,\n            })\n\n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable,\n            })\n\n            // 인포윈도우를 마커위에 표시합니다\n            infowindow.open(map, marker)\n\n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n        }\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder()\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(searchWord, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                // var marker = new kakao.maps.Marker({\n                //     map: map,\n                //     position: coords,\n                // })\n                // console.log(arguments)\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // var infowindow = new kakao.maps.InfoWindow({\n                //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n                // })\n                // infowindow.open(map, marker)\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                dispatch(changeSearchword(searchWord))\n                map.setCenter(coords)\n            }\n        })\n\n        //클릭이벤트 함수\n        kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n            // 클릭한 위도, 경도 정보를 가져옵니다\n            var latlng = mouseEvent.latLng\n            // 마커 위치를 클릭한 위치로 옮깁니다\n            // marker.setPosition(latlng)\n            //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n            var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n            message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n            console.log(message)\n        })\n        //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n            minLevel: 9, // 클러스터 할 최소 지도 레벨\n        })\n\n        // 데이터를 가져오기 위해 jQuery를 사용합니다\n        // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n        $.get(\n            url + `/post/location?weather=${weatherFilter.weatherFilter}`,\n            function (data) {\n                // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n                // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n                // console.log(data)\n                // console.log($(data.positions))\n                // console.log($(data.positions[0]))\n\n                var markers = $(data.positions).map(function (i, position) {\n                    return new kakao.maps.Marker({\n                        position: new kakao.maps.LatLng(\n                            position.xLocation,\n                            position.yLocation\n                        ),\n                    })\n                })\n\n                console.log(markers)\n                console.log($(data.positions)[0])\n                $(data.positions).map((n, idx) => {\n                    console.log($(data.positions))\n                    // $(data.positions).map((el) => {\n                    //     console.log(el)\n                    //     if ($(data.positions)[el].weather === \"sunny\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             sunny: weatherCount.sunny + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"cloudy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             cloudy: weatherCount.cloudy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"rainy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             rainy: weatherCount.rainy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"snowy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             snowy: weatherCount.snowy + 1,\n                    //         })\n                    //     }\n                    // })\n\n                    var iwContent = `\n                <container style=\"border:3px solid pink; padding:5px; height:20rem; width:15rem; display:flex; flex-direction: row; overflow: auto;\">\n                    <box style=\"\">\n                        <h3>${$(data.positions)[n].post_title}</h3>\n                            <box style=\"display:flex; flex-direction: row;\">\n                            \n                        ${\n                            $(data.positions)[n].weather === \"sunny\"\n                                ? \"<img src='img/icons-write/sunny.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"cloudy\"\n                                ? \"<img src='img/icons-write/cloudy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"rainy\"\n                                ? \"<img src='img/icons-write/rainy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"snowy\"\n                                ? \"<img src='img/icons-write/snowy.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].wind === \"breezy\"\n                                ? \"<img src='img/icons-write/breezy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"windy\"\n                                ? \"<img src='img/icons-write/windy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"strong\"\n                                ? \"<img src='img/icons-write/strong.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].temp === \"cold\"\n                                ? \"<img src='img/icons-write/cold.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].temp === \"hot\"\n                                ? \"<img src='img/icons-write/hot.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].outer_id === \"가디건\"\n                                ? \"<img src='img/codi/가디건.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"자켓\"\n                                ? \"<img src='img/codi/자켓.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"얇은코트\"\n                                ? \"<img src='img/codi/얇은코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"두꺼운코트\"\n                                ? \"<img src='img/codi/두꺼운코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"패딩\"\n                                ? \"<img src='img/codi/패딩.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"default\"\n                                ? \"<img src='img/codi/default.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].top_id === \"반팔\"\n                                ? \"<img src='img/codi/반팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"셔츠\"\n                                ? \"<img src='img/codi/셔츠.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"민소매\"\n                                ? \"<img src='img/codi/민소매.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"긴팔\"\n                                ? \"<img src='img/codi/긴팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"니트\"\n                                ? \"<img src='img/codi/니트.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].bottom_id === \"반바지\"\n                                ? \"<img src='img/codi/반바지.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].bottom_id === \"긴바지\"\n                                ? \"<img src='img/codi/긴바지.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        </box>\n                        <img src=${\n                            $(data.positions)[n].post_photo\n                        } style=\"padding:5px; max-height:100%; max-width:100%;\"></img>\n                        <div>${$(data.positions)[n].post_content}</div>\n                    </box>\n                </container>\n\n\n                             `, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                        iwRemoveable = true // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n                    // 인포윈도우를 생성합니다\n                    var infowindow = new kakao.maps.InfoWindow({\n                        content: iwContent,\n                        removable: iwRemoveable,\n                    })\n                    kakao.maps.event.addListener(\n                        markers[n],\n                        \"click\",\n                        function () {\n                            // 마커 위에 인포윈도우를 표시합니다\n                            infowindow.open(map, markers[n])\n                        }\n                    )\n                })\n\n                clusterer.addMarkers(markers)\n            }\n        )\n\n        let timer\n        // 지도가 이동, 확대, 축소로 인해 지도영역이 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n        kakao.maps.event.addListener(map, \"idle\", function () {\n            setisLoading(false)\n            if (timer) {\n                clearTimeout(timer)\n            }\n\n            timer = setTimeout(function () {\n                console.log(\"지도 위치가 변경 될 때마다 API요청\")\n                // setWeatherCount({\n                //     sunny: 0,\n                //     cloudy: 0,\n                //     rainy: 0,\n                //     snowy: 0,\n                // })\n                // 지도 영역정보를 얻어옵니다\n                var bounds = map.getBounds()\n\n                // 영역정보의 남서쪽 정보를 얻어옵니다\n                var swLatlng = bounds.getSouthWest()\n\n                // 영역정보의 북동쪽 정보를 얻어옵니다\n                var neLatlng = bounds.getNorthEast()\n\n                var message =\n                    \"영역좌표는 남서쪽 위도, 경도는  \" +\n                    swLatlng.toString() +\n                    \"이고\"\n                message +=\n                    \"북동쪽 위도, 경도는  \" + neLatlng.toString() + \"입니다 \"\n\n                // setTimeout(() => {\n                console.log(message)\n                console.log(swLatlng)\n                console.log(neLatlng)\n                axios({\n                    url:\n                        url +\n                        `/post/list?top=${neLatlng.La}&bottom=${swLatlng.La}&left=${swLatlng.Ma}&right=${neLatlng.Ma}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setPostList(res.data)\n                    console.log(postList)\n                    let sunny = 0\n                    let cloudy = 0\n                    let rainy = 0\n                    let snowy = 0\n                    for (let n = 0; n < res.data.length; n++) {\n                        if (res.data[n].weather === \"sunny\") {\n                            sunny = sunny + 1\n                        } else if (res.data[n].weather === \"cloudy\") {\n                            cloudy++\n                        } else if (res.data[n].weather === \"rainy\") {\n                            rainy++\n                        } else if (res.data[n].weather === \"snowy\") {\n                            snowy++\n                        }\n                    }\n                    setWeatherCount({\n                        sunny: sunny,\n                        cloudy: cloudy,\n                        rainy: rainy,\n                        snowy: snowy,\n                    })\n                })\n\n                //지도중심좌표 기준으로 기상청 데이터를 받아올예정 -hoon\n                var latlng = map.getCenter()\n\n                axios({\n                    url: url + `/map2?lat=${latlng.Ma}&lon=${latlng.La}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setweatherApi(res.data.fcstValue)\n                })\n            }, 1000)\n            setisLoading(true)\n        })\n    }, [\n        kakao.maps.LatLng,\n        kakao.maps.Marker,\n        kakao.maps.event,\n        kakao.maps.Map,\n        searchWord,\n        weatherFilter,\n    ])\n\n    const Box = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n        // height: 50%;\n        // border: 1px solid black;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const Box2 = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        // width: 10000px;\n\n        width: 50%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const EmoticonBox = styled.div`\n        display: flex;\n        flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostTitle = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        // border: 1px solid black;\n        text-align: center;\n        background-color: pink;\n        border-radius: 10%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostContent = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostBox = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n\n        padding: 0.5rem;\n\n        &:hover {\n            background-color: #f5f5f5;\n        }\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostImg = styled.img`\n        width: 100%;\n        border-radius: 20%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const IconImg = styled.img`\n        width: 20%;\n        cursor: pointer;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const LoadingBoxDiv = styled.div`\n        position: relative;\n        transform: translate(-0%, -50%);\n        top: 50%;\n\n        @media screen and (min-width: 1081px) {\n            position: relative;\n            transform: translate(-0%, -50%);\n            top: 50%;\n        }\n    `\n    const Button = styled.button`\n        background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n        color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n        margin: 0.1rem;\n        // border: 1px solid black;\n    `\n    console.log(weatherCount)\n    const data = {\n        labels: [\"맑음\", \"구름\", \"비\", \"눈\"],\n        datasets: [\n            {\n                data: [\n                    weatherCount.sunny,\n                    weatherCount.cloudy,\n                    weatherCount.rainy,\n                    weatherCount.snowy,\n                ],\n                backgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"silver\"],\n                hoverBackgroundColor: [\"yellow\", \"black\", \"blue\", \"#d9d9d9\"],\n            },\n        ],\n    }\n    const data2 = {\n        labels: [\"동네 예보\", \"기상청\"],\n        datasets: [\n            {\n                label: \"강수 확률\",\n                backgroundColor: \"#697cfa\",\n                borderColor: \"#0022ff\",\n                borderWidth: 1,\n                hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                hoverBorderColor: \"rgba(255,99,132,1)\",\n                data: [\n                    ((weatherCount.rainy + weatherCount.snowy) /\n                        (weatherCount.sunny +\n                            weatherCount.cloudy +\n                            weatherCount.rainy +\n                            weatherCount.snowy)) *\n                        100,\n                    weatherApi,\n                ],\n            },\n        ],\n    }\n\n    const [isOnOff, setisOnOff] = useState(true)\n\n    // postbox를 클릭하면 postread로 연결됩니다\n    const postBoxHandler = (e) => {\n        let elem = e.target\n\n        while (!elem.classList.contains(\"postbox\")) {\n            elem = elem.parentNode\n            if (elem.classList.contains(\"mapModal\")) {\n                elem = null\n                return\n            }\n        }\n\n        // console.log('**mapbox click id**',elem.id);\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/readpost\",\n            state: { postId: elem.id },\n        })\n    }\n    // postbox를 클릭하면 postread로 연결됩니다\n\n    return (\n        <>\n            <ImgContainer id=\"map\"></ImgContainer>\n            {isOnOff ? (\n                <SlideModal>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(false)}\n                            icon={faChevronDown}\n                        />\n                    </Button>\n                </SlideModal>\n            ) : (\n                <SlideModal bottom={\"70px;\"}>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(true)}\n                            icon={faChevronUp}\n                        />\n                    </Button>\n                </SlideModal>\n            )}\n            {isOnOff ? (\n                <PostListModal>\n                    {!isLoading ? (\n                        <>\n                            <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n                            <GraphTitle>\n                                <GraphTitleDiv2>\n                                    동네 예보 날씨 비율\n                                </GraphTitleDiv2>\n                                <GraphTitleDiv2>\n                                    동네 예보 vs 기상청예보\n                                </GraphTitleDiv2>\n                            </GraphTitle>\n                            <LoadingBoxDiv>\n                                <LoadingSpinner size={\"15%;\"} />\n                            </LoadingBoxDiv>\n                        </>\n                    ) : (\n                        <div className=\"mapModal\">\n                            <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n                            <GraphTitle>\n                                <GraphTitleDiv2>\n                                    동네 예보 날씨 비율\n                                </GraphTitleDiv2>\n                                <GraphTitleDiv2>\n                                    동네 예보 vs 기상청예보\n                                </GraphTitleDiv2>\n                            </GraphTitle>\n                            <GraphModal>\n                                <Doughnut data={data} />\n                                <BarGraphFlex>\n                                    <BarGraphchild>\n                                        <Bar data={data2} />\n                                    </BarGraphchild>\n                                </BarGraphFlex>\n                            </GraphModal>\n                            <GraphTitleDiv>동네 예보</GraphTitleDiv>\n                            {postList.map((post) => {\n                                return (\n                                    // <PostBox onClick={() => console.log(post)}>\n                                    <PostBox\n                                        className=\"postbox\"\n                                        onClick={postBoxHandler}\n                                        key={post.id}\n                                        id={post.id}\n                                    >\n                                        <Box className=\"box\">\n                                            <PostImg\n                                                className=\"postImage\"\n                                                src={`${post.post_photo}`}\n                                            />\n                                            <EmoticonBox>\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.weather}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.wind}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.temp}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.outer_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.top_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.bottom_id}.png`}\n                                                />\n                                            </EmoticonBox>\n                                        </Box>\n                                        <Box2>\n                                            <PostTitle>{`${post.post_title}`}</PostTitle>\n                                            <PostContent>{`${post.post_content}`}</PostContent>\n                                        </Box2>\n                                    </PostBox>\n                                )\n                            })}\n                        </div>\n                    )}\n                </PostListModal>\n            ) : (\n                <></>\n            )}\n        </>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport { changeMapPage, mapSet } from \"../actions/index\"\n\nconst Container = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100%;\n\n    position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // max-width: 100%;\n        width: 100%;\n        position: relative;\n    }\n`\n\nexport default function Map() {\n    const dispatch = useDispatch()\n    console.log(\"map임\")\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    const { kakao } = window\n\n    useEffect(() => {\n        dispatch(changeMapPage(true))\n    }, [])\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","// 스크롤 탑 버튼\nimport React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\n\nconst Button = styled.div`\n    position: fixed;\n    z-index: 100;\n    display: flex;\n    justify-content: flex-end;\n    bottom: 0;\n    transition: all 0.3s;\n    display: none;\n    right: 0;\n\n    img {\n        width: 3rem;\n        height: 3rem;\n        margin: 3rem;\n        opacity: 0.7;\n        background-color: var(--page-bg-color);\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: block;\n        height: 200px;\n    }\n    @media screen and (max-width: 761px) {\n\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nexport default function TopButton() {\n    // top button\n    const [ScrollY, setScrollY] = useState(0)\n    const [btnStatus, setBtnStatus] = useState(false) // 버튼 상태\n\n    // console.log(window.pageYOffset)\n    // console.log(btnStatus)\n\n    const handleFollow = () => {\n        setScrollY(window.scrollY)\n        if (ScrollY > 200) {\n            // 200 이상이면 버튼이 보임\n            setBtnStatus(true)\n        } else {\n            // 200 이하일때 버튼이 사라짐\n            setBtnStatus(false)\n        }\n    }\n\n    // 클릭시 위로 올라감\n    const scrollToTop = () => {\n        // e.preventDefault() // 새로고침 방지\n        window.scrollTo({ top: 0, behavior: \"smooth\" }) // 위로 올라감\n        setScrollY(0) // 올라가면 다시 0으로 초기화\n        setBtnStatus(false) // 버튼 다시 사라짐\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleFollow)\n        return () => {\n            window.removeEventListener(\"scroll\", handleFollow)\n        }\n    })\n\n    return (\n        <Button>\n            {btnStatus ? (\n                <img\n                    src={`${process.env.PUBLIC_URL}img/scroll-up.png`}\n                    alt=\"top\"\n                    onClick={scrollToTop}\n                />\n            ) : null}\n        </Button>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport {\n    changeIsLogin,\n    changeSearchword,\n    changeWeatherFilter,\n} from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100%;\n    height: 125px;\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    border-bottom: 0.5px solid #dbdbdb;\n    justify-content: space-between;\n\n    @media screen and (max-width: 1081px) {\n        height: auto;\n        justify-content: space-between;\n        flex-direction: column;\n    }\n`\n\n// 검색창\nconst Wing = styled.div`\n    display: none;\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\n// 로고\nconst TitleAndLogo = styled.div`\n    /* display: ${(props) =>\n        props.isMobileLogo ? \"flex\" : \"none\"}; //map일때 헤더 */\n    display: flex;\n    align-items: center;\n    color: #231f20;\n\n    p {\n        font-weight: bold;\n        font-size: 1.4rem;\n    }\n    img {\n        width: 4rem;\n        margin-right: 0.5rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 100%;\n    }\n\n    @media screen and (max-width: 500px) {\n        img {\n            width: 3rem;\n            margin-right: 0.3rem;\n        }\n        p {\n            font-size: 1.2rem;\n        }\n    }\n`\n\n// 메뉴\nconst Center = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 350px;\n    justify-content: space-around;\n    flex-direction: row;\n    width: 55%;\n\n    @media screen and (max-width: 1081px) {\n        display: none;\n    }\n`\n\n// 메뉴버튼\nconst MenuButtons = styled.div`\n    width: 90%;\n    display: flex;\n    justify-content: space-around;\n\n    button {\n        display: block;\n        position: relative;\n        cursor: pointer;\n        transition: 800ms ease all;\n    }\n    button:hover {\n        color: #fe7e9d;\n    }\n\n    button:before,\n    button:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        height: 2px;\n        width: 0;\n        background: pink;\n        transition: 400ms ease all;\n    }\n    /* 버튼 선 */\n    button:after {\n        right: inherit;\n        top: inherit;\n        left: 0;\n        bottom: 0;\n    }\n    button:hover:before,\n    button:hover:after {\n        width: 100%;\n        transition: 800ms ease all;\n    }\n\n    p {\n        font-size: 1.1rem;\n        height: 2rem;\n        line-height: 2.2rem;\n        font-family: \"Gowun Dodum\", sans-serif;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n    position: absolute;\n    top: 50px;\n    border: 1px solid #e0e0e0;\n    @media screen and (max-width: 1081px) {\n        top: 32px;\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    background-color: var(--page-bg-color);\n    border: 0.5px solid #dbdbdb;\n    border-radius: 3px;\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n        height: 30px;\n        font-size: 1rem;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: red;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    right: 0;\n`\n\n// 오른쪽 로그인, 회원가입 버튼\nconst Button3 = styled.button`\n    font-size: ${(props) => (props.isText ? \"1rem\" : \"1rem\")};\n    font-family: \"IBM Plex Sans KR\", sans-serif;\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    text-transform: uppercase;\n    letter-spacing: 2.5px;\n    font-weight: 500;\n    color: #000;\n    background-color: #fff;\n    border-radius: 45px;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease 0s;\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        background-color: pink;\n        box-shadow: 0px 15px 20px #f7cac9;\n        color: #fff;\n        transform: translateY(-4px);\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: none;\n\n        box-shadow: none;\n        letter-spacing: normal;\n        border-radius: 0;\n        margin: 0;\n        width: 100%;\n        transition: none;\n        background-color: #ffffff;\n\n        &:hover {\n            box-shadow: none;\n            transform: none;\n            color: #000;\n            background-color: pink;\n        }\n    }\n`\n\n// 오른쪽 로그인, 회원가입 버튼 div\nconst Buttons3 = styled.div`\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        width: 100%;\n    }\n`\n\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    /* padding: 0.3rem; */\n`\n\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    @media screen and (max-width: 1081px) {\n        padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n    }\n    @media screen and (max-width: 375px) {\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n        padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n        height: 2rem;\n    }\n`\n\n// 모바일 화면 상단 메뉴아이콘\nconst MobileMenuBar = styled.div`\n    display: none;\n    width: 2.5rem;\n    height: 2.5rem;\n    img {\n        width: 100%;\n    }\n    @media screen and (max-width: 1081px) {\n        display: none;\n        /* display: block; */\n        position: absolute;\n        right: 1rem;\n        top: 1.5rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Header({ isInput, isMobileLogo, isText }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, mapPage } = useSelector((state) => state.itemReducer)\n    //console.log(mapPage);\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    //검색창에 사용할 포커스변수-hoon\n    const [onFocus, setOnFocus] = useState(false)\n    //console.log(\"헤더는 찍히나?\");\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n    const [weatherFilter, setweatherFilter] = useState(\"\")\n    useEffect(() => {\n        setweatherFilter(weatherFilter)\n        dispatch(changeWeatherFilter(weatherFilter))\n\n        console.log(weatherFilter)\n    }, [weatherFilter])\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    const [menuBar, setMenuBar] = useState()\n    const menuBarCick = () => {}\n\n    return (\n        <HeaderOuter className=\"header\">\n            {/* <MenuBar></MenuBar> */}\n\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n                    src=\"img/img6.png\"\n                    alt=\"logo\"\n                />\n                <p onClick={() => history.push(\"/\")}>There Weather</p>\n            </TitleAndLogo>\n\n            {/* 검색창 */}\n            {/* {isInput ? (\n        <Center className=\"headerCenter\">\n          <InputAndSubmit className=\"inputAndSubmit\">\n            <Input\n              // onClick={(e) => console.log(e)}\n              onChange={(e) => setSearchEvent(e.target.value)}\n              type=\"text\"\n              placeholder=\"위치 검색\"\n              value={searchEvent}\n              // ref={inputRef}\n              // onClick={onRest}\n              onFocus={(e) => setOnFocus(true)}\n            />\n            <Buttons2 bgGrey>\n              {onFocus ? (\n                <Cancel onClick={() => setOnFocus(false)}>Cancel</Cancel>\n              ) : (\n                <FontAwesomeIcon\n                  onClick={() => {\n                    dispatch(changeSearchword(searchEvent));\n                    history.push(\"/map\");\n                  }}\n                  icon={faSearch}\n                />\n              )}\n            </Buttons2>\n          </InputAndSubmit>\n          {onFocus ? (\n            <StyledPostCode\n              className=\"daumPostCodeContainer\"\n              onComplete={handleComplete}\n            />\n          ) : (\n            <></>\n          )}\n          {mapPage.mapPage ? (\n            // 지우기 금지\n            // <Buttons className=\"headerButtons\">\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"sunny\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"sunny\");\n            //     }}\n            //     isText={weatherFilter === \"sunny\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faSun} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"cloudy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"cloudy\");\n            //     }}\n            //     isText={weatherFilter === \"cloudy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faCloud} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"rainy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"rainy\");\n            //     }}\n            //     isText={weatherFilter === \"rainy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faCloudRain} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"snowy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"snowy\");\n            //     }}\n            //     isText={weatherFilter === \"snowy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faSnowflake} />\n            //   </Button>\n            // </Buttons>\n            <div></div>\n          ) : (\n            <>\n              <div></div>\n            </>\n          )}\n        </Center>\n      ) : (\n        <Center className=\"headerCenter\" />\n      )} */}\n            {/* 검색창 끝 */}\n\n            <Center>\n                <MenuButtons>\n                    <button onClick={() => history.push(\"/homeorlogin\")}>\n                        <p>Home</p>\n                    </button>\n                    <button onClick={() => history.push(\"/bookmarkorlogin\")}>\n                        <p>Bookmark</p>\n                    </button>\n                    <button onClick={() => history.push(\"/map\")}>\n                        <p>Map</p>\n                    </button>\n                    <button onClick={() => history.push(\"/writeorlogin\")}>\n                        <p>Write</p>\n                    </button>\n                    <button>\n                        <p onClick={() => history.push(\"/moreoruserinfo\")}>\n                            Settings\n                        </p>\n                    </button>\n                </MenuButtons>\n            </Center>\n\n            {isLogin ? (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button3\n                        className=\"login\"\n                        onClick={logoutBtnHandler}\n                        isText\n                    >\n                        logOut\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        mypage\n                    </Button3>\n                </Buttons3>\n            ) : (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    <Button3\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        logIn\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        signUp\n                    </Button3>\n                </Buttons3>\n            )}\n\n            <MobileMenuBar onClick={menuBarCick}>\n                <img src={`${process.env.PUBLIC_URL}img/menu-bar.png`} />\n            </MobileMenuBar>\n        </HeaderOuter>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateWeatherInfo, updatePostId } from \"../actions/index\";\nimport TopButtonHome from \"../components/TopButton-home\";\nimport { useHistory } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\n// import Loading from \"./Loading\";\nimport Footer from \"../components/Footer\";\nimport { compose } from \"redux\";\n// import Postit from \"../../public/img/icons-write/postit.png\";\n\nconst HomeContainer = styled.div`\n/* border: orange solid 3px;// */\n  display: flex;  \n  flex-direction: column;\n  height: 100%;\n  /* background-color: var(--page-bg-color); */\n  ul {\n    list-style: none;\n  }\n\n  @media screen and (min-width: 3000px) {\n    width: 80%;\n  }\n\n  @media screen and (min-width: 1500px) {\n    margin: 0 auto;\n    width: 90%;\n    /* border: 1px solid #aaa; */\n  }\n  @media screen and (max-width: 1081px) {\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0 2vw;\n    /* border: 1px solid #aaa; */\n    width: 85%;\n    height: 100%;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n  }\n`;\n\nconst FooterDiv = styled.div`\n  //모바일\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    //pc\n    display: block;\n  }\n`;\n\n// 날짜\nconst TodaysDate = styled.div`\n  /* background-color: var(--page-bg-color); */\n  margin: 0 auto;\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #curDate {\n    padding-left: 2vw;\n  }\n  #curLocation {\n    padding-right: 2vw;\n  }\n\n  @media screen and (min-width: 1500px) {\n    width: 90%;\n    #curDate {\n      padding-left: 0;\n    }\n    #curLocation {\n      padding-right: 0;\n    }\n  }\n  @media screen and (max-width: 1081px) {\n    width: 85%;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n  }\n  @media screen and (max-width: 500px) {\n    font-size: 15px;\n  }\n  @media screen and (max-width: 375px) {\n    font-size: 12px;\n  }\n`;\n\n// 왼쪽 container\nconst LeftContainer1 = styled.div`\n/* border: blue solid 3px;// */\n  display: flex;\n  gap: 0.1rem;\n  flex-direction: row;\n  flex-wrap: wrap;\n  .weatherInfo {\n    text-align: center;\n    line-height: 3rem;\n    li {\n      align-items: center;\n    }\n    img {\n      width: 2rem;\n      height: 2rem;\n      vertical-align: middle;\n    }\n  }\n  .codiInfo {\n    text-align: center;\n  }\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n  @media screen and (max-width: 300px) {\n    img {\n      width: 3rem;\n      height: 3rem;\n    }\n  }\n`;\n\n// 00구 주민예보\nconst LeftNav1 = styled.nav`\n  background-image: linear-gradient(rgba(255,255,255,0.5), rgba(255,255,255,0.5)), url(\"${process.env.PUBLIC_URL}img/icons-write/${\"neighborhood\"}.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 30px 5px 5px 5px;\n  padding: 10px;\n  line-height: 3vh;\n  height: 25%;\n  /* background-color: var(--page-bg-color); */\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 1vh;\n    color: #FF6EAD;\n    font-weight: bold;\n  }\n  @media screen and (max-width: 1081px) {\n    margin-top: 5px;\n  }\n\n  @media screen and (max-width: 687px) {\n    border-bottom: 1px solid #8e8e8e;\n  }\n  @media screen and (max-width: 375px) {\n    margin-top: 10px;\n    line-height: 4vh;\n    \n  }\n`;\n// 기상청 일기예보\nconst LeftNav2 = styled.div`\n  background-image: linear-gradient(rgba(255,255,255,0.5), rgba(255,255,255,0.5)), url(\"${process.env.PUBLIC_URL}img/icons-write/${\"weather\"}.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 5px;\n  padding: 10px;\n  line-height: 3vh;\n  height: 35%;\n  /* background-color: var(--page-bg-color); */\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 1vh;\n    color: #3b75eb;\n    font-weight: bold;\n  }\n  @media screen and (max-width: 687px) {\n    border-bottom: 1px solid #8e8e8e;\n  }\n  @media screen and (max-width: 375px) {\n    line-height: 4vh;\n  }\n`;\n\n// 00구 날씨 기반 추천 코디\nconst LeftNav3 = styled.div`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 3px;\n  padding: 10px;\n  /* background-color: var(--page-bg-color); */\n  height: 35%;\n  p {\n    font-size: 1.2rem;\n    margin: 2vh 0;\n    color:#CD6BD9;\n    font-weight: bold;\n  }\n  .codiInfo {\n    height: 80%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n  @media screen and (max-width: 1081px) {\n    height: 30vh;\n    flex-basis: 100vh;\n    flex-grow: 2;\n  }\n  @media screen and (max-width: 375px) {\n    p {\n      font-size: 1.2rem;\n      margin: 2vh 0;\n    }\n    .codiInfo {\n      /* border: 1px solid hotpink; */\n      height: 80%;\n      display: flex;\n      justify-content: space-around;\n      align-items: center;\n    }\n    @media screen and (max-width: 1081px) {\n      height: 30vh;\n      flex-basis: 100vh;\n      flex-grow: 2;\n    }\n    @media screen and (max-width: 375px) {\n      border-bottom: 1px solid #8e8e8e;\n      p {\n        font-size: 1rem;\n        margin: 1vh 0;\n      }\n    }\n  }\n`;\n// 코디 이미지\nconst Codi = styled.img`\n  width: 5rem;\n  height: auto;\n  filter: opacity(.5) drop-shadow(0 0 0 #aaa);\n\n\n  @media screen and (max-width: 400px) {\n    height: auto;\n  }\n`;\n\n// 오른쪽 container\nconst RightContainer = styled.div`\n/* border: green solid 3px;// */\n  display: grid;\n  /* height:100vh; */\n  width: 80vw;\n  grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-area: \"nav nav\" \"main main\" \"main main\";\n  grid-gap: 0.1rem;\n  transition: all 0.01s ease-in-out;\n  margin: 0 auto;\n\n  .userPost {\n    &:hover {\n      border-bottom: 1px solid #fafafa;\n    }\n  }\n\n  @media (max-width: 600px) {\n    .userPost:nth-last-child(1) {\n      display: none;\n    }\n    grid-template-rows: 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      \"nav\"\n      \"main\";\n  }\n  .userPost {\n    text-align: center;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\n// '00구 주민예보글'\nconst RightNav1 = styled.nav`\n  margin-top: 0.8rem;\n  text-align: center;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas: \"nav nav\";\n  grid-column: 1 / 4;\n  grid-row: 1 / 2;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1vh 1vh;\n  #location {\n    font-size: 1.5rem;\n    color: #8e8e8e;\n  }\n  #moreView {\n    color: #336fc9;\n  }\n  @media screen and (max-width: 600px) {\n    grid-column: 1 / 3;\n    #location {\n      font-size: 1rem;\n    }\n  }\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { item, curLocation } = useSelector((state) => state.itemReducer);\n  console.log(curLocation);\n  console.log(\"카카오 위도 : \", curLocation.lat); // map 페이지 거쳐야함\n  console.log(\"카카오 경도 : \", curLocation.lon);\n\n  // const { userInfo } = useSelector((state) => state.itemReducer)\n  // dispatch(changeUser(axiosData))\n\n  const [weatherData, setWeatherData] = useState();\n\n//   useEffect(async () => {\n//     console.log(curLocation);\n//     if (curLocation.lat.length === 0) {\n//       await history.push(\"/map\");\n//       history.push(\"/home\");\n//     }\n//   }, []);\n\n  useEffect(async () => {\n    // await history.push(\"/map\");\n    // history.push(\"/home\");\n    // history.goBack();\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n        console.log(lat, lon); //브라우저에 찍힘\n        axios({\n          url: url + \"/map\",\n          method: \"post\",\n          data: { lat: lat, lon: lon },\n          withCredentials: true,\n        }).then((res) => {\n          //console.log(res.data)\n          //console.log(res.data.item)\n          setWeatherData(res.data);\n          dispatch(updateWeatherInfo(res.data));\n        });\n      });\n    }\n  }, []);\n\n  // 현재 위치 주소\n  const [curAddress, setcurAddress] = useState(\"\");\n  // 최근 게시물(위도, 경도, 지역범위 확인)\n  const [currentPosts, setcurrentPosts] = useState([]);\n  useEffect(() => {\n    console.log(navigator.geolocation);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = curLocation.lat, // 위도\n          lon = curLocation.lon; // 경도\n        // let lat = 37.3915567; // 위도\n        // lon = 126.7398173; // 경도\n        // 37.5525698 127.0783197\n        /*\n          소수 7째자리까지 : Math.floor(a * 10000000) /10000000\n\n          남서쪽 위도, 경도는  (37.5262196, 127.0449971)이고\n          북동쪽 위도, 경도는  (37.5684781, 127.1200016)입니다 \n        */\n\n        // left(37.5262196) , right(37.5684781) : 0.0422585(0.04225850000000264), 각 0.02112925\n        // bottom(127.0449971) , top(127.1200016) : 0.0750045(0.07500449999999148), 각 0.03750225\n        // 현재 위도, 경도의 동,서,남,북 범위 설정 (소수 7째자리까지)\n        let right = lat + 0.02112925;\n        let left = lat - 0.02112925;\n        let top = lon + 0.03750225;\n        let bottom = lon - 0.03750225;\n\n        console.log(right, left, top, bottom);\n\n        axios({\n          url: url + \"/home\",\n          method: \"post\",\n          data: {\n            lat: lat,\n            lon: lon,\n            right: right,\n            left: left,\n            top: top,\n            bottom: bottom,\n          },\n          withCredentials: true,\n        }).then((res) => {\n          // console.log('res : ', res.data.address);\n          // console.log(\"address : \", res.data.address);\n          // console.log(\"게시글 데이터 : \", res.data.curtPost);\n          setcurrentPosts(res.data.curtPost); // 주민예보글 렌더링 부분\n          setcurAddress(res.data.address);\n\n          // dispatch(homePost(res.data))\n        });\n      });\n    }\n  }, []);\n\n  // 날짜\n  const [todaysDate, settodaysDate] = useState(\"\");\n  useEffect(() => {\n    let date = new Date();\n    const formatDate = (currentDate) => {\n      let formatted = `${currentDate.getFullYear()}년 ${\n        currentDate.getMonth() + 1\n      }월 ${currentDate.getDate()}일`;\n      return formatted;\n    };\n    settodaysDate(formatDate(date));\n  });\n\n  // 날씨, 코디 가져오기, 추후 수정\n  let [currentTemp, setcurrentTemp] = useState(\"\");\n  let [currentWind, setcurrentWind] = useState(\"\");\n  let [currentWeather, setcurrentWeather] = useState(\"\");\n  let [currentOuter, setcurrentOuter] = useState(\"\");\n  let [currentTop, setcurrentTop] = useState(\"\");\n  let [currentBottom, setcurrentBottom] = useState(\"\");\n\n  useEffect(() => {\n    let tempArr = []; // 체감온도\n    let windArr = []; // 바람세기\n    let weatherArr = []; // 날씨상태\n    let outerArr = []; // 겉옷\n    let topArr = []; // 상의\n    let bottomArr = []; // 하의\n\n    // 해당 key만 가져오기\n    for (let i = 0; i < currentPosts.length; i++) {\n      tempArr.push(currentPosts[i].temp); // temp키만 가져옴\n      windArr.push(currentPosts[i].wind);\n      weatherArr.push(currentPosts[i].weather);\n\n      outerArr.push(currentPosts[i].outer_id);\n      topArr.push(currentPosts[i].top_id);\n      bottomArr.push(currentPosts[i].bottom_id);\n    }\n\n    // 해당 키의 중복개수세는 함수\n    function getCount(arr) {\n      return arr.reduce((pv, cv) => {\n        pv[cv] = (pv[cv] || 0) + 1;\n        return pv;\n      }, {});\n    }\n\n    let tempObj = getCount(tempArr); // {hot: 6, cold: 3}\n    let windObj = getCount(windArr);\n    let weatherObj = getCount(weatherArr);\n    let outerObj = getCount(outerArr);\n    let topObj = getCount(topArr);\n    let bottomObj = getCount(bottomArr);\n\n    // 최대값구하기 : 객체 -> 배열\n    let newTempArr = Object.values(tempObj); // [6, 3]\n    let newWindArr = Object.values(windObj);\n    let newWeatherArr = Object.values(weatherObj);\n    let newOuterArr = Object.values(outerObj);\n    let newTopArr = Object.values(topObj);\n    let newBottomArr = Object.values(bottomObj);\n    // 최대값\n    let tempMaxNum = Math.max(...newTempArr); // 6\n    let windMaxNum = Math.max(...newWindArr);\n    let weatherMaxNum = Math.max(...newWeatherArr);\n    let outerMaxNum = Math.max(...newOuterArr);\n    let topMaxNum = Math.max(...newTopArr);\n    let bottomMaxNum = Math.max(...newBottomArr);\n\n    // 최대값과 일치하는 key 추출\n    function matchKey(obj, maxNum) {\n      // 객체, 최대값\n      for (let key in obj) {\n        if (obj[key] === maxNum) {\n          return key;\n        }\n      }\n    }\n\n    // 화면에 나타날 key\n    let maxTemp = matchKey(tempObj, tempMaxNum);\n    let maxWind = matchKey(windObj, windMaxNum);\n    let maxWeather = matchKey(weatherObj, weatherMaxNum);\n    let maxOuter = matchKey(outerObj, outerMaxNum);\n    let maxTop = matchKey(topObj, topMaxNum);\n    let maxBottom = matchKey(bottomObj, bottomMaxNum);\n\n    setcurrentTemp(maxTemp);\n    setcurrentWind(maxWind);\n    setcurrentWeather(maxWeather);\n    setcurrentOuter(maxOuter);\n    setcurrentTop(maxTop);\n    setcurrentBottom(maxBottom);\n\n    console.log(\"currentTemp : \", currentTemp);\n    console.log(\"currentWind : \", currentWind);\n    console.log(\"currentWeather : \", currentWeather);\n    console.log(\"outer : \", currentOuter); // 안나옴\n  });\n\n  // 게시물 사진 클릭\n  const photoClickHandler = (e) => {\n    // console.log(e.target.id); // 게시물id 전달\n    let elem = e.target;\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  return (\n    <div className=\"homecontainer\">\n      {/* <Loading /> */}\n      <TopButtonHome />\n      <TodaysDate>\n        <p id=\"curDate\">날짜 : {todaysDate}</p>\n        <p id=\"curLocation\">위치 : {curAddress}</p>\n      </TodaysDate>\n      <HomeContainer>\n        <LeftContainer1 className=\"LeftContainer1\">\n          <LeftNav1>\n            <p>주민예보</p>\n            <div className=\"weatherInfo\">\n              {currentTemp === undefined &&\n              currentWind === undefined &&\n              currentWeather === undefined ? (\n                <p>현재 날씨 데이터가 없습니다 :(</p>\n              ) : (\n                <ul>\n                  <li>\n                    <span>체감온도 </span>\n                    <img\n                      src={`${process.env.PUBLIC_URL}img/icons-write/${currentTemp}.png`}\n                      alt=\"온도\"\n                    />\n                  </li>\n                  <li>\n                    <span>체감바람 </span>\n                    <img\n                      src={`${process.env.PUBLIC_URL}img/icons-write/${currentWind}.png`}\n                      alt=\"바람\"\n                    />\n                  </li>\n                  <li>\n                    <span>날씨 </span>\n                    <img\n                      src={`${process.env.PUBLIC_URL}img/icons-write/${currentWeather}.png`}\n                      alt=\"날씨\"\n                    />\n                  </li>\n                </ul>\n              )}\n            </div>\n          </LeftNav1>\n         \n          <LeftNav2> \n            <p>기상청 예보</p>\n            <div className=\"weatherInfo\">\n              <ul>\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return (\n                      <li key={nanoid()}>\n                        예보시각: {info.baseTime.substring(0, 2)}시\n                        {info.baseTime.substring(2)}분\n                      </li>\n                    );\n                  })[0]}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return <li key={nanoid()}>기온: {info.fcstValue}℃</li>;\n                  })[24]}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return (\n                      <li key={nanoid()}>\n                        바람:{\" \"}\n                        {info.fcstValue < \"9\" ? (\n                          <img\n                            src={`${process.env.PUBLIC_URL}img/icons-write/breezy.png`}\n                            alt=\"온도\"\n                          />\n                        ) : info.fcstValue < \"14\" ? (\n                          <img\n                            src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}\n                            alt=\"온도\"\n                          />\n                        ) : (\n                          <img\n                            src={`${process.env.PUBLIC_URL}img/icons-write/strong.png`}\n                            alt=\"온도\"\n                          />\n                        )}\n                      </li>\n                    );\n                  })[54]}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return (\n                      <li key={nanoid()}>\n                        날씨:{\" \"}\n                        {info.fcstValue === \"0\"\n                          ? \"맑음\"\n                          : info.fcstValue === \"1\"\n                          ? \"비\"\n                          : info.fcstValue === \"3\"\n                          ? \"눈\"\n                          : info.fcstValue === \"5\"\n                          ? \"빗방울\"\n                          : \"눈날림\"}\n                      </li>\n                    );\n                  })[6]}\n              </ul>\n            </div>\n            {/* </img> */}\n          </LeftNav2>\n        \n          <LeftNav3>\n            <p>날씨 기반 추천 코디</p>\n            <div className=\"codiInfo\">\n              {currentOuter === undefined ||\n              currentTop === undefined ||\n              currentBottom === undefined ? (\n                <p>\n                  현재 위치 데이터가 없습니다. 현재위치의 첫 게시물을\n                  올려보세요👍\n                </p>\n              ) : (\n                <>\n                  <Codi\n                    src={`${process.env.PUBLIC_URL}img/codi/${currentOuter}.png`}\n                    alt=\"겉옷\"\n                  ></Codi>\n                  <Codi\n                    src={`${process.env.PUBLIC_URL}img/codi/${currentTop}.png`}\n                    alt=\"상의\"\n                  ></Codi>\n                  <Codi\n                    src={`${process.env.PUBLIC_URL}img/codi/${currentBottom}.png`}\n                    alt=\"하의\"\n                  ></Codi>\n                </>\n              )}\n            </div>\n          </LeftNav3>\n        </LeftContainer1>\n        <RightContainer>\n          <RightNav1>\n            <span id=\"location\">주민 예보글</span>\n          </RightNav1>\n          {currentPosts.map((el) => (\n            <div className=\"userPost\" key={el.id}>\n              <img src={el.post_photo} id={el.id} onClick={photoClickHandler} />\n            </div>\n          ))}\n        </RightContainer>\n      </HomeContainer>\n      <FooterDiv>\n        <Footer></Footer>\n      </FooterDiv>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\n\nexport const Bookmark = ({ like, bookmarkHandler, color }) => {\n    return (\n        <button className=\"bookmarkContainer\" onClick={bookmarkHandler}>\n            <FontAwesomeIcon\n                icon={faBookmark}\n                className=\"bookmark\"\n                size=\"3x\"\n                color={color}\n            />\n        </button>\n    )\n}\n\n// 사용 예시\n// const [bookmarked, setBookmarked] = useState(false);\n// const bookmarkHandler = (e) => {\n//   setBookmarked(prev => !prev);\n// }\n// <Bookmark bookmarkHandler={bookmarkHandler} color={bookmarked ? '#eb425b' : '#aaa'}/>\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst PaginationContainer = styled.div.attrs({\n  className: \"pagination\"\n})`\n  margin-bottom: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #A1A1A1;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst PageNumbersList = styled.ul.attrs({\n  className: \"pageNumbersList\"\n})`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  list-style-type: none;\n  padding: 0 1rem;\n`;\n\nconst ArrowButton = styled.span.attrs({\n  className: \"arrow\"\n})`\n  &:hover {\n    color: black;\n  }\n`;\n\nconst PageNumberItem = styled.li.attrs({\n  className: \"pageNumberItem\"\n})`\n  padding: 0 1rem;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport default function Pagination({dataLength, itemsPerPage, numberButtonClickHandler}) {\n  const numberOfPages = Math.ceil(dataLength / itemsPerPage); // 총 페이지 수\n  const numberArr = new Array(numberOfPages).fill(0).map((el, idx) => idx + 1); // 1~총페이지 수로 채워진 배열\n  let unit;\n  if (numberOfPages < 5) {\n    unit = numberOfPages+1;\n  } else {\n    unit = 5;\n  }\n  const [startIdx, setStartIdx] = useState(0);\n  const [lastIdx, setLastIdx] = useState(unit);\n  const cutArrInit = new Array(unit).fill(0).map((el, idx) => idx + 1);\n  const [cutArr, setCutArr] = useState(cutArrInit);\n\n  const prevHandler = () => {\n    if(startIdx === 0) return;\n    setStartIdx(prev => prev - unit);\n    setLastIdx(prev => prev - unit);\n  }\n\n  const nextHandler = () => {\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(lastIdx === tempIdxEnd) return;\n    setStartIdx(prev => prev + unit);\n    setLastIdx(prev => prev + unit);\n  }\n\n  useEffect(()=>{\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(startIdx >= itemsPerPage || lastIdx <= tempIdxEnd) {\n      const result = numberArr.slice(startIdx, lastIdx);\n      setCutArr(prev => result);\n    }\n  }, [startIdx, lastIdx])\n\n  return (\n    <PaginationContainer>\n      <ArrowButton className=\"prevButton\" onClick={prevHandler}>\n        ⬅️\n      </ArrowButton>\n      <PageNumbersList>\n        {\n          cutArr.map(number => {\n            return (\n              <PageNumberItem\n                key={number}\n                id={number}\n                onClick={() => {\n                  numberButtonClickHandler(number);\n                }}\n              >\n                {number}\n              </PageNumberItem>\n            );\n          })\n        }\n      </PageNumbersList>\n      <ArrowButton className=\"nextButton\" onClick={nextHandler}>\n        ➡️\n      </ArrowButton>\n    </PaginationContainer>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { Bookmark } from \"../components/BookMarks\";\nimport { updatePostId } from \"../actions/index\";\nimport { useHistory } from \"react-router\";\nimport { default as PaginationWithArrow } from \"../components/Pagination\";\nimport Footer from \"../components/Footer\";\n\n\nconst Outer = styled.div`\n  // 데스크탑\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  background-color: var(--page-bg-color);\n  width: 100%;\n  min-height: 100vh;\n  // padding-top: 100px;\n\n  @media screen and (max-width: 1081px) {\n    // 1081 이하일 때 // 모바일\n    // padding-top: 3vh;\n  }\n`;\nconst FooterDiv = styled.div`\n  //모바일\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    //pc\n    display: block;\n  }\n`;\n\n// 그리드\nconst Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n  grid-template-columns: repeat(2, 40vw);\n  margin: 5rem;\n  // grid-template-rows: 3fr 3fr;\n  // grid-template-columns: 1fr 1fr;\n  // grid-template-areas:\n  // \"div div\"\n  // \"div div\";\n  /* height: 83vh; */\n  // (max-width: 600px)\n  // margin-left: 3vw;\n  // margin-right: 3vw;\n  /* overflow: auto; */\n\n  .BookMarkContainer {\n    gap: 0.2rem;\n    background-color: rgba(255, 255, 255, 0.6);\n    display: flex;\n    justify-content: space-around;\n    border: 1px solid #dbdbdb;\n    border-radius: 3px;\n  }\n\n  @media (max-width: 1081px) {\n    margin: 3rem 2rem;\n    gap: 2rem;\n    grid-template-columns: 80vw;\n    // grid-template-rows: 1fr 1fr 1fr 1fr;\n    // grid-template-columns: 1fr;\n    grid-template-areas: \"div\";\n  }\n\n  @media (max-width: 400px) {\n    margin: 1rem;\n    grid-auto-rows: 500px;\n    gap: 0;\n    .BookMarkContainer {\n      height: 80%;\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`;\n\n// const BookMarkContainer = styled.div`\n//   background-color: rgba(255, 255, 255, 0.6);\n//   display: flex;\n//   gap: 0.1rem;\n//   justify-content: space-around;\n//   border: 1px solid #dbdbdb;\n//   border-radius: 3px;\n// `;\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n  // flex-basis: 30rem;\n  .postItem {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .postPicture {\n    margin: 1rem 2rem 1rem 1rem;\n    padding: 0;\n    height: 25vh;\n    align-items: center;\n  }\n  .postImg {\n    margin: 0.5rem;\n    width: 250px;\n    height: 250px;\n  }\n  .postImg:hover {\n    transform: scale(1.05);\n    transition: 0.5s ease-in-out;\n  }\n  @media screen and (max-width: 1081px) {\n    .postPicture {\n      height: 20vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    .postPicture {\n      margin: 0;\n    }\n  }\n`;\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n  margin: 1rem;\n  line-height: 3rem;\n  flex-direction: column;\n  flex-basis: 15rem;\n  justify-content: flex-start;\n  .postTitle {\n    font-weight: bold;\n    font-size: 2rem;\n  }\n  .postDate {\n    font-size: 1.5rem;\n  }\n  .postWeather {\n    /* font-size: 1.5rem; */\n    width: 3rem;\n    height: 3rem;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 1081px) {\n    line-height: 2rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    margin: 0.1rem 0 0 0.5rem;\n    line-height: 1.4rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n`;\n\nconst BookMarkIcon = styled(Bookmark)`\n  float: right;\n\n  & .heart {\n    cursor: pointer;\n    color: #aaa;\n  }\n`;\n\n//북마크가 없습니다.\nconst Waring = styled.div`\n  font-weight: bold;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\n// 페이지네이션\nconst Pagination = styled.div`\n  background-color: #fafafa;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10vh;\n  /* margin: 2rem; */\n  list-style: none;\n\n  button {\n    font-size: 1.5rem;\n    margin: 0 1vw;\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 2vh;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 5vh;\n    padding-bottom: 3vh;\n    button {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst PrevPage = styled.div``;\n\nconst PageNumber = styled.div`\n  li {\n    float: left;\n    margin: 1rem;\n  }\n  button {\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    li {\n      margin: 0;\n    }\n    button {\n      margin: 0 2vw;\n      font-size: 1rem;\n    }\n  }\n`;\nconst Img1 = styled.img`\n  max-width: 500px;\n`;\nconst Div1 = styled.div`\n  font-size: 30px;\n`;\n\nconst NextPage = styled.div``;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function BookMark() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { userInfo, readPostId, postInfo } = useSelector(\n    (state) => state.itemReducer\n  );\n  const [bookmarkList, setBookmarkList] = useState([]);\n\n  // console.log(userInfo)\n  // console.log(readPostId)\n  // console.log(postInfo)\n  const postId = Number(readPostId);\n  //console.log(postId)\n\n  useEffect(() => {\n    axios({\n      url: url + \"/bookmarklist\",\n      method: \"post\",\n      data: {\n        user_id: userInfo.id,\n        post_id: postId,\n        post_info: postInfo,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    }).then((res) => {\n      // console.log(\"**res.data bookmarkList**\", res.data)\n      setBookmarkList(res.data);\n    });\n  }, [userInfo]);\n\n  //console.log(bookmarkList)\n\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    return `${dateOnly}`;\n  };\n\n  const postClickHandler = (e) => {\n    //\"PostBookMarkList\"\n    let elem = e.target;\n    while (!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if (!elem.classList.contains(\"BookMarkContainer\")) {\n        break;\n      }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      // pathname: '/postread',\n      pathname: \"/bookmarkpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  // 시작 - 페이지네이션 변수들\n  const [currentPage, setCurrentPage] = useState(1);\n  // 1페이지로 시작\n  const itemsPerPage = 6;\n  // 한 페이지에 8개씩 보여준다\n  const lastIdx = currentPage * itemsPerPage;\n  const firstIdx = lastIdx - itemsPerPage;\n  const slicedData = (dataArr) => {\n    return dataArr.slice(firstIdx, lastIdx);\n  };\n  // 끝 - 페이지네이션 변수들\n  // const target = arr.slice(start, end)\n  console.log(bookmarkList);\n  return (\n    <Outer>\n      {/* {bookmarkList === [] ?\n      <Waring>\"북마크가 없습니다.\"</Waring> : */}\n      {bookmarkList.length === 0 ? (\n        <>\n          <Img1 src=\"img/bookmarkdefault.png\" alt=\"logo\" />\n          <Div1>북마크가 없어요</Div1>\n        </>\n      ) : (\n        <Container>\n          {bookmarkList &&\n            bookmarkList.map((el) => {\n              {\n                /* {bookmarkList && slicedData(bookmarkList).map((el) => { */\n              }\n              return (\n                <div className=\"BookMarkContainer\" key={el.id}>\n                  <BookMarkPhoto>\n                    <div\n                      className={[\"postItem\"]}\n                      id={el.id}\n                      onClick={postClickHandler}\n                      key={el.id}\n                    >\n                      <img\n                        className=\"postImg\"\n                        key={el.id}\n                        src={el.post_photo}\n                        alt=\"posts\"\n                      />\n                    </div>\n                  </BookMarkPhoto>\n                  <BookMarkList>\n                    <div className=\"test\" key={el.id}>\n                      <p className=\"postDate\">{formatDate(el.createdAt)}</p>\n                      <p className=\"postWeather sky\"> {el.weather} </p>\n                      <p className=\"postWeather wind\">{el.wind} </p>\n                      <p className=\"postWeather temp\">{el.temp} </p>\n                    </div>\n                  </BookMarkList>\n                </div>\n              );\n            })}\n        </Container>\n      )}\n\n      {/* : <Waring>\"북마크가 없습니다.\"</Waring>} */}\n\n      {/* 시작 - 페이지네이션 새로 추가 */}\n      <PaginationWithArrow\n        // dataLength={bookmarkList.length} // 본래\n        dataLength={6} // 테스트용\n        itemsPerPage={8}\n        numberButtonClickHandler={setCurrentPage}\n      />\n      {/* 끝 - 페이지네이션 새로 추가 */}\n      <FooterDiv>\n        <Footer></Footer>\n      </FooterDiv>\n    </Outer>\n  );\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport {\n    changeIsLogin,\n    changeSearchword,\n    changeWeatherFilter,\n} from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100%;\n    height: 125px;\n    display: flex;\n    align-items: center;\n    background-color: white;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    border-bottom: 0.5px solid #dbdbdb;\n    justify-content: space-between;\n\n    @media screen and (max-width: 1081px) {\n        height: auto;\n        justify-content: space-between;\n        flex-direction: column;\n    }\n`\n\n// 검색창\nconst Wing = styled.div`\n    display: none;\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\n// 로고\nconst TitleAndLogo = styled.div`\n    /* display: ${(props) =>\n        props.isMobileLogo ? \"flex\" : \"none\"}; //map일때 헤더 */\n    display: flex;\n    align-items: center;\n    color: #231f20;\n\n    p {\n        font-weight: bold;\n        font-size: 1.4rem;\n    }\n    img {\n        width: 4rem;\n        margin-right: 0.5rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 100%;\n    }\n\n    @media screen and (max-width: 500px) {\n        img {\n            width: 3rem;\n            margin-right: 0.3rem;\n        }\n        p {\n            font-size: 1.2rem;\n        }\n    }\n`\n\n// 메뉴\nconst Center = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 350px;\n    justify-content: space-around;\n    flex-direction: row;\n    width: 55%;\n\n    @media screen and (max-width: 1081px) {\n        display: none;\n    }\n`\n\n// 메뉴버튼\nconst MenuButtons = styled.div`\n    width: 90%;\n    display: flex;\n    justify-content: space-around;\n\n    button {\n        display: block;\n        position: relative;\n        cursor: pointer;\n        transition: 800ms ease all;\n    }\n    button:hover {\n        color: #fe7e9d;\n    }\n\n    button:before,\n    button:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        height: 2px;\n        width: 0;\n        background: pink;\n        transition: 400ms ease all;\n    }\n    /* 버튼 선 */\n    button:after {\n        right: inherit;\n        top: inherit;\n        left: 0;\n        bottom: 0;\n    }\n    button:hover:before,\n    button:hover:after {\n        width: 100%;\n        transition: 800ms ease all;\n    }\n\n    p {\n        font-size: 1.1rem;\n        height: 2rem;\n        line-height: 2.2rem;\n        font-family: \"Gowun Dodum\", sans-serif;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n    position: absolute;\n    top: 50px;\n    border: 1px solid #e0e0e0;\n    @media screen and (max-width: 1081px) {\n        top: 32px;\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    background-color: var(--page-bg-color);\n    border: 0.5px solid #dbdbdb;\n    border-radius: 3px;\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n        height: 30px;\n        font-size: 1rem;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: red;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    right: 0;\n`\n\n// 오른쪽 로그인, 회원가입 버튼\nconst Button3 = styled.button`\n    font-size: ${(props) => (props.isText ? \"1rem\" : \"1rem\")};\n    font-family: \"IBM Plex Sans KR\", sans-serif;\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    text-transform: uppercase;\n    letter-spacing: 2.5px;\n    font-weight: 500;\n    color: #000;\n    background-color: #fff;\n    border-radius: 45px;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease 0s;\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        background-color: pink;\n        box-shadow: 0px 15px 20px #f7cac9;\n        color: #fff;\n        transform: translateY(-4px);\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: none;\n\n        box-shadow: none;\n        letter-spacing: normal;\n        border-radius: 0;\n        margin: 0;\n        width: 100%;\n        transition: none;\n        background-color: #ffffff;\n\n        &:hover {\n            box-shadow: none;\n            transform: none;\n            color: #000;\n            background-color: pink;\n        }\n    }\n`\n\n// 오른쪽 로그인, 회원가입 버튼 div\nconst Buttons3 = styled.div`\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        width: 100%;\n    }\n`\n\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    /* padding: 0.3rem; */\n`\n\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    @media screen and (max-width: 1081px) {\n        padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n    }\n    @media screen and (max-width: 375px) {\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n        padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n        height: 2rem;\n    }\n`\n\n// 모바일 화면 상단 메뉴아이콘\nconst MobileMenuBar = styled.div`\n    display: none;\n    width: 2.5rem;\n    height: 2.5rem;\n    img {\n        width: 100%;\n    }\n    @media screen and (max-width: 1081px) {\n        display: none;\n        /* display: block; */\n        position: absolute;\n        right: 1rem;\n        top: 1.5rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Header({ isInput, isMobileLogo, isText }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, mapPage } = useSelector((state) => state.itemReducer)\n    //console.log(mapPage);\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    //검색창에 사용할 포커스변수-hoon\n    const [onFocus, setOnFocus] = useState(false)\n    //console.log(\"헤더는 찍히나?\");\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n    const [weatherFilter, setweatherFilter] = useState(\"\")\n    useEffect(() => {\n        setweatherFilter(weatherFilter)\n        dispatch(changeWeatherFilter(weatherFilter))\n\n        console.log(weatherFilter)\n    }, [weatherFilter])\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    const [menuBar, setMenuBar] = useState()\n    const menuBarCick = () => {}\n\n    return (\n        <HeaderOuter className=\"header\">\n            {/* <MenuBar></MenuBar> */}\n\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n                    src=\"img/img6.png\"\n                    alt=\"logo\"\n                />\n                <p onClick={() => history.push(\"/\")}>There Weather</p>\n            </TitleAndLogo>\n\n            {/* 검색창 */}\n            {/* {isInput ? (\n        <Center className=\"headerCenter\">\n          <InputAndSubmit className=\"inputAndSubmit\">\n            <Input\n              // onClick={(e) => console.log(e)}\n              onChange={(e) => setSearchEvent(e.target.value)}\n              type=\"text\"\n              placeholder=\"위치 검색\"\n              value={searchEvent}\n              // ref={inputRef}\n              // onClick={onRest}\n              onFocus={(e) => setOnFocus(true)}\n            />\n            <Buttons2 bgGrey>\n              {onFocus ? (\n                <Cancel onClick={() => setOnFocus(false)}>Cancel</Cancel>\n              ) : (\n                <FontAwesomeIcon\n                  onClick={() => {\n                    dispatch(changeSearchword(searchEvent));\n                    history.push(\"/map\");\n                  }}\n                  icon={faSearch}\n                />\n              )}\n            </Buttons2>\n          </InputAndSubmit>\n          {onFocus ? (\n            <StyledPostCode\n              className=\"daumPostCodeContainer\"\n              onComplete={handleComplete}\n            />\n          ) : (\n            <></>\n          )}\n          {mapPage.mapPage ? (\n            // 지우기 금지\n            // <Buttons className=\"headerButtons\">\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"sunny\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"sunny\");\n            //     }}\n            //     isText={weatherFilter === \"sunny\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faSun} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"cloudy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"cloudy\");\n            //     }}\n            //     isText={weatherFilter === \"cloudy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faCloud} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"rainy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"rainy\");\n            //     }}\n            //     isText={weatherFilter === \"rainy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faCloudRain} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"snowy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"snowy\");\n            //     }}\n            //     isText={weatherFilter === \"snowy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faSnowflake} />\n            //   </Button>\n            // </Buttons>\n            <div></div>\n          ) : (\n            <>\n              <div></div>\n            </>\n          )}\n        </Center>\n      ) : (\n        <Center className=\"headerCenter\" />\n      )} */}\n            {/* 검색창 끝 */}\n\n            <Center>\n                <MenuButtons>\n                    <button onClick={() => history.push(\"/homeorlogin\")}>\n                        <p>Home</p>\n                    </button>\n                    <button onClick={() => history.push(\"/bookmarkorlogin\")}>\n                        <p>Bookmark</p>\n                    </button>\n                    <button onClick={() => history.push(\"/map\")}>\n                        <p>Map</p>\n                    </button>\n                    <button onClick={() => history.push(\"/writeorlogin\")}>\n                        <p>Write</p>\n                    </button>\n                    <button>\n                        <p onClick={() => history.push(\"/moreoruserinfo\")}>\n                            Settings\n                        </p>\n                    </button>\n                </MenuButtons>\n            </Center>\n\n            {isLogin ? (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button3\n                        className=\"login\"\n                        onClick={logoutBtnHandler}\n                        isText\n                    >\n                        logOut\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        mypage\n                    </Button3>\n                </Buttons3>\n            ) : (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    <Button3\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        logIn\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        signUp\n                    </Button3>\n                </Buttons3>\n            )}\n\n            <MobileMenuBar onClick={menuBarCick}>\n                <img src={`${process.env.PUBLIC_URL}img/menu-bar.png`} />\n            </MobileMenuBar>\n        </HeaderOuter>\n    )\n}\n","import react, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faHeart,\n  faMapMarkerAlt,\n  faPencilAlt,\n  faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\";\nconst Outer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  z-index: 100;\n  /* position: sticky; */\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  @media screen and (min-width: 1081px) {\n    width: 1080px;\n  }\n`;\n\nconst Buttons = styled.div`\n  background-color: WHITE;\n  height: 70px;\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 101;\n  border-top: 1px solid #dbdbdb;\n\n  @media screen and (min-width: 1081px) {\n    // position: fixed;\n    // background-color: white;\n    // border-top: 1px solid #dbdbdb;\n    // border-left: 1px solid #dbdbdb;\n    // position: fiexd;\n    // width: 400px;\n    display: none;\n  }\n`;\n\nconst Button1 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/home.png\");\n  }\n`;\nconst Button2 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/bookmark.png\");\n  }\n`;\nconst Button3 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/location.png\");\n  }\n`;\nconst Button4 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/pencil.png\");\n  }\n`;\nconst Button5 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/setting.png\");\n  }\n`;\nexport default function MenuBar() {\n  const [url1, setUrl1] = useState(\"img/home0.png\");\n  const [curClick, setCurClick] = useState(\"\");\n  const history = useHistory();\n  const [selectBtn, setSelectBtn] = useState(\"\");\n  return (\n    <Outer className=\"menuBar\">\n      <Buttons>\n        <Button1>\n          <img src={url1} onClick={() => history.push(\"/homeorlogin\")} />\n        </Button1>\n        <Button2>\n          <img\n            src=\"https://img.icons8.com/ios/45/000000/bookmark-ribbon--v1.png\"\n            onClick={() => history.push(\"/bookmarkorlogin\")}\n          />\n        </Button2>\n        <Button3>\n          <img\n            src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n            onClick={() => history.push(\"/map\")}\n          />\n        </Button3>\n        <Button4>\n          <img\n            src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n            onClick={() => history.push(\"/writeorlogin\")}\n          />\n        </Button4>\n        <Button5>\n          <img\n            src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n            onClick={() => history.push(\"/moreoruserinfo\")}\n          />\n        </Button5>\n      </Buttons>\n    </Outer>\n  );\n}\n","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        font-family: 'Gowun Dodum', sans-serif;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n\n    &:hover {\n        border: 1px solid #fec0cb;\n        p {\n            color: #fec0cb;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport React, { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { changeMapPage } from \"../actions/index\"\nimport { useDispatch } from \"react-redux\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: calc(100vh - 125px);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    // border: 1px solid #dbdbdb;\n    border: 1px solid black;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        // border: 1px solid #262626;\n        border: 1px solid pink;\n        p {\n            // color: #262626;\n            color: pink;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nexport default function More() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .5rem;\n  font-size: 1.2rem;\n  border-radius: .5rem;\n  background-color: var(--modal-confirm-button-bg);\n\n  &:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\n/*\n    [수정]\n    - 위치 잡는 코드가 약간 바뀌었어요... (position, display)\n*/\n\nconst Button = styled.button`\n    /* top: 90vh; */\n    top: 1.5vh;\n    left: 0;\n    position: fixed;\n    z-index:100;\n    // border-radius: 50%;\n    display: none;\n    padding: 1rem 1rem 1rem .3rem;\n\n    .fa-fw {\n        font-size: 50px;\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { changeIsLogin, userPosts, updatePostId } from \"../actions/index\";\nimport GoBackButton from \"../components/GoBackButton\";\nimport Footer from \"../components/Footer\";\n/*\n    [수정]\n    - 페이지네이션 추가\n    - 주석, console.log 정리\n*/\n\nconst Outer = styled.div`\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  min-height: calc(100vh - 125px);\n  position: relative;\n  display: flex;\n  padding-bottom: 100px;\n\n  @media screen and (max-width: 1081px) {\n    flex-direction: column;\n    min-height: calc(100vh - 125px - 70px);\n  }\n`;\nconst FooterDiv = styled.div`\n  //모바일\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    //pc\n    display: block;\n  }\n`;\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n  width: 30%;\n  padding: 15vh 1vw 1vh 1vw;\n  text-align: center;\n  button {\n    // 비밀번호 수정, 회원탈퇴\n    color: #336fc9;\n    font-size: 1.5rem;\n    font-family: 'Gowun Dodum', sans-serif;\n    margin-top: 1vh;\n  }\n  .mediaBox {\n    margin-top: 2vh;\n    margin-bottom: 2vh;\n    p {\n      margin-top: 1vh;\n    }\n    #user-name {\n      font-size: 1.5rem;\n      font-weight: bold;\n    }\n    #user-changeInfo {\n      color: #336fc9;\n    }\n  }\n\n  @media screen and (max-width: 1081px) {\n    /* border-bottom: 1px solid #aaa;  // 구분선 추가 */\n    margin: 0 auto;\n    margin-top: 4vh;\n    width: 100%;\n    padding: 0 1vw 3vh 1vw;\n    .mediaBox {\n      width: 40%;\n      display: inline-block;\n      text-align: left;\n      p {\n        margin-top: 2vh;\n        justify-content: center;\n        line-height: 3vh;\n        font-size: 1.2rem;\n      }\n    }\n\n  }\n\n  @media screen and (max-width: 375px) {\n    button {\n      font-size: 1rem;\n    }\n    .mediaBox {\n      width: 50%;\n      display: inline-block;\n      padding-bottom: 1vh;\n      p {\n        margin-top: 0;\n        justify-content: center;\n        font-size: 1rem;\n      }\n      #user-name {\n        font-size: 1rem;\n      }\n    }\n  }\n`;\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n  width: 200px;\n  height: 200px;\n  padding: 10px 10px;\n  border-radius: 50%;\n  @media screen and (max-width: 1081px) {\n    margin-right: 5vw;\n  }\n  @media screen and (max-width: 375px) {\n    width: 7rem;\n    height: 7rem;\n  }\n`;\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n  height: 10vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-end;\n  text-decoration: none;\n\n  button {\n    font-size: 1.2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    .editpw {\n      width: 40%;\n      display: inline-block;\n      text-align: left;\n      p {\n        margin-top: 2vh;\n        justify-content: center;\n        line-height: 3vh;\n        font-size: 1.2rem;\n      }\n    }\n  }\n`;\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n  width: 100vw;\n  padding: 2vh 3vw 2vh 5vw;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 200px 1fr 1fr;\n\n  row-gap: 10px; /* row의 간격을 10px로 */\n  column-gap: 20px; /* column의 간격을 20px로 */\n  // border-top: 1px solid #aaa; // 구분선 추가 // header와 외곽선이 겹쳐서 주석처리합니다 ㅜㅜ\n\n  .item:nth-child(1) {\n    border: none;\n    grid-column: 1 / 4;\n    grid-row: 1 / 2;\n  }\n\n  div {\n    background-color: rgba(255, 255, 255, 0.5); // 추가\n  }\n  div:hover {\n    border: 1px solid var(--page-bg-color);\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  .more {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    background-color: transparent;\n  }\n  p {\n    font-size: 2rem;\n    margin: 0 auto;\n    font-weight: bold;\n    color: #8e8e8e;\n  }\n  .moreView {\n    font-size: 1.5rem;\n    color: #336fc9;\n    width: 5vw;\n    font-family: 'Gowun Dodum', sans-serif;\n  }\n\n  @media screen and (max-width: 1380px) {\n    .moreView {\n      font-size: 1.4rem;\n      width: 6vw;\n    }\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    margin-bottom: 10vh;\n    padding: 0;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 100px 300px 300px;\n    row-gap: 5px;\n    column-gap: 3px;\n\n    p {\n      font-size: 2rem;\n      font-family: 'Gowun Dodum', sans-serif;\n    }\n    .item {\n      margin: 0.5vh;\n    }\n    .moreView {\n      width: 80px;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    padding-left: 2vw;\n    padding-right: 2vw;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 50px 150px 150px 150px;\n    .item:nth-child(1) {\n      border: none;\n      grid-column: 1 / 3;\n      grid-row: 1 / 2;\n    }\n    p {\n      font-size: 1rem;\n    }\n    .moreView {\n      font-size: 1rem;\n      width: 50px;\n      height: 3rem;\n    }\n  }\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) {\n  url = \"https://thereweather.space/api\";\n}\n\nexport default function MyPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { isLogin, userInfo, postInfo, readPostId } = useSelector(\n    (state) => state.itemReducer\n  );\n  console.log(userInfo); //정보잘넘어옴\n  console.log(postInfo.postinfo);\n  console.log(readPostId);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [removeUser, setremoveUser] = useState(false);\n\n  const [currentPosts, setcurrentPosts] = useState([]);\n  console.log(currentPosts);\n\n  const [noIdWarning, setNoIdWarning] = useState(\"\");\n  //   useEffect(async () => {\n  //     console.log(postInfo.postinfo);\n  //     if (postInfo.postinfo === undefined) {\n  //       await history.push(\"/userinfo\");\n  //       history.push(\"/mypage\");\n  //     }\n  //   }, []);\n  // 게시물 데이터 조회\n  useEffect(() => {\n    axios({\n      url: url + `/mypage?searchID=${userInfo.user_id}`,\n      method: \"get\",\n      withCredentials: true,\n    }).then((res) => {\n      setcurrentPosts(res.data);\n      dispatch(userPosts(res.data));\n    });\n    // setcurrentPosts(postInfo.postinfo);\n  }, [userInfo]);\n\n  // 정보수정\n  const changeUserInfo = () => {\n    //console.log(\"정보수정 클릭\")\n    history.push(\"/edituserinfo\");\n  };\n\n  const removeUserInfo = () => {\n    setIsModalOpen(true);\n  };\n\n  const modalYesButtonHandlers = () => {\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    axios\n      .delete(url + \"/removeuser\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `token ${token}`,\n        },\n        withCredentials: true,\n      })\n      .then((res) => {\n        localStorage.clear(token);\n        dispatch(changeIsLogin(false));\n        history.push(\"/\");\n      });\n    //setIsModalOpen(false)\n  };\n\n  const modalNoButtonHandler = () => {\n    setIsModalOpen(false);\n  };\n  const modalCloseButtonHandler = () => {\n    setIsModalOpen(false);\n  };\n\n  // 게시물 클릭했을 때\n  const postClickHandler = (e) => {\n    let elem = e.target;\n    while (!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if (!elem.classList.contains(\"myPagePostList\")) {\n        break;\n      }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  // 더보기\n  const moreViewHandler = () => {\n    history.push(\"/mypost\");\n  };\n\n  return (\n    <>\n      <Outer>\n        <GoBackButton />\n        <ProfileArea>\n          <ProfileImg src={userInfo.user_Photo} />\n          <div className=\"mediaBox\">\n            <p id=\"user-name\">{userInfo.user_id}</p>\n            <p id=\"user-gender\">{userInfo.gender === 1 ? \"남성\" : \"여성\"}</p>\n            <p id=\"user-location\">나의 위치 : {userInfo.location}</p>\n            <p id=\"user-changeInfo\" onClick={changeUserInfo}>\n              정보수정\n            </p>\n          </div>\n          <ButtonArea>\n            <button className=\"editpw\" onClick={() => history.push(\"/editpassword\")}>\n              비밀번호 수정\n            </button>\n            <button className=\"remove\" onClick={removeUserInfo}>회원탈퇴</button>\n            {isModalOpen === false ? null : (\n              <ModalConfirm\n                yesHandler={modalYesButtonHandlers}\n                noHandler={modalNoButtonHandler}\n                closeHandler={modalCloseButtonHandler}\n              >\n                <p>탈퇴하시겠습니까?</p>\n                <p>이유를 선택해 주세요</p>\n                <select name=\"pets\" id=\"pet-select\">\n                  <option value=\"\">선택</option>\n                  <option value=\"notUseful\">사용을 많이 하지 않음</option>\n                  <option value=\"inconvenientDesign\">디자인이 불편함</option>\n                  <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n                  <option value=\"andSoForth\">기타</option>\n                </select>\n              </ModalConfirm>\n            )}\n          </ButtonArea>\n        </ProfileArea>\n\n        <GridArea className=\"myPagePostList\">\n          <div className=\"item more\">\n            <p>내가 쓴 예보</p>\n          </div>\n          {currentPosts.map((el) => (\n            <div\n              className={[\"item\", \"postItem\"]}\n              id={el.id}\n              onClick={postClickHandler}\n              key={el.id}\n            >\n              <img src={el.post_photo} alt=\"posts\" />\n            </div>\n          ))}\n          <button className=\"moreView\" onClick={moreViewHandler}>\n            더 보기\n          </button>\n        </GridArea>\n      </Outer>\n      <FooterDiv>\n        <Footer></Footer>\n      </FooterDiv>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/kakaoIcon.6af80cbc.png\";","export default __webpack_public_path__ + \"static/media/googleIcon.cadee8cd.png\";","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { changeIsLogin, changeMapPage } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport kakaoIcon from \"../../src/LoginIcon/kakaoIcon.png\"\nimport googleIcon from \"../../src/LoginIcon/googleIcon.png\"\nconst { Kakao } = window\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100%;\n    min-height: calc(var(--mobile-page-height) - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n\n    @media screen and (max-width: 711px) {\n        .Login--center {\n            width: 70%;\n        }\n        h2 {\n            font-size: 1.5rem;\n            margin: 1rem auto;\n        }\n    }\n    @media screen and (max-width: 711px) {\n        .Login--center {\n            width: 100%;\n        }\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst FindBtn = styled.button`\n    font-family: 'Gowun Dodum', sans-serif;\n    font-size: 1rem;\n    margin: 3rem 14.5rem 0 14.5rem;\n\n    @media screen and (max-width: 711px) {\n        margin: 3rem 0 0 0;\n        span {\n            display: block;\n            margin: 0.5rem;\n        }\n    }\n`\n\nconst LoginInputAndTitle = styled.div`\n    margin: 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 70%;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n\n        @media screen and (max-width: 711px) {\n            font-size: 1rem;\n        }\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 70%;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    li {\n        text-align: center;\n        &:nth-child(3) {\n            margin-top: 1rem;\n        }\n\n        p {\n            margin: 0 auto;\n            padding-left: 1rem;\n            color: var(--font-validation-negative);\n            width: 70%;\n            text-align: left;\n        }\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n    img {\n        margin: 1rem;\n        width: 3.5rem;\n        height: 3.5rem;\n    }\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: black;\n    background-color: pink;\n    border-radius: 1rem;\n    font-family: 'Gowun Dodum', sans-serif;\n    &:hover {\n        background-color: #ff7f9f;\n        color: white;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n\n    @media screen and (max-width: 711px) {\n        margin: 0 0 1rem 0;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #ea4335;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = process.env.REACT_APP_CLIENTURL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n    clientUrl = \"https://thereweather.space\"\n}\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    // console.log(url)\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] =\n        useState(\"아이디를 입력하세요..\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    //console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                //console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                //console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n\n    function kakaoLoginHandler() {\n        alert(\n            \"카카오 로그인시 원활한 접속을 위해 전체수신 동의 부탁드립니다:) \"\n        )\n        const scope = \"profile_image, gender, profile_nickname, account_email\"\n        Kakao.Auth.login({\n            scope,\n            success: function (response) {\n                //console.log(response);\n                //Kakao.Auth.setAccessToken(response.access_token)\n                //console.log(`get accesstoken: ${Kakao.Auth.getAccessToken()}`)\n                //let ACCESS_TOKEN = Kakao.Auth.getAccessToken();\n                //사용자 정보가져오기\n                Kakao.API.request({\n                    url: \"/v2/user/me\",\n                    success: function ({ kakao_account }) {\n                        //console.log(kakao_account)\n                        const { email, profile } = kakao_account\n                        let gender = kakao_account.gender !== \"female\" ? 1 : 2\n                        //console.log(gender)\n                        axios({\n                            url: url + \"/kakaologin\",\n                            method: \"post\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                authorization: response.access_token,\n                            },\n                            data: {\n                                user_id: email,\n                                nickName: profile.nickname,\n                                gender: gender,\n                                user_Photo: profile.profile_image_url,\n                            },\n                        })\n                            .then((res) => {\n                                // console.log(res)\n                                localStorage.setItem(\n                                    \"ATOKEN\",\n                                    JSON.stringify(res.data.data.accessToken)\n                                )\n                                dispatch(changeIsLogin(true))\n                                alert(\"환영합니다\")\n                                history.push(\"/\")\n                            })\n                            .catch((err) => {\n                                console.log(err)\n                                alert(\"카카오 로그인 에러\")\n                            })\n                    },\n                })\n            },\n            fail: function (error) {\n                console.log(error)\n            },\n        })\n    }\n\n    //아이디 찾기\n    function findIdBtn() {\n        //   console.log(\"아이디 찾기 버튼\")\n        history.push(\"/findaccount\")\n    }\n\n    //비밀번호 찾기\n    function findPwBtn() {\n        console.log(\"비밀번호 찾기 버튼\")\n        history.push(\"/findpassword\")\n    }\n\n    //회원가입 바로가기\n    function signupShortcut() {\n        history.push(\"/signup\")\n    }\n\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        //console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        //console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        //console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n    const [guestuserInfo, setGuestUserInfo] = useState({\n        user_id: \"guest\",\n        password: \"!23qwe\",\n        nickName: \"게스트\",\n        gender: \"1\",\n        location: \"제주특별자치도 서귀포시 가가로 14\",\n        user_photo: `${url.slice(0, -3)}/image/blankProfile.png`,\n        email: \"guestmail@naver.com\",\n    })\n    function guestloginButtonHandler() {\n        axios({\n            url: url + \"/users/signup\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: guestuserInfo,\n            \"Content-Type\": \"application/json\",\n            withCredentials: true,\n        }).then((res) => {\n            axios({\n                url: url + \"/login\",\n                method: \"post\",\n                data: {\n                    user_id: guestuserInfo.user_id,\n                    password: guestuserInfo.password,\n                },\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n                .then((res) => {\n                    //console.log(res.data.data)\n                    localStorage.setItem(\n                        \"ATOKEN\",\n                        JSON.stringify(res.data.data.accessToken)\n                    )\n                    dispatch(changeIsLogin(true))\n                    alert(\"환영합니다\")\n                    history.push(\"/\")\n                })\n                .catch((err) => {\n                    // setErrMessage(\"아이디 또는 비밀번호를 확인하세요\")\n                })\n        })\n    }\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <div className=\"Login--center\">\n                        <LoginValidationListBox>\n                            <li>\n                                <h2>로그인</h2>\n                                <LoginStyledArticle className=\"id\">\n                                    <LoginInputAndTitle className=\"inputIdSection\">\n                                        <h3>아이디</h3>\n                                        <LoginInputText\n                                            type=\"text\"\n                                            name=\"idInput\"\n                                            placeholder=\"아이디를 입력하세요\"\n                                            value={idInput}\n                                            onChange={loginidOnChangeHanlder}\n                                        />\n                                    </LoginInputAndTitle>\n                                </LoginStyledArticle>\n                            </li>\n                            <li>\n                                <p>{idInputMessage}</p>\n                            </li>\n\n                            <li>\n                                <LoginStyledArticle className=\"password\">\n                                    <LoginInputAndTitle className=\"inputPwSection\">\n                                        <h3>비밀번호</h3>\n                                        <LoginInputText\n                                            type=\"password\"\n                                            name=\"pwInput\"\n                                            placeholder=\"비밀번호를 입력하세요\"\n                                            value={pwInput}\n                                            onChange={pwOnChangeHandler}\n                                        />\n                                    </LoginInputAndTitle>\n                                </LoginStyledArticle>\n                            </li>\n                            <li>\n                                <p>{pwInputMessage}</p>\n                            </li>\n                        </LoginValidationListBox>\n\n                        <FindBtn>\n                            <span onClick={findIdBtn}>아이디 찾기 | </span>\n                            <span onClick={findPwBtn}>비밀번호 찾기 | </span>\n                            <span onClick={signupShortcut}>회원가입</span>\n                        </FindBtn>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n                        <LoginButton onClick={guestloginButtonHandler}>\n                            게스트로그인\n                        </LoginButton>\n                        <div>\n                            {/* 구글 소셜로그인 */}\n                            <button onClick={googleLoginButtonHandler}>\n                                <img src={googleIcon}></img>\n                            </button>\n                            {/* 카카오 소셜로그인 */}\n                            <button onClick={kakaoLoginHandler}>\n                                <img src={kakaoIcon}></img>\n                            </button>\n                        </div>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","\nimport styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport axios from \"axios\"\nimport { changeUserPw } from \"../actions/index\"\n\n\n\nconst Outer = styled.section`\n  position: relative;\n  width: 100vw;\n  min-height: calc(100vh - 125px - 70px);\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    text-align: center;\n    font-size: 1.8rem;\n    font-weight: bold;\n    margin-bottom: 2rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    min-height: calc(100vh - 125px);\n  }\n`;\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst InputAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // margin: .5rem;\n\n  h3 {\n    font-size: 1.3rem;\n    margin: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst InputText = styled.input`\n  min-width: 150px;\n  width: 30vw;\n  font-size: 1.2rem;\n  padding: 0.5rem;\n`;\n\nconst ValidationListBox = styled.ul`\n  list-style: none;\n  padding: 0 0 1rem 0;\n  font-size: 1rem;\n`;\n\nconst StyledLi = styled.li`\n  height: 1.2rem;\n  padding: 0.3rem 2rem;\n  font-size: 0.9rem;\n  // font-weight: bold;\n  color: ${(props) =>\n    props.valid\n      ? `var(--font-validation-positive)`\n      : `var(--font-validation-negative)`};\n  font-weight: ${(props) => (props.valid ? `bold` : `null`)};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem auto;\n`;\n\nconst Button = styled.button`\n  width: 25vw;\n  min-width: 50px;\n  max-width: 200px;\n  margin: 0.5rem 1rem;\n  padding: 0.8rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  font-family: 'Gowun Dodum', sans-serif;\n  color: white;\n  /* background-color: ${(props) =>\n    props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)`}; */\n  border-radius: 1rem;\n  background-color: #fec0cb;\n  &:hover {\n    background-color: #ff7f9f;\n  }\n`;\n\n// const TextButton = styled.button`\n//   // align-self: flex-end;\n//   margin: 1rem 3rem;\n//   font-size: 1rem;\n//   color: grey;\n//   text-decoration: underline;\n// `;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function PasswordEdit() {\n  // const { password } = useSelector((state) => state.itemReducer)\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [curPwd, setCurPwd] = useState(\"\");\n  const [newPwd, setNewPwd] = useState(\"\");\n  const [curPwdInputWarning, setCurPwdInputWarning] =\n    useState(\"비밀번호를 입력해주세요.\");\n  const [newPwdInputWarning, setNewPwdInputWarning] = useState({\n    isNoInput: \"비밀번호를 입력해주세요.\",\n    isTooShort: \"6자 이상이어야 합니다.\",\n    isWrongType: \"숫자와 문자를 포함해야 합니다.\",\n  });\n  const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning;\n  const [isValid, setIsValid] = useState(\"\");\n\n  const validationReg =\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/g;\n  // 정규식 : 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n\n  const curInputHandler = (e) => {\n    setCurPwd((prev) => e.target.value);\n    // console.log(e.target.value)\n    if (e.target.value.length === 0) {\n      setCurPwdInputWarning((prev) => \"비밀번호를 입력해주세요.\");\n    } else {\n      setCurPwdInputWarning((prev) => \"\");\n    }\n  };\n\n  const newInputHandler = (e) => {\n    setNewPwd((prev) => e.target.value);\n\n    // 유효성 검사\n    if (e.target.value.length === 0) {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isNoInput: \"비밀번호를 입력해주세요.\" };\n      });\n    } else {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isNoInput: \"\" };\n      });\n    }\n\n    if (!validationReg.test(e.target.value)) {\n      setNewPwdInputWarning((prev) => {\n        return {\n          ...prev,\n          isWrongType: \"문자, 숫자, 특수문자가 모두 포함되어야 합니다.\",\n        };\n      });\n      setIsValid((prev) => \"\");\n    } else {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isWrongType: \"\" };\n      });\n      setIsValid((prev) => \"사용 가능합니다.\");\n    }\n\n    if (e.target.value.length < 6) {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isTooShort: \"6자 이상이어야 합니다.\" };\n      });\n    } else {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isTooShort: \"\" };\n      });\n    }\n  };\n\n  // 버튼 클릭 이벤트\n  const editButtonHandler = (e) => {\n    // e.prevntDefault()\n\n    let newPwdValid = validationReg.test(newPwd);\n    console.log(\"새 비밀번호 유효성 검사 결과\", newPwdValid);\n    // TODO\n    // 클라이언트 로컬스토리지에 있는 토큰을 찾아서\n    // 헤더에 담아서 서버에 전달\n    // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\")); //문자열벗긴 토큰\n    //console.log(token) //토큰찾음\n    axios({\n      url: url + \"/password\",\n      method: \"put\",\n      data: { password: newPwd },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      // console.log(res.data)\n      dispatch(changeUserPw(true));\n      history.push(\"/mypage\");\n    });\n  };\n\n  const cancelButtonHandler = (e) => {\n    console.log(\"취소 버튼 동작 확인\");\n    setCurPwd((prev) => \"\");\n    setNewPwd((prev) => \"\");\n    setIsValid((prev) => \"\");\n    // TODO 이전 페이지로\n    history.push(\"/home\");\n  };\n\n  // 탈퇴 모달에 붙은 함수\n  // const [ isModalOpen, setIsModalOpen ] = useState(false);\n  // const withdrawButtonHandler = (e) => {\n  //   console.log('탈퇴 버튼 동작확인');\n  //   setIsModalOpen(true);\n  // }\n\n  // const modalSelectList = [\n  //   [null, \"--탈퇴 이유 선택--\"],\n  //   [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n  //   [\"inconvenientDesign\", \"디자인이 불편함\"],\n  //   [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n  //   [\"etc\", \"기타\"]\n  // ];\n\n  // const [ modalSelected, setModalSelected ] = useState(\"\");\n  // const handleChangeSelect = (e) => {\n  //   setModalSelected(prev => e.target.value);\n  // }\n\n  // const modalCloseButtonHandler = (e) => {\n  //   console.log('모달 닫기 버튼 동작 확인');\n  //   setIsModalOpen(false);\n  // }\n\n  // const modalYesButtonHandler = (e) => {\n  //   console.log('모달 yes 버튼 동작 확인');\n  // }\n\n  // const modalNoButtonHandler = (e) => {\n  //   console.log('모달 no 버튼 동작 확인');\n  //   setIsModalOpen(false);\n  // }\n\n  return (\n    <Outer className=\"loginPageComponent\">\n      <h2>비밀번호 변경</h2>\n\n      <div className=\"Login--center\">\n        <StyledArticle className=\"id\">\n          <InputAndTitle className=\"inputCurPwdSection\">\n            <h3>현재 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"curPwd\"\n              placeholder=\"현재 비밀번호를 입력하세요\"\n              onChange={curInputHandler}\n              value={curPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"idValidationList\">\n            <StyledLi>{curPwdInputWarning}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n\n        <StyledArticle className=\"password\">\n          <InputAndTitle className=\"inputNewPwSection\">\n            <h3>새 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"newPwd\"\n              placeholder=\"비밀번호를 입력하세요\"\n              onChange={newInputHandler}\n              value={newPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"pwValidationList\">\n            <StyledLi valid>{isValid}</StyledLi>\n            <StyledLi>{isNoInput}</StyledLi>\n            <StyledLi>{isTooShort}</StyledLi>\n            <StyledLi>{isWrongType}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n      </div>\n\n      <Buttons className=\"login--buttons\">\n        <div>\n          <Button onClick={editButtonHandler} edit>\n            수정\n          </Button>\n          <Button onClick={cancelButtonHandler}>취소</Button>\n        </div>\n      </Buttons>\n\n      {/* <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton> */}\n\n      {/* {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      } */}\n    </Outer>\n  );\n}\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; //리액트에서 사용가능하게 해줌\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\"; //내가 사용할 아이콘을 불러오기\n\nconst True = styled.div`\n  border-radius: 20px;\n  display: block;\n  background-color: pink;\n  width: 500px;\n  height: 100px;\n  z-index: 999999;\n  position: fixed;\n  transform: translate(-50%, -50%);\n\n  left: 50%;\n  top: 50%;\n`;\nconst False = styled.div`\n  display: none;\n`;\nconst BackgroundView = styled.div`\n  // background-color: black;\n  width: 100vw;\n  height: 100vh;\n  z-index: 199;\n  position: fixed;\n  transform: translate(-50%, -50%);\n  // opacity: 0.8;\n  left: 50%;\n  top: 50%;\n`;\nconst FlexArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\nconst FlexArea2 = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst FlexArea3 = styled.div`\n  margin-top: 35px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst DivTag1 = styled.div`\n  font-size: 20px;\n`;\n\nconst BtnTag1 = styled.button`\n  font-size: 20px;\n\n  &:hover {\n    background-color: blue;\n    color: red;\n  }\n`;\n\nexport default function OneChoiceModal({\n  boolean,\n  message,\n  yesMessage,\n  alertFunc,\n}) {\n  console.log(boolean);\n  console.log(yesMessage);\n\n  return (\n    <>\n      {boolean ? (\n        <BackgroundView>\n          <True>\n            <FlexArea3>\n              <FlexArea>\n                <FlexArea2>\n                  <FontAwesomeIcon\n                    icon={faExclamationCircle}\n                    className=\"mr-3\"\n                    size=\"2x\"\n                  />\n                  <DivTag1>{message}</DivTag1>\n                </FlexArea2>\n                <BtnTag1 onClick={alertFunc}>{yesMessage}</BtnTag1>\n              </FlexArea>\n            </FlexArea3>\n          </True>\n        </BackgroundView>\n      ) : (\n        <False>안보임</False>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\nimport OneChoiceModal from \"../components/OneChoiceModal\"\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // margin: 0.5rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"pink\")};\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.google ? \"#EA4335\" : \"#2f6ecb\"}; */\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.google ? \"#EA4335\" : \"#2f6ecb\"}; */\n    border-radius: 1rem;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\nconst Button1 = styled.button`\n    width: 30vw;\n    min-width: 50px;\n    max-width: 80px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 0.8rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"pink\")};\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function SignUp() {\n    const dispatch = useDispatch()\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n        emailInput: \"\",\n        emailVaildCode: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력하세요..\",\n        pwInput: \"패스워드를 입력하세요.\",\n        nickNameInput: \"닉네임을 입력하세요.\",\n        emailInput: \"이메일을 입력하세요.\",\n        emailVaildCode: \"이메일 인증 코드 기입 후 인증하기 하세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력하세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색하세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${process.env.REACT_APP_CLIENTURL}/img/blankProfile.png`,\n    })\n    console.log(uploadedImg)\n    const [codeOn, setCodeOn] = useState(false)\n\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다..\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n    useEffect(() => {\n        //이메일 유효성검사\n        if (\n            inputSignUpData.emailInput.length >= 5 &&\n            inputSignUpData.emailInput.indexOf(\"@\") !== -1\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, emailInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailInput: \"이메일은 5글자 이상이며, @를 포함합니다.\",\n            })\n        }\n    }, [inputSignUpData.emailInput])\n    useEffect(() => {\n        //이메일인증 코드 유효성검사\n        if (inputSignUpData.emailVaildCode.length >= 1) {\n            setInputVaildMessage({ ...inputVaildMessage, emailVaildCode: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailVaildCode: \"코드를 기입하세요.\",\n            })\n        }\n    }, [inputSignUpData.emailVaildCode])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n    function emailSend() {\n        console.log(\"email 보내기\")\n        if (!inputVaildMessage.emailInput && !inputVaildMessage.idInput) {\n            console.log(\"정상수행가능\")\n            axios({\n                url: url + \"/users/auth\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                data: {\n                    temporary_id: inputSignUpData.idInput,\n                    email: inputSignUpData.emailInput,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 200) {\n                    alert(\"인증메일을 발송하였습니다\")\n                } else {\n                    alert(\"인증메일을 발송에 실패하였습니다\")\n                }\n            })\n        } else {\n            console.log(\"안되는곳\")\n            alert(\"아이디, 이메일을 기입하세요\")\n        }\n    }\n    function codeSend() {\n        console.log(\"code 보내기\")\n        axios({\n            url: url + \"/users/auth\",\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                temporary_id: inputSignUpData.idInput,\n                email: inputSignUpData.emailInput,\n                code: inputSignUpData.emailVaildCode,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            if (res.data) {\n                setCodeOn(res.data)\n                alert(\"이메일 인증 완료 되었습니다.\")\n            } else {\n                alert(\"이메일 인증에 실패 하였습니다.\")\n            }\n        })\n    }\n    console.log(userRoadAddress)\n    function signupFunc(e) {\n        //console.log(\"프론트 콘솔:회원가입 입장\");\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\" ||\n            codeOn === false\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                    email: inputSignUpData.emailInput,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n    function duplicationTest() {\n        console.log(\"중복검사버튼\")\n        axios({\n            url: url + \"/users/duplicationtest\",\n            method: \"post\",\n            data: {\n                user_id: inputSignUpData.idInput,\n            },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }) //\n            .then((res) => {\n                if (res.status === 212) {\n                    setalertState(true)\n                } else {\n                    setInputSignUpData({\n                        ...inputSignUpData,\n                        idInput: \"\",\n                    })\n                    setalertState2(true)\n                }\n            })\n    }\n    const [alertState, setalertState] = useState(false)\n    const [alertState2, setalertState2] = useState(false)\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            value={inputSignUpData.idInput}\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                        <Button1 onClick={duplicationTest}>중복검사</Button1>\n                        <OneChoiceModal\n                            boolean={alertState}\n                            message={\"아무도 사용하고 있지 않은 아이디 입니다.\"}\n                            yesMessage={\"사용\"}\n                            alertFunc={() => setalertState(false)}\n                        ></OneChoiceModal>\n                        <OneChoiceModal\n                            boolean={alertState2}\n                            message={\"이미 사용되고 있는 아이디 입니다.\"}\n                            yesMessage={\"다시쓰기\"}\n                            alertFunc={() => setalertState2(false)}\n                        ></OneChoiceModal>\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailInput\"\n                            placeholder=\"ex) example@exammail.com\"\n                            onChange={idOnChangeHanlder(\"emailInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailInput}</li>\n                        <Buttons className=\"SignUp--buttons\">\n                            <Button onClick={emailSend}>인증메일 보내기</Button>\n                        </Buttons>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증 코드</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailVaildCode\"\n                            placeholder=\"인증코드\"\n                            onChange={idOnChangeHanlder(\"emailVaildCode\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailVaildCode}</li>\n                    </ValidationListBox>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={codeSend}>코드 인증하기</Button>\n                    </Buttons>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { userPosts, updatePostId, curPageAction } from \"../actions/index\";\n// UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE\nimport GoBackButton from \"../components/GoBackButton\";\nimport Pagination from \"../components/Pagination\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; //리액트에서 사용가능하게 해줌\nimport {\n  faAngleLeft,\n  faAngleRight,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n} from \"@fortawesome/free-solid-svg-icons\"; //내가 사용할 아이콘을 불러오기\n\nconst Outer = styled.div`\n  position: relative;\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  min-height: 100vh;\n  padding: 2rem;\n\n  h2 {\n    align-self: flex-start;\n    margin: 2rem 0;\n    font-family: 'Gowun Dodum', sans-serif;\n  }\n\n  button {\n    font-size: 1.5rem;\n    font-family: 'Gowun Dodum', sans-serif;\n  }\n\n  @media screen and (min-width: 1500px) {\n    // 제일 큰 사이즈\n    padding-left: 3vh;\n    padding-right: 3vh;\n  }\n  @media screen and (max-width: 375px) {\n    padding-top: 2vh;\n  }\n  @media screen and (max-width: 1081px) {\n    // 1080이하\n  }\n`;\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n  // border: 1px solid blue;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 300px 300px;\n  grid-gap: 1.5rem;\n  min-height: 70vh;\n  margin: 1rem;\n  p {\n    font-size: 28px;\n    font-family: 'Gowun Dodum', sans-serif;\n  }\n\n  .postItem {\n    background-color: rgba(255, 255, 255, 0.6);\n    display: flex;\n  }\n  .postItem:hover {\n    border: 1px solid #d5d8dc;\n  }\n  @media screen and (min-width: 2100px) {\n    height: 50vh;\n    width: 300px;\n  }\n  @media screen and (max-width: 1081px) {\n    padding-left: 5vw;\n    padding-right: 5vw;\n    height: auto;\n    grid-template-columns: 1fr 1fr;\n  }\n  @media screen and (max-width: 600px) {\n    padding-left: 2vw;\n    padding-right: 2vw;\n    p {\n      font-size: 20px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: auto;\n  }\n`;\nconst FlexArea = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst FlexArea2 = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst FlexArea3 = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst PhotoArea = styled.div`\n  width: 300px;\n  height: 300px;\n`;\nconst FSArea = styled.div`\n  margin: 5px;\n  & :hover {\n    color: red;\n  }\n`;\n\n// 게시물 사진\nconst PostImg = styled.img`\n  // border: 1px solid red;\n  width: 100%;\n  height: 100%;\n  background-color: #ffffff;\n\n  @media screen and (min-width: 2100px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    // 이미지 크기 수정 필요\n  }\n`;\n\n//   @media screen and (max-width: 1081px) {\n//     padding: 1vh 2vw 2vh 2vw;\n//     font-size: 1.5rem;\n//   }\n//   @media screen and (max-width: 375px) {\n//     font-size: 1rem;\n//     padding-left: 3vw;\n//   }\n// `\n\n// 페이지네이션\nconst Page = styled.div`\n  display: flex;\n  justify-content: center;\n  li {\n    /* margin: 3px; */\n    list-style: none;\n    padding: 3px;\n    /* border: 1px solid red; */\n  }\n  button {\n    margin: 0 1vw;\n    padding: 1rem 1.5rem;\n    border-radius: 50%;\n  }\n  button:focus {\n    background-color: var(--modal-bg-color);\n  }\n  #prev,\n  #next {\n    background: none;\n  }\n  @media screen and (max-width: 1081px) {\n    margin-top: 10rem;\n    padding-bottom: 5rem;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 3rem;\n    padding-bottom: 3rem;\n    li {\n      /* margin: 0 1vw; */\n      /* margin: 1vh; */\n      padding: 0;\n    }\n    button {\n      /* margin: 0 1.5vw; */\n      font-size: 1.5rem;\n      margin: 0;\n      padding: 1px 7px;\n    }\n  }\n`;\nconst CurPage = styled.button`\n  color: pink;\n  margin: 5px;\n\n  // width: 30px;\n`;\nconst Button1 = styled.button`\n  margin: 5px;\n  color: black;\n  &: hover {\n    margin: 5px;\n\n    color: red;\n  }\n  // width: 30px;\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function MyPost() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    start,\n    end,\n    current,\n    isLogin,\n    userInfo,\n    postInfo,\n    readPostId,\n    curPage,\n  } = useSelector((state) => state.itemReducer);\n  console.log(curPage);\n  const [listLength, setListLength] = useState([]);\n  console.log(listLength);\n  //배열의 총 길이만 담고있는 변수\n  const [currentPosts, setcurrentPosts] = useState([]);\n  //현재 포스트를 모두 담고 있는 변수\n  //   const [curPage, setCurPage] = useState(1);\n  //현재 페이지\n  const [dividNum, setDividNum] = useState(6);\n  //한페이지에 보여줄 포스트의 개수\n  console.log(userInfo);\n  useEffect(() => {\n    axios({\n      url:\n        url +\n        `/mypost?searchID=${userInfo.user_id}&page=${curPage}&capa=${dividNum}`,\n      method: \"get\",\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      setListLength(res.data.length);\n      setcurrentPosts(res.data.data);\n      dispatch(userPosts(res.data));\n    });\n  }, [userInfo]);\n\n  useEffect(() => {\n    axios({\n      url:\n        url +\n        `/mypost?searchID=${userInfo.user_id}&page=${curPage}&capa=${dividNum}`,\n      method: \"get\",\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      setListLength(res.data.length);\n      setcurrentPosts(res.data.data);\n      dispatch(userPosts(res.data));\n    });\n  }, [curPage]);\n\n  // // 페이지네이션 시작\n  // const [currentPage, setCurrentPage] = useState(1)\n  // // 1페이지로 시작\n  // const itemsPerPage = 8\n  // // 한 페이지에 8개씩 보여준다\n  // const lastIdx = currentPage * itemsPerPage\n  // const firstIdx = lastIdx - itemsPerPage\n  // const slicedData = (dataArr) => {\n  //     return dataArr.slice(firstIdx, lastIdx)\n  // }\n  // // 페이지네이션 끝\n\n  //게시물의 총 수량\n\n  // 총 페이지 수 = Math.ceil(전체 개수/ 한 페이지에 나타낼 데이터 수);\n\n  // 화면에 보여질 페이지 그룹 = Math.ceil(현재 페이지/ 한 화면에 나타낼 페이지 수);\n  // const curPage = Math.ceil(1 / 10)\n  // 화면에 보여질 첫번째 페이지\n  // 화면에 보여질 마지막 페이지\n\n  // 게시물사진 클릭했을 때\n  const postClickHandler = (e) => {\n    console.log(\"클릭은되나\");\n    let elem = e.target;\n    while (!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if (!elem.classList.contains(\"myPostList\")) {\n        break;\n      }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  return (\n    <Outer className=\"MyPostPage\">\n      <div>\n        <GoBackButton className=\"gobackButton\" />\n        <h2>내가 쓴 게시물</h2>\n      </div>\n\n      {/* <GridArea className=\"myPostList\">\n                {slicedData(currentPosts).map((el) => (\n                    <div\n                        className={[\"postItem\"]}\n                        id={el.id}\n                        onClick={postClickHandler}\n                        key={el.id}\n                    >\n                        <PostImg src={el.post_photo} alt=\"posts\" />\n                    </div>\n                ))}\n            </GridArea> */}\n      <FlexArea>\n        <FlexArea3>\n          {currentPosts.slice(0, 3).map((el) => (\n            <PhotoArea\n              className={[\"postItem\"]}\n              id={el.id}\n              key={el.id}\n              onClick={postClickHandler}\n            >\n              <PostImg src={el.post_photo} alt=\"posts\" />\n            </PhotoArea>\n          ))}\n        </FlexArea3>\n        <FlexArea3>\n          {currentPosts.slice(3, 7).map((el) => (\n            <PhotoArea\n              // className={[\"postItem\"]}\n              className={[\"item\", \"postItem\"]}\n              id={el.id}\n              key={el.id}\n              onClick={postClickHandler}\n            >\n              <PostImg src={el.post_photo} alt=\"posts\" />\n            </PhotoArea>\n          ))}\n        </FlexArea3>\n      </FlexArea>\n      <FlexArea2>\n        <div onClick={() => dispatch(curPageAction(1))}>\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleDoubleLeft} size=\"2x\" />\n          </FSArea>\n        </div>\n        <div\n          onClick={() => {\n            if (curPage !== 1) {\n              dispatch(curPageAction(curPage - 1));\n            }\n          }}\n        >\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleLeft} size=\"2x\" />\n          </FSArea>\n        </div>\n\n        {listLength.map((number, idx) =>\n          idx + 1 === curPage ? (\n            <CurPage onClick={() => dispatch(curPageAction(idx + 1))}>\n              {idx + 1}\n            </CurPage>\n          ) : (\n            <Button1 onClick={() => dispatch(curPageAction(idx + 1))}>\n              {idx + 1}\n            </Button1>\n          )\n        )}\n\n        <div\n          onClick={() => {\n            if (curPage !== listLength.length) {\n              dispatch(curPageAction(curPage + 1));\n            }\n          }}\n        >\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleRight} size=\"2x\" />\n          </FSArea>\n        </div>\n        <div onClick={() => dispatch(curPageAction(listLength.length))}>\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleDoubleRight} size=\"2x\" />\n          </FSArea>\n        </div>\n      </FlexArea2>\n    </Outer>\n  );\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    /* background-color: var(--button-bg-normal); */\n    background-color: #fec0cb;\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n    border: 0;\n    outline: 0;\n    color: white;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        // filePath: `http://localhost:3000/img/blankPost.png`,\n        filePath: `${process.env.REACT_APP_CLIENTURL}/img/blankPost.png`,\n    })\n\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴바지\"],\n        [\"짧은치마\", \"짧은치마\"],\n        [\"긴치마\", \"긴치마\"]\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        //console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        //console.log(userInfo.user_id)\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                // headers: {\n                //     // accept: \"application/json\",\n                // },\n                data: {\n                    user_id: userInfo.user_id,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    \n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","// 스크롤 탑 버튼\nimport React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\n\nconst Button = styled.div`\n    position: fixed;\n    z-index: 100;\n    display: flex;\n    justify-content: flex-end;\n    bottom: 0;\n    transition: all 0.3s;\n    display: none;\n    \n    img {\n        width: 3rem;\n        height: 3rem;\n        margin: 0 auto;\n        opacity: 0.7;\n        background-color: var(--page-bg-color);\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: block;\n        height: 120px;\n        right: 47%;\n    }\n    @media screen and (max-width: 761px) {\n        right: 46%;\n    }\n    @media screen and (max-width: 375px) {\n        height: 110px;\n        right: 42%;\n    }\n`\n\nexport default function TopButton() {\n    // top button\n    const [ScrollY, setScrollY] = useState(0)\n    const [btnStatus, setBtnStatus] = useState(false) // 버튼 상태\n\n    // console.log(window.pageYOffset)\n    // console.log(btnStatus)\n\n    const handleFollow = () => {\n        setScrollY(window.scrollY)\n        if (ScrollY > 200) {\n            // 200 이상이면 버튼이 보임\n            setBtnStatus(true)\n        } else {\n            // 200 이하일때 버튼이 사라짐\n            setBtnStatus(false)\n        }\n    }\n\n    // 클릭시 위로 올라감\n    const scrollToTop = () => {\n        // e.preventDefault() // 새로고침 방지\n        window.scrollTo({ top: 0, behavior: \"smooth\" }) // 위로 올라감\n        setScrollY(0) // 올라가면 다시 0으로 초기화\n        setBtnStatus(false) // 버튼 다시 사라짐\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleFollow)\n        return () => {\n            window.removeEventListener(\"scroll\", handleFollow)\n        }\n    })\n\n    return (\n        <Button>\n            {btnStatus ? (\n                <img\n                    src={`${process.env.PUBLIC_URL}img/scroll-up2.png`}\n                    alt=\"top\"\n                    onClick={scrollToTop}\n                />\n            ) : null}\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Outer = styled.div`\n  width: 100%;\n  margin: 1rem 0;\n  padding-bottom: 1rem;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #E0E0E0;\n`\nconst LeftDiv = styled.div`\n  text-align: left;\n  .userid {\n    font-size: 1.1rem;\n  }\n  .comment {\n    font-size: 1rem;\n  }\n  .date {\n    font-size: 0.8rem;\n    color: #777;\n  }\n`\nconst RightDiv = styled.div`\n  display: block;\n`\nconst DeleteBtn = styled.button`\n  display: block;\n  border: 1px solid black;\n  font-family: 'Gowun Dodum', sans-serif;\n`\nconst LikeBtn = styled.button`\n  display: block;\n  margin-top: 0.3rem;\n  border: 1px solid black;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\n// 아이디, 댓글내용, 날짜 / 좋아요하트, 삭제버튼\nexport default function Comment({content, commentDelete, userInfo}) {\n  // console.log(\"댓글작성한 유저\", content);\n  const [click, setClick] = useState(false);\n  // const [likeCount, setLikeCount] = useState(0);\n  let date = new Date(`${content.createdAt}`)\n  let dateForm = `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}. ${date.getHours()}:${date.getMinutes()}`\n  // console.log(\"date format : \", dateForm);\n  // console.log(\"현재 접속중인유저\", userInfo);\n\n  // 댓글 좋아요 클릭\n  const commentLike = () => {\n    axios({\n      url: url + \"/likecomment\",\n      method: \"post\",\n      data: {\n        user_id: content.comment_user_id,\n        comment_id: content.id,\n        post_id: content.post_id,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    })\n    .then((res) => {\n      // console.log(res.data)\n      setClick((data) => !data)\n    })\n  }\n\n  useEffect(() => {    \n    axios({\n      url: url + \"/readlike\",\n      method: \"post\",\n      data:{\n        user_id: content.comment_user_id,\n        comment_id: content.id,\n        post_id: content.post_id\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    })\n    .then((res) => {\n      // console.log(res.data)  \n      if (res.data !== \"댓글 좋아요 없음\") {\n        setClick(!click)\n      }\n    })\n  }, [])\n\n\n\n  return (\n    <Outer>\n      <LeftDiv>\n        <p className=\"userid\">{content.comment_user_id}</p>\n        <p className=\"comment\">{content.comment_content}</p>\n        <p className=\"date\">{dateForm}</p>\n      </LeftDiv>\n\n      <RightDiv>\n        <DeleteBtn onClick={() => commentDelete(content.id)}>삭제</DeleteBtn>\n        <LikeBtn \n          onClick={commentLike}\n          // onClick={() => commentLike(content.id)}\n        >\n          {\n            click? \n              <FontAwesomeIcon \n              icon={faHeart}\n              className=\"heart\"\n              color=\"red\"\n              /> :\n              <FontAwesomeIcon \n              icon={faHeart}\n              className=\"heart\"\n              color=\"#aaa\"\n              />\n          }\n          <span>{click}</span>\n        </LikeBtn>\n      </RightDiv>\n    </Outer>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Bookmark } from \"../components/BookMarks\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\nimport TopButton from \"../components/TopButton\";\nimport Comment from \"../components/PostRead-comment\";\nimport { changeUser } from \"../actions/index\";\nimport kakaoIcon from \"../../src/LoginIcon/kakaoIcon.png\";\nconst { Kakao } = window;\n\nconst Outer = styled.div`\n  width: 100%;\n  background-color: var(--page-bg-color);\n\n  // 오늘의 코디\n  .todayCodi {\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    color: #2e2e2e;\n    padding-top: 2vh;\n    font-size: 1.5rem;\n  }\n\n  // 잘못된 접근입니다.\n  h2.warning--nodata {\n    color: #c60239;\n    font-size: 3rem;\n    margin: 0 1rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    .todayCodi {\n      margin-top: 2vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n  }\n`;\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`;\n// 제목\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 960px;\n  text-align: center;\n  margin: 0 auto;\n\n  span {\n    font-size: 2rem;\n  }\n \n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 700px) {\n    span {\n      font-size: 1.5rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%; // 추가\n    span {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst IconDiv = styled.div``\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n`;\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap;\n\n  .profileLeft {\n    display: flex;\n    align-items: center;\n  }\n  span {\n    margin-left: 1vh;\n  }\n  span.date {\n    font-size: 0.8rem;\n    color: #707b7c;\n  }\n\n  .profileRight {\n    border: 1px solid red;\n    display: block;\n  }\n  .location {\n    font-size: 1.2rem;\n  }\n\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 768px) {\n    .location {\n      font-size: 1rem;\n    }\n  }\n  @media screen and (max-width: 594px) {\n    .location {\n      margin-top: 1.2vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span {\n      font-size: 0.5rem;\n    }\n    span.date {\n      font-size: 0.5rem;\n      color: #707b7c;\n    }\n    .location {\n      margin-top: 0;\n      font-size: 0.5rem;\n    }\n  }\n`;\n\nconst SelectIcon = styled.div`\n  width: 100%;\n  ul {\n    list-style: none;\n\n  }\n  li {\n    color: #444444;\n    text-align: center;\n    padding: 0.3rem 0.5rem;\n    vertical-align: middle;\n  }\n  li:hover {\n    background-color: #ffbfcb;\n  }\n  li > img {\n    width: 1rem;\n    height: 1rem;\n    vertical-align: middle;\n  }\n\n  .selectBtn {\n    width: 1.4rem;\n    height: 1.6rem;\n    vertical-align: middle;\n    float: right;\n\n    .selectIcon {\n      width: 100%;\n      height: 100%;\n      filter: opacity(.5) drop-shadow(0 0 0 #c4c4c4);\n    }\n  }\n  .menu {\n    width: 100px;\n    float: right;\n    background: #ffffff;\n    border-radius: 5px;\n  }\n  .menu.active {\n    transform: translateY(0);\n    border: 1px solid #aaa;\n  }\n  .menu.inactive {\n    transform: translateY(0);\n    display: none;\n  }\n`\n\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`;\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: auto;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: auto;\n  }\n`;\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  margin: 3rem auto;\n  margin-bottom: 2vh;\n  text-align: center;\n\n  p {\n    font-size: 1.5rem;\n    margin-bottom: 0.5rem;\n  }\n  img {\n    width: 5rem;\n    align-items: center;\n    margin: 0 1rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n\n  }\n  @media screen and (max-width: 769px) {\n    img {\n      width: 3rem;\n      margin: 0 0.5rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    margin-bottom: 3vh;\n  }\n`;\n\nconst Icon = styled.img`\n\n  @media screen and (max-width: 1081px) {\n    width: 3rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n  }\n`;\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  margin-top: 1rem;\n  margin-bottom: 3vh;\n\n  .warning {\n    display: none;\n  }\n  & p.warning {\n    font-size: 0.9rem;\n    width: 6rem;\n    height: 6rem;\n    text-align: center;\n  }\n\n  img {\n    width: 5rem;\n    height: auto;\n    margin: 0 1rem;\n    filter: opacity(.5) drop-shadow(0 0 0 #aaa);\n  }\n\n  @media screen and (max-width: 769px) {\n    img {\n      width: 3rem;\n      margin: 0 0.5rem;\n    }\n    \n  }\n  @media screen and (max-width: 375px) {\n    width: 50vw;\n  }\n`;\n\n// 게시물 내용\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n\n  p {\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p {\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`;\n\n// 댓글\nconst CommentSection = styled.div`\n  height: auto;\n  width: 100%;\n  text-align: center;\n\n  input {\n    height: 2rem;\n    width: 70%;\n    margin-right: 1rem;\n  }\n  button {\n    height: 2rem;\n    width: 3rem;\n  }\n  @media screen and (max-width: 1081px) {\n    padding-bottom: 5rem;\n  }\n`;\n// 댓글작성\nconst PostComment = styled.div`\n  margin-bottom: 2rem;\n  button {\n    border: 1px solid black;\n    font-family: 'Gowun Dodum', sans-serif;\n  }\n`;\n// 댓글목록\nconst CommentList = styled.ul`\n  padding: 0 2rem;\n  @media screen and (max-width: 769px) {\n    padding: 0 1rem;\n  }\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function PostRead() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { readPostId, userInfo, postInfo } = useSelector(\n    (state) => state.itemReducer\n  );\n\n  console.log(\"현재 접속한 유저\",userInfo) //현재접속한 유저\n  console.log(\"포스트번호 : \",readPostId) //포스트번호\n  console.log(postInfo) //본인것만 보임\n  const postIds = Number(readPostId);\n  console.log(postIds)\n\n  // postData state 변수\n  const [postData, setPostData] = useState({\n    id: null,\n    post_title: \"\",\n    user_id: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n    xLocation: \"\",\n    yLocation: \"\",\n    post_photo: \"\",\n    weather: \"\",\n    wind: \"\",\n    temp: \"\",\n    top_id: \"\",\n    bottom_id: \"\",\n    post_content: \"\",\n    address: \"\",\n  });\n  const [noIdWarning, setNoIdWarning] = useState(\"\");\n  \n  // 삭제, 수정, 공유하기 select list\n  const [selectList, setSelectList] = useState(false);\n  const selectListHandle = () => {\n    if(selectList === false) {\n      setSelectList(true);\n    }else{\n      setSelectList(false);\n    }\n  }\n\n  // 날짜 처리\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    let hourAndMin = dateObject.toLocaleTimeString(\"en-US\", {\n      hour12: false,\n    });\n    hourAndMin = hourAndMin.slice(0, -3);\n\n    return `${dateOnly} ${hourAndMin}`;\n  };\n\n  let currentPostId = 0; // post id 저장\n  // 글 불러오기\n  useEffect(() => {\n    //console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n    //auth할차례\n    if (localStorage.getItem(\"ATOKEN\")) {\n      axios({\n        url: url + \"/users/auth\",\n        method: \"get\",\n        headers: {\n          authorization: `token ${JSON.parse(localStorage.getItem(\"ATOKEN\"))}`,\n        },\n      }).then((res) => {\n        //console.log(res.data.data)\n        dispatch(changeUser(res.data.data));\n\n        axios({\n          url: url + \"/readbookmark\",\n          method: \"post\",\n          data: {\n            user_id: res.data.data.id,\n            post_id: postIds,\n          },\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }).then((res) => {\n          //console.log(res.data)\n          if (res.data !== \"북마크없음\") {\n            setBookmarked(!bookmarked);\n          }\n        });\n      });\n    }\n    //////////////////\n    function getOnePost(postId) {\n      axios\n        .get(`${url}/readpost`, {\n          headers: { \"Content-Type\": \"application/json\" },\n          params: { id: postId },\n          withCredentials: true,\n        })\n        .then((res) => {\n          // console.log(\"글 불러오기 : \",res.data)\n          return setPostData((prev) => res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n\n    let id;\n    // console.log(history.location.state);\n    if (history.location.state) {\n      id = history.location.state.postId;\n    } else {\n      id = readPostId;\n    }\n\n    if (!id) {\n      //console.log(\"**postread: id가 없습니다**\")\n      setNoIdWarning((prev) => \"잘못된 접근입니다.\");\n    } else {\n      getOnePost(id);\n      currentPostId = id;\n    }\n\n    // console.log(\"글 불러오기 id : \", id);\n    // console.log(\"currentPostId : \", currentPostId);\n    ////////////////////////\n  }, []);\n\n  useEffect(() => {}, []);\n\n  // 북마크 상태\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  // 게시물 수정\n  const [edit, setEdit] = useState(false);\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false);\n\n  // 게시물 수정\n  const editPost = () => {\n    //console.log(\"수정버튼동작확인\")\n    setEdit(true);\n  };\n\n  // 게시물 삭제\n  const deletePost = (e) => {\n    //console.log(\"삭제버튼동작확인\")\n    setRemovePost(true);\n  };\n\n  //게시물 수정 yes버튼\n  const editModalYes = () => {\n    axios({\n      url: url + \"/editpost\",\n      method: \"put\",\n      data: {\n        user_id: userInfo.user_id,\n        post_id: postIds,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      alert(res.data);\n      if (res.data === \"게시물의 작성자가 아닙니다.\") {\n        history.push(\"/mypage\");\n      } else {\n        history.push(\"/editpost\");\n      }\n    });\n    setEdit(false);\n  };\n\n  //게시물 삭제 yes버튼\n  const removeModalYes = () => {\n    // console.log('삭제완료')\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    //console.log(token)\n    axios({\n      url: url + \"/deletepost\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      data: { post_id: postIds },\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      alert(res.data);\n      // alert(\"삭제 완료\")\n      history.push(\"/mypage\");\n    });\n    setRemovePost(false);\n  };\n\n  const modalNoButtonHandler = () => {\n    setRemovePost(false);\n    setEdit(false);\n  };\n\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false);\n    setEdit(false);\n  };\n\n  const bookmarkHandler = (e) => {\n    //console.log(\"글 읽기 - 북마크 버튼 동작 확인\")\n    axios({\n      url: url + \"/bookmark\",\n      method: \"post\",\n      data: { user_id: userInfo.id, post_id: postIds },\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      setBookmarked((prev) => !prev);\n    });\n  };\n\n  // 처음 댓글목록 불러오기\n  useEffect(() => {\n    getCommentList();\n  }, []);\n\n  // 댓글작성, 입력부분 초기화\n  const [commentMsg, setCommentMsg] = useState(null);\n  const [commentList, setCommentList] = useState([]);\n\n  const commentBtnClick = () => {\n    if (commentMsg === null) {\n      alert(\"댓글을 입력해주세요.\");\n    } else {\n      axios({\n        url: url + \"/sendcomment\",\n        method: \"post\",\n        data: {\n          post_id: postData.id,\n          comment_user_id: userInfo.user_id,\n          comment_content: commentMsg,\n        },\n        withCredentials: true,\n      }).then((res) => {\n        console.log(\"res.data : \",res.data);\n        getCommentList();\n        window.location.replace(\"/readpost\");\n\n      });\n    }\n  };\n\n  // 댓글목록 불러오기\n  function getCommentList() {\n    axios({\n      url: url + \"/commentlist\",\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"get\",\n      params: {\n        post_id: currentPostId,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      setCommentList(res.data);\n    });\n  }\n  const inputHandle = (e) => {\n    setCommentMsg(e.target.value);\n  };\n\n  // 댓글삭제\n  const commentDelete = (commentId) => {\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    axios({\n      url: url + \"/deletecomment\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      data: {\n        comment_id: commentId, // 댓글 아이디\n      },\n      withCredentials: true,\n    }).then((res) => {\n      window.location.replace(\"/readpost\");\n    });\n  };\n\n  useEffect(() => {}, []);\n  \n  //카카오 공유 \n  const shareKakao = () => {\n      Kakao.Link.sendDefault({\n        objectType: \"feed\",\n        content: {\n          title: postData.post_title,\n          description: \"거기 날씨\",\n          imageUrl: postData.post_photo,\n          link:{\n            mobileWebUrl: 'https://thereweather.space/first',\n            androidExecutionParams: 'test',\n          },\n        },\n        buttons: [\n          {\n            title: '거기날씨로 이동',\n            link: {\n              mobileWebUrl: 'https://thereweather.space/first',\n            },\n          },\n        ]\n      })\n  }\n\n\n  return (\n    <Outer>\n      {noIdWarning.length !== 0 ? (\n        <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n      ) : (\n        \"\"\n      )}\n      <TopButton />\n      <GoBackButton />\n      <PostHeader className=\"postHeader\">\n        <Title className=\"title\">\n          <span>{postData.post_title}</span>\n        <IconDiv>\n          <BookmarkIcon\n            bookmarkHandler={bookmarkHandler}\n            color={bookmarked ? \"#3b5fd9\" : \"#aaa\"}\n          />\n        </IconDiv>\n        </Title>\n\n        <Profile className=\"userProfile\">\n          <div className=\"profileLeft\">\n            <ProfileImg src={postData.user_Photo} />\n            <span className=\"nickName\">{postData.nickName}</span>\n            <span className=\"date\">{formatDate(postData.updatedAt)}</span>\n          </div>\n\n          <SelectIcon>\n            <span className=\"location\">{postData.address}</span>\n\n            <div className=\"selectBtn\">\n              <img className=\"selectIcon\" onClick={selectListHandle} src={`${process.env.PUBLIC_URL}img/menu-vertical-100.png`}/>\n              <div className={`menu ${selectList? \"active\" : \"inactive\"}`}>\n                <ul>\n                  <li value=\"delete\" onClick={deletePost}>\n                    <img src={`${process.env.PUBLIC_URL}img/bin.png`} alt=\"삭제하기\"/>\n                    &nbsp;삭제하기\n                    </li>\n                    <li onClick={editPost}>\n                      <img src={`${process.env.PUBLIC_URL}img/edit-120.png`} alt=\"수정하기\"/>                    \n                      &nbsp;수정하기\n                    </li>\n                  <li onClick={shareKakao}>\n                    <img className=\"kakaoImg\" src={kakaoIcon}></img>\n                    &nbsp;공유하기\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </SelectIcon>\n        </Profile>\n      </PostHeader>\n      <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n      <WeatherInfo>\n        <p>현재 날씨</p>\n        <>\n          {!postData.weather ? (\n            \"\"\n          ) : (\n            <Icon\n              src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`}\n              alt=\"날씨아이콘\"\n            />\n          )}\n          {!postData.wind ? (\n            \"\"\n          ) : (\n            <Icon\n              src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`}\n              alt=\"바람아이콘\"\n            />\n          )}\n          {!postData.temp ? (\n            \"\"\n          ) : (\n            <Icon\n              src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`}\n              alt=\"날씨아이콘\"\n            />\n          )}\n        </>\n      </WeatherInfo>\n\n      {/* 코디가 있을 때, 없을 때 */}\n      {\n        // 코디 3개 없을때\n        (!postData.outer_id || postData.outer_id === \"default\") &&\n        (!postData.top_id || postData.top_id === \"default\") &&\n        (!postData.bottom_id || postData.top_id === \"default\") ? null : (\n          <>\n            <p className=\"todayCodi\">오늘의 코디</p>\n            <TodayCodi>\n              {!postData.outer_id || postData.outer_id === \"default\" ? (\n                <p className=\"warning\">겉옷 데이터가 없습니다</p>\n              ) : (\n                <Icon\n                  src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`}\n                  alt=\"겉옷\"\n                />\n              )}\n              {!postData.top_id || postData.top_id === \"default\" ? (\n                <p className=\"warning\">상의 데이터가 없습니다</p>\n              ) : (\n                <Icon\n                  src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`}\n                  alt=\"상의\"\n                />\n              )}\n              {!postData.bottom_id || postData.top_id === \"default\" ? (\n                <p className=\"warning\">하의 데이터가 없습니다</p>\n              ) : (\n                <Icon\n                  src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`}\n                  alt=\"하의\"\n                />\n              )}\n            </TodayCodi>\n          </>\n        )\n      }\n\n      <Post>\n        <p>{postData.post_content}</p>\n      </Post>\n\n      {removePost === false ? null : (\n        <ModalConfirm\n          yesHandler={removeModalYes}\n          noHandler={modalNoButtonHandler}\n          closeHandler={modalCloseButtonHandler}\n        >\n          삭제하시겠습니까?\n        </ModalConfirm>\n      )}\n      {edit === false ? null : (\n        <ModalConfirm\n          yesHandler={editModalYes}\n          noHandler={modalNoButtonHandler}\n          closeHandler={modalCloseButtonHandler}\n        >\n          수정하시겠습니까?\n        </ModalConfirm>\n      )}\n\n      <CommentSection>\n        {/* 댓글작성 */}\n        <PostComment>\n          <input\n            type=\"text\"\n            placeholder=\"댓글을 작성해주세요.\"\n            onChange={inputHandle}\n          />\n          <button onClick={commentBtnClick}>작성</button>\n        </PostComment>\n        {/* 댓글목록 */}\n        <CommentList>\n          {commentList.map((content) => (\n            <Comment\n              key={content.id}\n              content={content}\n              commentDelete={commentDelete}\n              userInfo={userInfo}\n            />\n          ))}\n        </CommentList>\n      </CommentSection>\n    </Outer>\n  );\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { Bookmark } from \"../components/BookMarks\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport GoBackButton from \"../components/GoBackButton\"\nimport { useHistory } from \"react-router-dom\"\nimport TopButton from \"../components/TopButton\"\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n    width: 100vw;\n    background-color: var(--page-bg-color);\n\n    // 오늘의 코디\n    .todayCodi {\n        margin: 0 auto;\n        width: 60%;\n        text-align: center;\n        color: #2e2e2e;\n        padding-top: 2vh;\n        border-top: 1px solid #aaa;\n    }\n\n    h2.warning--nodata {\n        color: #c60239;\n        font-size: 3rem;\n        margin: 0 1rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        .todayCodi {\n            margin-top: 2vh;\n            font-weight: bold;\n        }\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n    padding-top: 8vh;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        padding-top: 5vh;\n    }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 80%;\n    max-width: 960px;\n    text-align: center;\n    margin: 0 auto;\n\n    span {\n        font-size: 2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        span {\n            font-size: 1.2rem;\n        }\n    }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n    float: right;\n\n    & .heart {\n        cursor: pointer;\n        color: #aaa;\n    }\n`\n\n// 프로필\nconst Profile = styled.div`\n    width: 60rem;\n    margin: 0 auto;\n    margin-top: 2vh;\n    padding-bottom: 3vh;\n    border-bottom: 1px solid #aaa;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    flex-flow: wrap;\n\n    .profileInfo {\n        display: flex;\n        align-items: center;\n        /* margin-left: 1vh; */\n    }\n    .location {\n        font-size: 1.2rem;\n    }\n    span {\n        margin-left: 1vh;\n    }\n    span.date {\n        font-size: 0.8rem;\n        color: #707b7c;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 594px) {\n        .location {\n            margin-top: 1.2vh;\n            font-size: 1.2rem;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        margin-top: 4vh;\n        span {\n            font-size: 0.5rem;\n        }\n        .location {\n            font-size: 0.5rem;\n        }\n    }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n    border: 1px solid #aaa;\n    width: 4rem;\n    height: 4rem;\n    border-radius: 50%;\n    @media screen and (max-width: 375px) {\n        width: 2rem;\n        height: 2rem;\n    }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n    // 이미지 사이즈(1000*750)\n    // 다시 확인필요\n    width: 60rem;\n    height: 40rem;\n    display: block;\n    margin: 3vh auto;\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n        height: 30rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        height: 18rem;\n    }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n    width: 330px;\n    margin-top: 4vh;\n    display: flex;\n    margin: 0 auto;\n    margin-bottom: 2vh;\n    justify-content: space-between;\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 1vh;\n        margin-bottom: 1vw;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50%;\n        margin-bottom: 3vh;\n    }\n`\n\nconst Icon = styled.img`\n    @media screen and (max-width: 1081px) {\n        width: 4rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 3rem;\n    }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n    width: 20%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    .warning {\n        display: none;\n    }\n    & p.warning {\n        font-size: 0.9rem;\n        width: 6rem;\n        height: 6rem;\n        text-align: center;\n    }\n\n    img {\n        width: 4rem;\n        height: auto;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 50%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50vw;\n    }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n    background-color: rgba(255, 255, 255, 0.5);\n    margin: 0 auto;\n    margin-bottom: 5vh;\n    padding: 1rem;\n    width: 60rem;\n\n    p {\n        line-height: 2.5rem;\n        font-size: 1.5rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 85%;\n        margin-top: 4vh;\n        p {\n            line-height: 1.5rem;\n            font-size: 1rem;\n        }\n    }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n    width: 15rem;\n    margin: 0 auto;\n    padding-bottom: 10vh;\n\n    .button {\n        width: 5rem;\n        height: 3rem;\n        border-radius: 5px;\n        background-color: var(--button-bg-normal);\n        font-size: 1.2rem;\n    }\n    .button2 {\n        margin-left: 5rem;\n    }\n    .button:before {\n        height: 0%;\n        width: 2px;\n    }\n    .button:active {\n        border: none;\n        box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n            inset -4px -4px 6px 0 rgba(255, 255, 255, 0.2),\n            inset 4px 4px 6px 0 rgba(0, 0, 0, 0.4);\n    }\n\n    @media screen and (max-width: 1081px) {\n        .button2 {\n            margin-left: 80px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 40%;\n        display: flex;\n        justify-content: space-between;\n        .button {\n            width: 3rem;\n            height: 2rem;\n            font-size: 1rem;\n        }\n        .button2 {\n            margin-left: 0;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function PostRead() {\n    const history = useHistory()\n    const { readPostId, userInfo, postInfo } = useSelector(\n        (state) => state.itemReducer\n    )\n    console.log(userInfo) //현재접속한 유저\n    console.log(readPostId) //포스트번호\n    console.log(postInfo) //본인것만 보임\n    // console.log(pagePostInfo)\n    const postIds = Number(readPostId)\n    console.log(postIds)\n\n    // postData state 변수\n    const [postData, setPostData] = useState({\n        id: null,\n        post_title: \"\",\n        user_id: \"\",\n        createdAt: \"\",\n        updatedAt: \"\",\n        xLocation: \"\",\n        yLocation: \"\",\n        post_photo: \"\",\n        weather: \"\",\n        wind: \"\",\n        temp: \"\",\n        top_id: \"\",\n        bottom_id: \"\",\n        post_content: \"\",\n        address: \"\",\n    })\n    const [noIdWarning, setNoIdWarning] = useState(\"\")\n\n    // 날짜 처리\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        let hourAndMin = dateObject.toLocaleTimeString(\"en-US\", {\n            hour12: false,\n        })\n        hourAndMin = hourAndMin.slice(0, -3)\n\n        return `${dateOnly} ${hourAndMin}`\n    }\n\n    // 글 불러오기\n    useEffect(() => {\n        function getOnePost(postId) {\n            axios\n                .get(`${url}/readpost`, {\n                    headers: { \"Content-Type\": \"application/json\" },\n                    params: { id: postId },\n                    withCredentials: true,\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    return setPostData((prev) => res.data)\n                    // return res.data;\n                })\n                .catch((err) => console.log(err))\n        }\n\n        let id\n        if (history.location.state) {\n            id = history.location.state.postId\n        } else {\n            id = readPostId\n        }\n\n        if (!id) {\n            console.log(\"**postread: id가 없습니다**\")\n            setNoIdWarning((prev) => \"잘못된 접근입니다.\")\n        } else {\n            getOnePost(id)\n        }\n    }, [])\n\n    // 북마크 상태\n    const [bookmarked, setBookmarked] = useState(false)\n\n    // const [isOpen, setIsOpen] = useState(false);\n    // 게시물 수정\n    const [edit, setEdit] = useState(false)\n    // 게시물 삭제\n    const [removePost, setRemovePost] = useState(false)\n\n    // 게시물 수정\n    const editPost = () => {\n        console.log(\"수정버튼동작확인\")\n        setEdit(true)\n    }\n\n    // 게시물 삭제\n    const deletePost = (e) => {\n        console.log(\"삭제버튼동작확인\")\n        setRemovePost(true)\n    }\n\n    //게시물 수정 yse버튼\n    const editModalYes = () => {\n        axios({\n            url: url + \"/editpost\",\n            method: \"put\",\n            data: {\n                user_id: userInfo.user_id,\n                post_id: postIds,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            alert(res.data)\n            if (res.data === \"게시물의 작성자가 아닙니다.\") {\n                history.push(\"/mypage\")\n            } else {\n                history.push(\"/editpost\")\n            }\n        })\n        setEdit(false)\n    }\n\n    //게시물 삭제 yes버튼\n    const removeModalYes = () => {\n        // console.log('삭제완료')\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        //console.log(token)\n        axios({\n            url: url + \"/deletepost\",\n            method: \"delete\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            data: { post_id: postIds },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            alert(res.data)\n            // alert(\"삭제 완료\")\n            history.push(\"/mypage\")\n        })\n        setRemovePost(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const modalCloseButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const bookmarkHandler = (e) => {\n        console.log(\"글 읽기 - 북마크 버튼 동작 확인\")\n        //눌렀을 때 북마크에 저장\n        //다시 누르면 해제\n        axios({\n            url: url + \"/bookmark\",\n            method: \"post\",\n            data: { user_id: userInfo.id, post_id: postIds },\n            // data: { post_id: postId },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setBookmarked((prev) => !prev)\n            // history.push(\"/bookmark\")\n        })\n        // console.log(e.currentTarget);\n    }\n\n    return (\n        <Outer>\n            {noIdWarning.length !== 0 ? (\n                <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n            ) : (\n                \"\"\n            )}\n            <TopButton />\n            <GoBackButton />\n            <PostHeader className=\"postHeader\">\n                <Title className=\"title\">\n                    <span>{postData.post_title}</span>\n                    <BookmarkIcon\n                        bookmarkHandler={bookmarkHandler}\n                        color={bookmarked ? \"#aaa\" : \"#ED4956\"}\n                    />\n                </Title>\n\n                <Profile className=\"userProfile\">\n                    <div className=\"profileInfo\">\n                        <ProfileImg src={postData.user_Photo} />\n                        <span className=\"nickName\">{postData.nickName}</span>\n                        <span className=\"date\">\n                            {formatDate(postData.updatedAt)}\n                        </span>\n                    </div>\n                    <div>\n                        <p className=\"location\">{postData.address}</p>\n                        {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n                    </div>\n                </Profile>\n            </PostHeader>\n            <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n            <WeatherInfo>\n                {!postData.weather ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n                {!postData.wind ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`}\n                        alt=\"바람아이콘\"\n                    />\n                )}\n                {!postData.temp ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n            </WeatherInfo>\n\n            {/* 코디가 있을 때, 없을 때 */}\n            {\n                // 코디 3개 없을때\n                (!postData.outer_id || postData.outer_id === \"default\") &&\n                (!postData.top_id || postData.top_id === \"default\") &&\n                (!postData.bottom_id ||\n                    postData.top_id === \"default\") ? null : (\n                    <>\n                        <h2 className=\"todayCodi\">오늘의 코디</h2>\n                        <TodayCodi>\n                            {!postData.outer_id ||\n                            postData.outer_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    겉옷 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`}\n                                    alt=\"겉옷\"\n                                />\n                            )}\n                            {!postData.top_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    상의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`}\n                                    alt=\"상의\"\n                                />\n                            )}\n                            {!postData.bottom_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    하의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`}\n                                    alt=\"하의\"\n                                />\n                            )}\n                        </TodayCodi>\n                    </>\n                )\n            }\n\n            <Post>\n                <p>{postData.post_content}</p>\n            </Post>\n\n            <Buttons>\n                <button\n                    className=\"button button1\"\n                    value=\"delete\"\n                    onClick={deletePost}\n                >\n                    삭제\n                </button>\n                {removePost === false ? null : (\n                    <ModalConfirm\n                        yesHandler={removeModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        삭제하시겠습니까?\n                    </ModalConfirm>\n                )}\n                <button className=\"button button2\" onClick={editPost}>\n                    수정\n                </button>\n                {edit === false ? null : (\n                    <ModalConfirm\n                        yesHandler={editModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        수정하시겠습니까?\n                    </ModalConfirm>\n                )}\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation, postInfo, readPostId } = useSelector(\n        (state) => state.itemReducer\n    )\n    // console.log('userId : ',userInfo);\n    // console.log('postInfo : ', postInfo);\n    // console.log('readPostId : ', readPostId);\n    const [postId, setPostId] = useState(readPostId)\n    const [selectWeather, setSelectWeather] = useState() // 날씨\n    const [selectWind, setSelectWind] = useState() // 바람\n    const [selectTemp, setSelectTemp] = useState() // 온도\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    const postIds = Number(readPostId)\n    // console.log('postIds : ', postIds)\n\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n        [\"짧은치마\", \"짧은치마\"],\n        [\"긴치마\", \"긴치마\"]\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 기존 데이터 렌더링\n    useEffect(() => {\n        axios({\n            url: url + `/readpost?searchID=${userInfo.postIds}`,\n            method: \"get\",\n            params: { id: postIds },\n            withCredentials: true,\n        })\n            .then((res) => {\n                console.log(\"res : \", res.data) // 해당 게시물 데이터 들어옴\n                // 제목\n                setTitle(res.data.post_title)\n                // 사진\n                setUploadedImg({ filePath: res.data.post_photo })\n                // 날씨\n                setIsFilteringBtnActive({ [res.data.weather]: true })\n                setIsFilteringBtnActive2({ [res.data.wind]: true })\n                setIsFilteringBtnActive3({ [res.data.temp]: true })\n\n                // 코디\n                setSelectValueOuter(res.data.outer_id)\n                setSelectValueTop(res.data.top_id)\n                setSelectValueBottom(res.data.bottom_id)\n                // 내용\n                setPostText(res.data.post_content)\n            })\n            .catch((err) => console.log(err))\n    }, [])\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/editpost\",\n                method: \"put\",\n                data: {\n                    user_id: userInfo.user_id,\n                    post_id: postId,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    user_id: Math.random().toString(36).substr(2, 5),\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: Math.random().toString(36).substr(2, 20),\n                    post_content: Math.random().toString(36).substr(2, 100),\n                    weather: [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\", \"짧은치마\", \"긴치마\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드 </Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n    }\n`\n\nexport const HalfPage = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n    & img {\n        margin: 2rem;\n        width: 50vw;\n        height: auto;\n    }\n\n    & p {\n        font-size: 1.5rem;\n        margin: 1rem;\n        line-height: 150%;\n    }\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n        & img {\n            margin: 2rem;\n            width: 95%;\n            height: auto;\n        }\n\n        & p {\n            margin: 2rem;\n            width: 35vw;\n            height: auto;\n        }\n    }\n`\n\nexport const AnimatedP = styled.p`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \"1.5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\n\nexport const AnimatedImg = styled.img`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \".5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\nconst Button = styled.button`\n\n    // width: 140px;\n    // height: 45px;\n    // font-size: 11px;\n    // border:3px solid pink;\n    font-family:  'Gowun Dodum', sans-serif;\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    text-transform: uppercase;\n    letter-spacing: 2.5px;\n    font-weight: 500;\n    color: #000;\n    background-color: #fff;\n    // border: none;\n    border-radius: 45px;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease 0s;\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        background-color: pink;\n        box-shadow: 0px 15px 20px #f7cac9;\n        color: #fff;\n    transform: translateY(-4px);\n    }\n`\nconst Buttons = styled.button`\n    // height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function One({ delayOne, delayTwo }) {\n    const history = useHistory()\n\n    return (\n        <Contents className={[\"landingPagePart\", \"one\"]}>\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\">\n                    일기 예보가 <br />\n                    믿음직스럽지 못하시다구요?\n                    <br />\n                </AnimatedP>\n                <div className=\"picture-png left\">\n                    <AnimatedImg\n                        src=\"img/firstpage/phone-and-human.png\"\n                        alt=\"human with phone\"\n                    />\n                </div>\n\n                <Buttons>\n                    <Button onClick={() => history.push(\"/map\")}>\n                        시작하기\n                    </Button>\n                </Buttons>\n            </HalfPage>\n\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    동네 주민이 올린 하늘의 사진을 <br />\n                    실시간으로 확인할 수 있어요.\n                    <br />\n                </AnimatedP>\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    여러분도 하늘사진을 공유하고 <br />\n                    동네 날씨예보관이 되어 보세요!\n                </AnimatedP>\n                <div className=\"picture-png right\">\n                    <AnimatedImg\n                        src=\"img/firstpage/town.png\"\n                        alt=\"street\"\n                        delay={delayTwo}\n                    />\n                </div>\n            </HalfPage>\n        </Contents>\n    )\n}\n","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40%;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\"\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\"\nimport { useHistory } from \"react-router-dom\"\nimport { TwoPictures } from \"./Three\"\nimport styled from \"styled-components\"\n\nconst Button = styled.button`\n    // width: 140px;\n    // height: 45px;\n    // font-size: 11px;\n    border:3px solid pink;\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    font-family: 'Gowun Dodum', sans-serif;\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    text-transform: uppercase;\n    letter-spacing: 2.5px;\n    font-weight: 500;\n    color: #000;\n    background-color: #fff;\n    // border: none;\n    border-radius: 45px;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease 0s;\n    cursor: pointer;\n    outline: none;\n\n\n    &:hover {   \n        background-color: pink;\n        box-shadow: 0px 15px 20px #f7cac9;\n        color: #fff;\n        transform: translateY(-4px);\n    }\n`\nconst Buttons = styled.button`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function Four({\n    delayOne,\n    delayTwo,\n    delayThree,\n    delayFour,\n    delayFive,\n}) {\n    const history = useHistory()\n    return (\n        <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n            <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n            <ContentsUnderTitle className=\"contents\">\n                <HalfPage className=\"half-page\">\n                    <AnimatedP className=\"desc\" delay={delayTwo}>\n                        날씨에 따라 코디를 <br />\n                        추천하거나 <br />\n                        코디를 추천 받으세요.\n                    </AnimatedP>\n                    <div className=\"picture-png left\">\n                        <AnimatedImg\n                            src=\"img/firstpage/destination.png\"\n                            alt=\"reading mobile phone map\"\n                            delay={delayThree}\n                        />\n                    </div>\n                </HalfPage>\n                <HalfPage className=\"half-page\">\n                    <TwoPictures className=\"picture-png right\">\n                        <AnimatedImg\n                            src=\"img/firstpage/publish_post.png\"\n                            alt=\"publishing post\"\n                            delay={delayFour}\n                        />\n                        <AnimatedImg\n                            src=\"img/firstpage/among_nature.png\"\n                            alt=\"watching tree\"\n                            delay={delayFour}\n                        />\n                    </TwoPictures>\n                    <AnimatedP className=\"desc\" delay={delayFive}>\n                        날씨에 따라 코디를 추천받거나, <br />\n                        예보글을 작성하여 <br />\n                        적절한 코디를 추천할 수 있어요.\n                        <Buttons>\n                            <Button onClick={() => history.push(\"/map\")}>\n                                시작하기\n                            </Button>\n                        </Buttons>\n                    </AnimatedP>\n                </HalfPage>\n            </ContentsUnderTitle>\n        </TitleAndContents>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { changeUser } from \"../actions/index\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\n\n// 부모요소에 postion: relative 필요함\n// props\n// duration : 따옴표 안에 s(초) 단위로 지정\n// ex) duration={'3s'}\n// 지정하지 않은 경우 기본값 2s\n// 숫자가 작을수록 빨리 돌아간다\n// size : 따옴표 안에 px 단위로 지정\n// ex) size={'30px'}\n// 지정하지 않은 경우 기본값 (가로 === 세로)\n// 모바일 50px\n// 데스크탑 100px\n// hide\n// true -> display: none;\n// false(지정하지 않은 경우 포함) -> display: flex;\n\nconst LoadingContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n    justify-content: center;\n    width: 100vw;\n    min-height: 100vh;\n    background-color: rgba(253, 254, 254, 0.5);\n    // 밝은 회색, opacity 0.3\n    z-index: 300;\n\n    & > img {\n        margin-top: calc(var(--mobile-header-height) + 10vh);\n\n        @media screen and (min-width: 1081px) {\n            margin-top: calc(var(--desktop-header-height) + 10vh);\n        }\n    }\n`\n\nexport default function Loading({ size, duration, hide }) {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n\n    return (\n        <LoadingContainer className=\"loadingContainer\" hide={hide}>\n            <LoadingSpinner size={size} duration={duration} />\n        </LoadingContainer>\n    )\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport One from \"../components/FirstPage/One\"\nimport Two from \"../components/FirstPage/Two\"\nimport Three from \"../components/FirstPage/Three\"\nimport Four from \"../components/FirstPage/Four\"\nimport { changeMapPage } from \"../actions/index\"\nimport React, { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport Loading from \"../pages/Loading\"\nimport Footer from \"../components/Footer\"\n\nconst FirstPageContainer = styled.div`\n    background: linear-gradient(#fff, #fef9ef, #fff5dc, #d7f9ff, #aaf2ff);\n`\n\nconst FooterDiv = styled.div`\n    //모바일\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        //pc\n        display: block;\n    }\n`\n\nexport default function FirstPage() {\n    const dispatch = useDispatch()\n    // console.log(One)\n    // console.log(Two)\n    // console.log(Three)\n    // console.log(Four)\n\n    // let assignedHeight = window.innerHeight * 0.95;\n    // const [ locationY, setLocationY ] = useState(0);\n    // console.log('[스크롤 위치]', Math.floor(locationY));\n    // const scrollHandler = () => {\n    //   setLocationY(window.pageYOffset);\n    // }\n\n    // useEffect(()=>{\n    //   window.addEventListener('scroll', scrollHandler);\n    //   return () => {\n    //     window.removeEventListener('scroll', scrollHandler);\n    //   }\n    // }, []);\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n\n    return (\n        <>\n            {!One && !Two && !Three && !Four ? (\n                <Loading></Loading>\n            ) : (\n                <FirstPageContainer className=\"firstPageWhole\">\n                    <One delayOne={\"1s\"} delayTwo={\"1.2s\"} />\n                    <Two\n                        delayOne={\"2.2s\"}\n                        delayTwo={\"2.5s\"}\n                        delayThree={\"2.6s\"}\n                        delayFour={\"2.7s\"}\n                        delayFive={\"2.8s\"}\n                    />\n                    <Three\n                        delayOne={\"4.0s\"}\n                        delayTwo={\"4.3s\"}\n                        delayThree={\"4.4s\"}\n                        delayFour={\"4.5s\"}\n                        delayFive={\"4.6s\"}\n                    />\n                    <Four\n                        delayOne={\"5.5s\"}\n                        delayTwo={\"5.8s\"}\n                        delayThree={\"5.9s\"}\n                        delayFour={\"6.0s\"}\n                        delayFive={\"6.1s\"}\n                    />\n                    <FooterDiv>\n                        <Footer></Footer>\n                    </FooterDiv>\n                </FirstPageContainer>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { changeCurRoom } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\n\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\nconst socket = io.connect(url)\n\nexport default function Messenger() {\n    const dispatch = useDispatch()\n    const [prevmsg, setprevmsg] = useState([])\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)-hoon\n    const [msgevent, setmsgevent] = useState(\"\")\n    //메시지의 총 집합-hoon\n    const [newMsgSection, setNewMsgSection] = useState([])\n    //방을 새로 개설할때 쓰인다-hoon\n    const [receiver_id, setreceiver_id] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방-hoon\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트-hoon\n    const [joinedRoom, setjoinedRoom] = useState([\"\"])\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    const [recievemessage, setrecievemessage] = useState([])\n    const history = useHistory()\n    console.log(recievemessage)\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)-hoon\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setreceiver_id(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.-hoon\n        const user_id_sort = [userInfo.user_id, receiver_id].sort()\n        // socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n        // setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        //룸네임이 만들어지면 axios로 접속된 목록을 추가하여 데이터 베이스에 저장해주자-hoon\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: receiver_id,\n                roomName: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }\n    //처음에 가지고 있는 참여된 방이 있는지 조회-hoon\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }, [])\n\n    useState(() => {\n        setNewMsgSection([...newMsgSection])\n        setprevmsg([...prevmsg])\n        console.log(newMsgSection)\n    }, [roomInOut, prevmsg, newMsgSection])\n\n    //방을 클릭했을때 방을 입장하게 할 함수-hoon\n    function roomListClick(clickRoomName) {\n        console.log(clickRoomName)\n        // setcurRoom(clickRoomName)\n        dispatch(changeCurRoom(clickRoomName))\n\n        history.push(\"/chatroom\")\n\n        // setRoomInOut(true)\n\n        // //현재 방입장-hoon\n        // // socket.emit(\"enter_room\", clickRoomName)\n        // //방입장시 렌더링 할 메시지를 가져와야한다.\n        // axios({\n        //     url: url + `/chat/messagelist`,\n        //     method: \"post\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //     },\n        //     data: {\n        //         user_id: userInfo.user_id,\n        //         receiver_id: curRoom\n        //             .replace(\"_\", \"\")\n        //             .replace(`${userInfo.user_id}`, \"\"),\n        //         roomName: curRoom,\n        //     },\n        //     withCredentials: true,\n        // }).then((res) => {\n        //     setprevmsg(res.data)\n        // })\n    }\n    // useEffect(() => {\n    //     console.log(curRoom)\n    // }, [curRoom])\n    //채팅방 메시지 글작성 이벤트타겟용 함수\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        }).then((res) =>\n            socket.emit(\"message\", {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                chatcontent: msgevent,\n            })\n        )\n        setmsgevent(\"\")\n    }\n\n    // socket.on(\"newMsg\", (msg2) => {\n    //     // console.log(\"메시지 적용되야됨\")\n    //     //총 메시지리스트를 여기서 업데이트하고있다\n    //     setprevmsg([...msg, msg2])\n    // })\n    // useEffect(() => {\n    //     axios({\n    //         url: url + \"/chat/messagelist\",\n    //         method: \"post\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         data: {\n    //             roomName: curRoom,\n    //             chatcontent: JSON.stringify(msg),\n    //         },\n    //         withCredentials: true,\n    //     }).then((res) => {})\n    //     // .then((res) => console.log(\"글 업데이트 완료\"))\n    // }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n\n    return (\n        <Container className=\"mapcontainer\">\n            <RoomChatDiv>\n                <ProfileName>{userInfo.user_id}</ProfileName>\n                <UserPhotoDiv>\n                    <UserPhotoImg src={userInfo.user_Photo} />\n                </UserPhotoDiv>\n                <FriendInputAndBtn>\n                    <FriendInput\n                        onChange={(e) => roomNamefunc(e)}\n                        placeholder=\"친구 ID\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={roomNameSubmit}\n                                icon={faPlusSquare}\n                            />\n                        </Button>\n                    </Buttons>\n                </FriendInputAndBtn>\n                <RoomList>\n                    <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                    {joinedRoom.map((el) => (\n                        <FriendListDiv onClick={() => roomListClick(el)}>\n                            {el\n                                .replace(\"_\", \"\")\n                                .replace(`${userInfo.user_id}`, \"\")}\n                        </FriendListDiv>\n                    ))}\n                </RoomList>\n            </RoomChatDiv>\n        </Container>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n}\nconst socket = io.connect(url)\n\nexport default function Messenger2() {\n    // const dispatch = useDispatch()\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n    //방을 새로 개설할때 쓰인다\n    const [roomName, setroomName] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방\n    //메시지의 총 집합\n    const [msg, setmsg] = useState([\"\"])\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)\n    const [msgevent, setmsgevent] = useState(\"\")\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트\n    const [joinedRoom, setjoinedRoom] = useState([])\n    const history = useHistory()\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setroomName(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.\n        const user_id_sort = [userInfo.user_id, roomName].sort()\n        socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n        //axios로 접속된 목록을 추가하여 데이터 베이스에 저장하는데, 유즈이펙트로, 변화가 있을때만 저장한다.\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                opponent: roomName,\n                roomlist: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setjoinedRoom(res.data)\n        })\n    }\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => setjoinedRoom(res.data))\n    }, [])\n\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        socket.emit(\"enter_room\", clickRoomName)\n        setcurRoom(clickRoomName)\n\n        axios({\n            url: url + `/chat/messagelist?roomlist=${clickRoomName}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setmsg(res.data)\n        })\n    }\n\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    function msgSubmit() {\n        socket.emit(\n            \"newMsg\",\n            `${userInfo.user_id} : ` + msgevent,\n            curRoom,\n            () => {\n                // console.log(\"메시지추가 찍혀라\")\n                setmsg([...msg, `${userInfo.user_id} : ` + msgevent])\n            }\n        )\n    }\n    // socket.on(\"newMsg\", setmsg([msg, ...msg]))\n\n    // socket.on(\"welcome\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 방에 들어왔습니다\", ...msg])\n    // })\n    // socket.on(\"bye\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 나갔습니다\", ...msg])\n    // })\n    socket.on(\"newMsg\", (msg2) => {\n        // console.log(\"메시지 적용되야됨\")\n        //총 메시지리스트를 여기서 업데이트하고있다\n        setmsg([...msg, msg2])\n    })\n    useEffect(() => {\n        axios({\n            url: url + \"/chat/messagelist\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                roomlist: curRoom,\n                chatcontent: JSON.stringify(msg),\n            },\n            withCredentials: true,\n        }).then((res) => {})\n        // .then((res) => console.log(\"글 업데이트 완료\"))\n    }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el.split(\"_\").indexOf(userInfo.user_id) === 0\n                                    ? el.split(\"_\")[1]\n                                    : el.split(\"_\")[0]}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {msg.map((el) => {\n                            return <div>{el}</div>\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    /* justify-content: space-around; */\n    justify-content: start;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    /* background-color: var(--button-bg-normal); */\n    background-color: #fec0cb;\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n    border: 0;\n    outline: 0;\n    color: white;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        /* justify-content: flex-start; */\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst WriteText = styled.div`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"5vh\")};\n    text-align: center;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    /* margin: 2rem 1rem 4rem; */\n    margin: 1.5rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\n\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios({\n            url: url + \"/edituserinfo\",\n            method: \"put\",\n            data: {\n                location: userRoadAddress,\n                user_photo: uploadedImg.filePath,\n            },\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            withCredentials: true,\n        })\n            .then((res) => {\n                alert(\"변경 완료, 로그아웃 후 확인해주세요:)\")\n                history.push(\"/home\")\n                console.log(res.data)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0,-4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <WriteText>프로필 사진</WriteText>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <WriteText>사는곳</WriteText>\n                <DaumPostcode onComplete={handleComplete} />\n                <ValidationListBox className=\"pwValidationList\">\n                    {userRoadAddress}\n                </ValidationListBox>\n                <Button className=\"submitButton\" onClick={submitButtonHandler}>\n                    등록\n                </Button>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport io from \"socket.io-client\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeNewMsgSection } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\n\nconst MeDiv = styled.div`\n    // border-bottom: 1px solid green;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: right;\n\n    overflow: auto;\n`\nconst YouDiv = styled.div`\n    // border-bottom: 1px solid black;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: left;\n\n    overflow: auto;\n`\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\nconst socket = io.connect(url)\n\nexport default function ChatRoom() {\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const { userInfo, curRoom, newMsgSection } = useSelector(\n        (state) => state.itemReducer\n    )\n    const [prevmsg, setprevmsg] = useState([])\n    // const [newMsgSection, setNewMsgSection] = useState([])\n    const [msgevent, setmsgevent] = useState(\"\")\n\n    console.log(curRoom)\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg, newMsgSection])\n    // }, [newMsgSection])\n\n    // recievemessage = prevmsg\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg])\n    // }, [recievemessage])\n    // let recievemessage = function (msgobj) {\n    function recievemessage(msgobj) {\n        // this.setState({\n        //     messages:[...this.state.messages,messageobject]\n        // })\n        dispatch(changeNewMsgSection([msgobj]))\n    }\n    /////////////메시지를 받았을때/////\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n        socket.on(\"sendmsg\", (msgobj) =>\n            // setNewMsgSection([...newMsgSection, msgobj])\n            {\n                console.log(newMsgSection)\n                console.log(msgobj)\n                // return dispatch(changeNewMsgSection([...newMsgSection, msgobj]))\n                recievemessage({\n                    user_id: msgobj.receiver_id,\n                    receiver_id: msgobj.user_id,\n                    chatcontent: msgobj.chatcontent,\n                })\n            }\n        )\n    }, [])\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n    }, [])\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        const user_id = userInfo.user_id\n        const receiver_id = curRoom\n            .replace(\"_\", \"\")\n            .replace(`${userInfo.user_id}`, \"\")\n\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        })\n        // .then((res) =>\n        socket.emit(\"message\", {\n            user_id: user_id,\n            receiver_id: receiver_id,\n            // user_id: curRoom\n            //     .replace(\"_\", \"\")\n            //     .replace(`${userInfo.user_id}`, \"\"),\n            // receiver_id: userInfo.user_id,\n\n            chatcontent: msgevent,\n        })\n        // )\n        setmsgevent(\"\")\n        console.log(prevmsg)\n        console.log(newMsgSection)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            <GoBackButton>\n                <FontAwesomeIcon\n                    icon={faChevronLeft}\n                    className=\"fa-fw\"\n                    color=\"#ACB5BD\"\n                    onClick={() => history.push(\"/messenger\")}\n                />\n            </GoBackButton>\n            <ChatList>\n                <div>{\"채팅창\"}</div>\n            </ChatList>\n            {prevmsg.map((el) => {\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            {newMsgSection.map((el) => {\n                console.log(el)\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            <input\n                onChange={(e) => msgfunc(e)}\n                placeholder=\"메시지\"\n                required\n                type=\"text\"\n                value={msgevent}\n            />\n            <Buttons>\n                <Button>\n                    <FontAwesomeIcon onClick={msgSubmit} icon={faPaperPlane} />\n                </Button>\n            </Buttons>\n        </Container>\n    )\n}\n","// 아이디 찾기 모달\nimport React from 'react';\nimport styled from \"styled-components\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`\nconst Popup = styled.div`\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n  text-align: center;\n\n`\nconst Div1 = styled.div`\n  margin: 1rem auto 0 auto;\n  height: 3rem;\n  width: 90%;\n  text-align: end;\n  button {\n    border: 1px solid black;\n    height: 2rem;\n    width: 2rem;\n    border-radius: 10px;\n  }\n`\nconst Div2 = styled.div`\n  line-height: 2rem;\n  margin: 2rem 0;\n  p {\n    font-size: 1.3rem;\n  }\n  #info {\n    font-size: 1rem;\n  }\n`\nconst Div3 = styled.div`\n  button {\n    font-size: 1.2rem;\n    height: 3rem;\n    padding: 0 1rem;\n    background-color: pink;\n    border-radius: 10px;\n    &:hover {\n      background-color: #ff7f9f;\n      color: white;\n    }\n  }\n`\n\nexport default function FindAccountModal({closeBtn, loginBtn, userId, userNickName}) {\n  const loginButtonClick = () => {\n    loginBtn();\n  }\n  const closeButtonClick = () => {\n    closeBtn();\n  }\n\n  return (\n    <Outer>\n      <Popup>\n        <Div1><button onClick={closeButtonClick}>X</button></Div1>\n        <Div2>\n          <p>인증이 완료되었습니다.</p>\n          <p id=\"info\">\n            {userNickName}님의 아이디는 {userId} 입니다.\n          </p>\n        </Div2>\n        <Div3 >\n          <button onClick={loginButtonClick}>로그인하러가기</button>\n        </Div3>\n      </Popup>\n    </Outer>\n  )\n}","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\nimport FindAccountModal from \"../components/FindAccountModal\"\n\nconst Outer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nconst Form = styled.div`\n    width: 400px;\n    height: auto;\n    margin: 4rem auto 0 auto;\n\n    #title {\n        font-size: 1.5rem;\n    }\n`\n\nconst Div1 = styled.div`\n    margin-bottom: 2rem;\n    text-align: center;\n`\nconst Div2 = styled.div`\n    ul {\n        list-style: none;\n    }\n    li {\n        margin: 1rem 0;\n        display: flex;\n        padding: 0.5rem 0;\n    }\n    p {\n        width: 100px;\n    }\n    input {\n        width: 200px;\n    }\n    button {\n        margin-left: 1rem;\n        width: 4rem;\n        background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n        }\n    }\n`\nconst Button = styled.button`\n    display: block;\n    margin: 2rem auto 0 auto;\n    width: 7rem;\n    height: 2rem;\n    font-size: 1rem;\n    background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function FindAccount(){\n    const history = useHistory()\n    const dispatch = useDispatch()\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    const [inputFindInfo, setInputFindInfo] =  useState({\n        findNickName: \"\",\n        authEmail: \"\",\n        authCode: \"\",\n    })\n    \n    // 모달창\n    const [isOpen, setIsOpen] = useState(false)\n    \n    const [userData, setUserData] = useState({\n        nickName: \"\",\n        user_id: \"\"\n    })\n\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n\n    const ChangeHanlder = (key) => (e) => {\n        setInputFindInfo({\n            ...inputFindInfo,\n            [key]: e.target.value,\n        })\n    }\n\n    function sendEmail() {\n      //console.log(\"이메일 전송 버튼\")\n      if(inputFindInfo.findNickName && !inputFindInfo.authCode){\n        axios({\n          url: url + \"/findid\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: {\n            temporary_id: inputFindInfo.findNickName,\n            email: inputFindInfo.authEmail\n          },\n          withCredentials: true\n        })\n        .then((res) => {\n            //console.log(res)\n            if(res.data === \"no results\"){\n                alert(\"가입된 정보가 아닙니다.\")\n            }\n            else if(res.data.status === \"success\"){\n                alert(\"인증메일을 발송하였습니다. 50초내로 확인해주세요:)\")\n            }else{\n                alert(\"인증메일 발송에 실패하였습니다.\")\n            }   \n        })\n      }else{\n        alert(\"닉네임과 이메일을 입력해주세요.\")\n      }\n    }\n\n    function verification() {\n      //console.log(\"인증코드 버튼\")\n      axios({\n        url: url + \"/users/auth\",\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\", \n        },\n        data: {\n          temporary_id: inputFindInfo.findNickName,\n          email: inputFindInfo.authEmail,\n          code: inputFindInfo.authCode\n        },\n        withCredentials: true\n      })\n      .then((res) => {\n        console.log(res.data)\n        if(res.data === true){ \n            alert(\"메일 인증 되었습니다.\")\n        }else{\n            alert(\"인증코드가 맞지 않습니다. 다시 확인해주세요:)\")\n        }\n      })\n    }\n\n    function findAccountId() {\n      //console.log(\"아이디 찾기 버튼\")\n\n      if(inputFindInfo.findNickName && inputFindInfo.authEmail && inputFindInfo.authCode){\n        //console.log(\"두둥\")\n        axios({\n            url: url + \"/findaccount\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            data: {\n              nickName: inputFindInfo.findNickName,\n              email: inputFindInfo.authEmail,\n            },\n            withCredentials: true\n        })\n        .then((res) => {\n            //닉네임, 아이디가 콘솔에 찍힙니닷 \n            console.log(\"헤이헤이\",res.data)\n            return setUserData((prev) => res.data) \n            // alert(res.data.nickName)\n        })\n        setIsOpen(true)\n       }else{\n           alert(\"위 모두 사항을 입력해주세요.\")\n       }\n\n      //닉네임, 이메일, 인증코드가 모두 채워져 있으면 함수를 실행하게함\n      //악시오스 요청으로 아이디찾기 백엔드로 보내서 -> 닉네임, 이메일, 인증코드 확인하기\n       \n    }\n\n    const closeModal = () => {\n        setIsOpen(false)\n    }\n    const loginBtn = () => {\n        history.push(\"/login\")\n    }\n\n    return (\n        <Outer>\n            <Form>\n                <Div1>\n                    <p id=\"title\">아이디 찾기</p>\n                    <p>이메일 인증</p>\n                </Div1>\n\n                <Div2>\n                    <ul>\n                        <li>\n                            <p>닉네임</p>\n                            <input type=\"text\" onChange={ChangeHanlder(\"findNickName\")}></input>\n                        </li>\n                        <li>\n                            <p>이메일</p>\n                            <input type=\"text\" placeholder=\"ex) kimcoding@gmail.com\" onChange={ChangeHanlder(\"authEmail\")}></input>\n                            <button onClick={sendEmail}>인증요청</button>\n                        </li>\n                        <li>\n                            <p>인증코드</p>\n                            <input type=\"text\" onChange={ChangeHanlder(\"authCode\")}></input>\n                            <button onClick={verification}>인증하기</button>\n                        </li>\n                    </ul>\n                </Div2>\n                <Button onClick={findAccountId}>아이디 찾기</Button>\n                { isOpen? \n                    (<FindAccountModal\n                        closeBtn={closeModal}\n                        loginBtn={loginBtn}\n                        userId={userData.user_id}\n                        userNickName={userData.nickName}\n                    />\n                    ) \n                    : null\n                }\n                \n            </Form>\n        </Outer>\n    )\n}","// 비밀번호 찾기 모달\nimport React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`\nconst Popup = styled.div`\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n  text-align: center;\n\n`\nconst Div1 = styled.div`\n  margin: 1rem auto 0 auto;\n  height: 2rem;\n  width: 90%;\n  text-align: end;\n`\nconst Div2 = styled.div`\n  p {\n    font-size: 1.3rem;\n  }\n\n  #info {\n    font-size: 1rem;\n  }\n`\nconst Div3 = styled.div`\n  margin: 1rem 0;\n  input {\n    margin: 0 auto 1rem auto;\n    display: block;\n  }\n  p {\n    font-size: 0.8rem;\n  }\n`\nconst Div4 = styled.div`\n`\nconst Button = styled.button`\n  font-size: 1.2rem;\n  height: 3rem;\n  padding: 0 1rem;\n  background-color: pink;\n  border-radius: 10px;\n  &:hover {\n    background-color: #ff7f9f;\n    color: white;\n  }\n`\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst ValidationMsg = styled.ul`\n  list-style: none;\n  font-size: 0.7rem;\n  \n  li{\n    color: red;\n  }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function FindPwModal({closeBtn, userId, userEmail}) {\n  const history = useHistory()\n  if (!url) {\n    url = \"https://thereweather.space/api\"\n  }\n\n  // 모달창 닫기\n  const closeButtonClick = () => {\n    closeBtn();\n  }\n\n  const [inputNewPw, setInputNewPw] = useState({\n    newPw: \"\",\n    againPw: \"\",\n  });\n\n  const [pwCheckInput, setPwCheckInput] = useState(\"\");\n  // const [pwCheckInput, setPwCheckInput] = useState({\n  //   checkPw: \"\", DoubleCheckPw:\"\"\n  // });\n\n  const [inputVaildMessage, setInputVaildMessage] = useState({\n    newPw: \"변경할 패스워드를 입력하세요.\",\n    again: \"패스워드를 재입력해주세요.\",\n  });\n\n  const [pwCheckInputMessage, setPwCheckInputMessage] =\n  useState(\"패스워드를 다시 입력하세요.\");\n\n  const ChangeHanlderPw = (key) => (e) => {\n    setInputNewPw({\n      ...inputNewPw,\n      [key]: e.target.value\n    })\n  }\n\n  function findAccountPw() {\n    if(!inputNewPw.newPw && !inputNewPw.againPw){\n      alert(\"비밀번호를 입력해주세요.\")\n    }\n    else if(inputNewPw.newPw && inputNewPw.againPw){\n      axios({\n        url: url + \"/findpassword\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: {\n          user_id: userId,\n          email: userEmail,\n          password: inputNewPw.againPw\n        },\n          withCredentials: true\n        })\n        .then((res) => { \n          // console.log(\"헤이헤이\",res.data)\n          alert(\"변경되었습니다. 다시 로그인해주세요:)\")\n          history.push(\"/login\")\n        })\n    }\n    }\n\n  //비밀번호 유효성 검사 추가 -> 최소 6자 이상 및 알파벳과 숫자 및 특수문자(@$!%*#?&)는 한 개 이상 포함\n   function strongPassword(str) {\n    return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(str);\n   }\n   // 비밀번호 입력 같은지 확인\n   function isMatch (pwd1, pwd2) {\n    return pwd1 === pwd2\n   }\n  \n   useEffect(() => {\n     if(strongPassword(inputNewPw.newPw)){\n      console.log(\"new password\")\n      setInputVaildMessage({...inputVaildMessage, newPwMsg: \"\"})\n     }\n     else {\n      setInputVaildMessage({...inputVaildMessage, newPwMsg: \"알파벳, 숫자 포함, 특수문자(@$!%*#?&) 1개 이상 포함하는 6글자입니다.\"})\n     }\n \n     if(isMatch(inputNewPw.newPw, inputNewPw.againPw) && inputNewPw.againPw.length === 0){\n      setPwCheckInputMessage(\"패스워드를 재입력해주세요.\")\n     }else if(isMatch(inputNewPw.newPw, inputNewPw.againPw)){\n      setPwCheckInputMessage(\"\")\n     }else{\n       setPwCheckInputMessage(\"비밀번호가 일치하지 않습니다.\")\n     }\n   }, [inputNewPw.newPw, inputNewPw.againPw]);\n  \n  //  const ChangeHanlderAgainPw = (e) => {\n  //   setPwCheckInput(e.target.value);\n  // };\n\n  // const ChangeHanlderAgainPw = (key) =>(e) => {\n  //   setPwCheckInput({ ...pwCheckInput, [key]: e.target.value });\n  // };\n  \n\n\n  return (\n    <Outer>\n      <Popup>\n        <Div1><button onClick={closeButtonClick}>X</button></Div1>\n        <Div2>\n          <p>인증이 완료되었습니다.</p>\n          <p id=\"info\">새로운 비밀번호를 입력해주세요.</p>\n        </Div2>\n        <Div3>\n        <StyledArticle>\n          <ValidationMsg>\n        {/* 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함 */}\n          <input type=\"password\" placeholder=\"비밀번호 입력\" onChange={ChangeHanlderPw(\"newPw\")}></input>\n          <li>{inputVaildMessage.newPwMsg}</li>\n          <input type=\"password\" placeholder=\"비밀번호 재입력\" onChange={ChangeHanlderPw(\"againPw\")}></input>\n          <li>{pwCheckInputMessage}</li> \n          </ValidationMsg>\n        </StyledArticle>\n        </Div3>\n        <Div4>\n          <Button onClick={findAccountPw}>비밀번호 변경</Button>\n        </Div4>\n      \n      </Popup>\n    </Outer>\n  )\n}","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\nimport FindPwModal from \"../components/FindPwModal\"\n\nconst Outer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nconst Form = styled.div`\n    width: 400px;\n    height: auto;\n    margin: 4rem auto 0 auto;\n\n    #title {\n        font-size: 1.5rem;\n\n    }\n`\n\nconst Div1 = styled.div`\n    margin-bottom: 2rem;\n    text-align: center;\n`\nconst Div2 = styled.div`\n    ul {\n        list-style: none;\n    }\n    li {\n        margin: 1rem 0;\n        display: flex;\n        padding: 0.5rem 0;\n    }\n    p {\n        width: 100px;\n    }\n    input {\n        width: 200px;\n    }\n    button {\n        margin-left: 1rem;\n        width: 4rem;\n        background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n        }\n    }\n`\nconst Button = styled.button`\n    display: block;\n    margin: 2rem auto 0 auto;\n    width: 8rem;\n    height: 2rem;\n    font-size: 1rem;\n    background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function FindPassword(){\n    const history = useHistory()\n    const dispatch = useDispatch()\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    const [isOpen, setIsOpen] = useState(false)\n    \n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    \n    const closeModal = () => {\n        setIsOpen(false)\n    }\n\n    const [inputFindInfo, setInputFindInfo] = useState({\n        findId: \"\",\n        authEmail: \"\",\n        authCode: \"\",\n    })\n\n    const [userData, setUserData] = useState({\n        user_id: \"\",\n        email: \"\"\n    })\n    \n    const ChangeHanlder = (key) => (e) => {\n        setInputFindInfo({\n            ...inputFindInfo,\n            [key]: e.target.value\n        })\n    }\n    \n    function sendEmail() {\n        //console.log(\"이메일 전송 버튼\")\n        if(inputFindInfo.findId && !inputFindInfo.authCode){\n          axios({\n            url: url + \"/users/findpw\",\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: {\n              temporary_id: inputFindInfo.findId,\n              email: inputFindInfo.authEmail\n            },\n            withCredentials: true\n          })\n          .then((res) => {\n              // console.log(\"이메일전송버튼 누르면\",res.data.user_id)\n              // console.log(res); // user id, email 들어옴\n              if(res.data === \"no results\"){\n                  alert(\"가입된 정보가 아닙니다.\")\n              }\n              else if(res.status === 200){\n                  alert(\"인증메일을 발송하였습니다. 50초내로 확인해주세요:)\")\n                  return setUserData((prev) => res.data)  // setState\n              }\n              else{\n                  alert(\"인증메일 발송에 실패하였습니다.\")\n              }   \n          })\n        }else{\n          alert(\"닉네임과 이메일을 입력해주세요.\")\n        }\n      }\n\n      function verification() {\n        //console.log(\"인증코드 버튼\")\n        axios({\n          url: url + \"/users/auth\",\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\", \n          },\n          data: {\n            temporary_id: inputFindInfo.findId,\n            email: inputFindInfo.authEmail,\n            code: inputFindInfo.authCode\n          },\n          withCredentials: true\n        })\n        .then((res) => {\n        //   console.log(res.data)\n          if(res.data === true){ \n              alert(\"메일 인증 되었습니다.\")\n          }else{\n              alert(\"인증코드가 맞지 않습니다. 다시 확인해주세요:)\")\n          }\n        })\n      }\n      \n\n      function setNewPassword() {\n        // console.log(\"비밀번호 찾기 버튼\")\n        if(!inputFindInfo.findId && !inputFindInfo.authEmail && !inputFindInfo.authCode){\n          alert(\"위 사항을 모두 입력해주세요.\")\n        }else{\n          setIsOpen(true)   \n        }\n    }\n\n    return (\n        <Outer>\n            <Form>\n                <Div1>\n                    <p id=\"title\">비밀번호 찾기</p>\n                    <p>이메일 인증</p>\n                </Div1>\n\n                <Div2>\n                    <ul>\n                        <li>\n                            <p>아이디</p>\n                            <input type=\"text\" placeholder=\"ex) kimcoding\" onChange={ChangeHanlder(\"findId\")}></input>\n                        </li>\n                        <li>\n                            <p>이메일</p>\n                            <input type=\"text\" placeholder=\"ex) kimcoding@gmail.com\" onChange={ChangeHanlder(\"authEmail\")}></input>\n                            <button onClick={sendEmail}>인증요청</button>\n                        </li>\n                        <li>\n                            <p>인증코드</p>\n                            <input type=\"text\" onChange={ChangeHanlder(\"authCode\")}></input>\n                            <button onClick={verification}>인증하기</button>\n                        </li>\n                    </ul>\n                </Div2>\n                <Button \n                  onClick={setNewPassword}  /* 모달창열기 */\n                >비밀번호 재설정</Button>\n                {isOpen? \n                  <FindPwModal \n                    closeBtn={closeModal}\n                    userId={userData.user_id}\n                    userEmail={userData.email}\n                  />\n                : null\n                }\n            </Form>\n        </Outer>\n    )\n}","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box; \n}\n\nbody { \n  font-family: \n  'Gowun Dodum', sans-serif;\n  height: 100%;\n  }\n`\n\nexport default GlobalStyle\n","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\n// import \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport ReadBookMarkPost from \"./pages/ReadBookMarkPost\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport Messenger from \"./pages/Messenger\"\nimport Messenger2 from \"./pages/Messenger2\"\nimport Loading from \"./pages/Loading\"\nimport EditUserInfo from \"./pages/EditUserInfo\"\nimport ChatRoom from \"./pages/ChatRoom\"\nimport Footer from \"../src/components/Footer\"\nimport FindAccount from \"./pages/FindAccount\"\nimport FindPassword from \"./pages/FindPassword\"\nimport { changeIsLogin, changeUser, mapSet } from \"./actions/index\"\nimport GlobalStyle from \"./components/GlobalStyle\"\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nif (!url) {\n    url = \"https://thereweather.space/api\"\n}\n\nexport default function App() {\n    const dispatch = useDispatch()\n    const isInput = true\n\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        //console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                //console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <GlobalStyle />\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/edituserinfo\">\n                    <EditUserInfo></EditUserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/readpost\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/bookmarkpost\">\n                    <ReadBookMarkPost></ReadBookMarkPost>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/Messenger\">\n                    <Messenger />\n                </Route>\n                <Route exact path=\"/Messenger2\">\n                    <Messenger2 />\n                </Route>\n                <Route exact path=\"/loading\">\n                    <Loading />\n                </Route>\n                <Route exact path=\"/chatroom\">\n                    <ChatRoom />\n                </Route>\n\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/first\" />\n                </Route>\n                <Route exact path=\"/findaccount\">\n                    <FindAccount></FindAccount>\n                </Route>\n                <Route exact path=\"/findpassword\">\n                    <FindPassword></FindPassword>\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n    //만드신 변수는 어떤 변수인지 설명 부탁드려요-hoon\n    isLogin: false, //로그인상태 -hoon\n    genderToggle: 1, //기본값 1, 회원가입시에 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n    curLocation: { lat: \"\", lon: \"\" }, //현재 위치 변수-hoon\n    userInfo: {}, //회원 로그인시 정보 저장할 변수-hoon\n    weatherFilter: \"\", //헤더에서 날씨 필터에서 선택된 날씨-hoon\n    mapPage: false, //헤더에서 날씨필터 없애기용 변수-hoon\n    curRoom: null, //메신져에서 방입장시 사용할 변수-hoon\n    curPage: 1,\n    newMsgSection: [\n        // {\n        //     user_id: \"\",\n        //     receiver_id: \"\",\n        //     roomName: \"\",\n        // },\n    ], //메신져기능에서 새로운 메시지를 렌더링할 변수\n    searchWord: \"\",\n    map: null,\n    selectWord: \"\",\n    editPassword: false,\n    start: 0, //북마크 페이지네이션\n    end: 10,\n    current: 1,\n    item: [], //기상청 데이터\n    postInfo: {}, //post 정보\n    readPostId: \"\", // 북마크나 지도 모달에서 클릭한 게시물의 아이디\n    homePost: [], // Home의 최근 게시물\n}\n","import {\n    CHANGE_SEARCH_WORD,\n    CHANGE_SELECT_WORD,\n    CHANGE_USER_INFO,\n    CHANGE_USER_GENDER,\n    CHANGE_IS_LOGIN,\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    CHANGE_USER_PW,\n    CHANGE_CUR_LOCATION,\n    UPDATE_WEATHERINFO,\n    UPDATE_USER_POST,\n    UPDATE_POST_ID,\n    CHANGE_WHEATER_FILTER,\n    CHANGE_MAP_PAGE,\n    CHANGE_CURROOM,\n    CHANGE_NEWMSGSECTION,\n    CURPAGE,\n    MAPSET,\n} from \"../actions/index\"\nimport { initialState } from \"./initialState\"\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case MAPSET:\n            return {\n                ...state,\n                map: action.payload.map,\n            }\n        case CURPAGE:\n            return {\n                ...state,\n                curPage: action.payload.curPage,\n            }\n        case CHANGE_NEWMSGSECTION:\n            return {\n                ...state,\n                newMsgSection: action.payload.newmsg,\n            }\n        case CHANGE_CURROOM:\n            return {\n                ...state,\n                curRoom: action.payload.room,\n            }\n        case CHANGE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload,\n            }\n        // 새로운기능은 위의 양식으로 아래쪽에 만들어서 쓸수있다.-hoon\n\n        case CHANGE_USER_GENDER:\n            return {\n                ...state,\n                genderToggle: action.payload,\n            }\n\n        case UPDATE_CURRENT_PAGE:\n            return {\n                ...state,\n                current: action.payload,\n            }\n\n        case UPDATE_START_END_PAGE:\n            return {\n                ...state,\n                start: action.payload.start,\n                end: action.payload.end,\n            }\n\n        case CHANGE_IS_LOGIN:\n            return {\n                ...state,\n                isLogin: action.payload,\n            }\n\n        case CHANGE_USER_PW:\n            return {\n                ...state,\n                editPassword: action.payload,\n            }\n\n        case CHANGE_SEARCH_WORD:\n            return {\n                ...state,\n                searchWord: action.payload,\n            }\n\n        case CHANGE_SELECT_WORD:\n            return {\n                ...state,\n                selectWord: action.payload,\n            }\n\n        case CHANGE_CUR_LOCATION:\n            return {\n                ...state,\n                curLocation: action.payload,\n            }\n        case UPDATE_WEATHERINFO:\n            return {\n                ...state,\n                item: action.payload,\n            }\n\n        case UPDATE_USER_POST:\n            return {\n                ...state,\n                postInfo: action.payload,\n            }\n\n        case UPDATE_POST_ID:\n            return {\n                ...state,\n                readPostId: action.payload,\n            }\n        case CHANGE_WHEATER_FILTER:\n            return {\n                ...state,\n                weatherFilter: action.payload,\n            }\n        case CHANGE_MAP_PAGE:\n            return {\n                ...state,\n                mapPage: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default itemReducer\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n\r\nexport default store\r\n","/* eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}