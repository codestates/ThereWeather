{"version":3,"sources":["actions/index.js","components/LoadingSpinner.js","components/MapBox.js","pages/Map.js","components/TopButton.js","components/Footer.js","pages/Home.js","components/BookMarks.js","components/Pagination.js","pages/BookMark.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","KakaoIcon/kakao_login.png","pages/Login.js","pages/PasswordEdit.js","pages/SignUp.js","pages/MyPost.js","pages/Write.js","components/PostRead-comment.js","pages/PostRead.js","pages/ReadBookMarkPost.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/Loading.js","pages/FirstPage.js","pages/Messenger.js","pages/Messenger2.js","pages/EditUserInfo.js","pages/ChatRoom.js","components/GlobalStyle.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","UPDATE_WEATHERINFO","UPDATE_USER_POST","UPDATE_POST_ID","CHANGE_WHEATER_FILTER","CHANGE_MAP_PAGE","CHANGE_CURROOM","CHANGE_NEWMSGSECTION","changeSearchword","searchWord","type","payload","changeIsLogin","trueOrFalse","userPosts","postinfo","updatePostId","pageId","changeMapPage","mapPage","Spinner","styled","img","props","size","duration","LoadingSpinner","src","ImgContainer","div","PostListModal","SlideModal","bottom","GraphModal","GraphTitle","GraphTitleDiv","GraphTitleDiv2","BarGraphFlex","BarGraphchild","Location","console","log","useSelector","state","itemReducer","weatherFilter","useState","isLoading","setisLoading","history","useHistory","dispatch","useDispatch","kakao","window","sunny","cloudy","rainy","snowy","weatherCount","setWeatherCount","weatherApi","setweatherApi","bottom_id","createdAt","id","post_content","post_photo","post_title","temp","top_id","updatedAt","user_id","weather","wind","xLocation","yLocation","postList","setPostList","url","process","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","LEFT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","timer","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","markers","positions","i","n","idx","outer_id","infowindow","addMarkers","clearTimeout","setTimeout","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","toString","axios","La","Ma","method","headers","withCredentials","then","res","length","getCenter","fcstValue","Box","Box2","EmoticonBox","PostTitle","PostContent","PostBox","PostImg","IconImg","LoadingBoxDiv","Button","button","bgGrey","isText","labels","datasets","backgroundColor","hoverBackgroundColor","data2","label","borderColor","borderWidth","hoverBorderColor","isOnOff","setisOnOff","postBoxHandler","e","elem","target","classList","contains","parentNode","push","pathname","postId","onClick","icon","faChevronDown","faChevronUp","className","post","Container","TopButton","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","alt","scrollTo","top","behavior","Outer","GifTag","IconTag","FlexRow1","FlexRow2","DivTag1","FlexColumn1","FlexColumn2","FlexColumn3","FlexColumn4","FlexCenter1","Footer","alert","href","rel","HomeContainer","FooterDiv","TodaysDate","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","Codi","RightContainer","RightNav1","Home","item","curLocation","weatherData","setWeatherData","curAddress","setcurAddress","currentPosts","setcurrentPosts","right","left","address","curtPost","todaysDate","settodaysDate","currentDate","date","Date","getFullYear","getMonth","getDate","currentTemp","setcurrentTemp","currentWind","setcurrentWind","currentWeather","setcurrentWeather","currentOuter","setcurrentOuter","currentTop","setcurrentTop","currentBottom","setcurrentBottom","tempArr","windArr","weatherArr","outerArr","topArr","bottomArr","getCount","arr","reduce","pv","cv","tempObj","windObj","weatherObj","outerObj","topObj","bottomObj","newTempArr","Object","values","newWindArr","newWeatherArr","newOuterArr","newTopArr","newBottomArr","tempMaxNum","Math","max","windMaxNum","weatherMaxNum","outerMaxNum","topMaxNum","bottomMaxNum","matchKey","obj","maxNum","key","maxTemp","maxWind","maxWeather","maxOuter","maxTop","maxBottom","photoClickHandler","undefined","info","baseDate","nanoid","baseTime","el","Bookmark","like","bookmarkHandler","color","faBookmark","PaginationContainer","attrs","PageNumbersList","ul","ArrowButton","span","PageNumberItem","li","Pagination","unit","dataLength","itemsPerPage","numberButtonClickHandler","numberOfPages","ceil","numberArr","Array","fill","startIdx","setStartIdx","lastIdx","setLastIdx","cutArrInit","cutArr","setCutArr","tempIdxEnd","slice","prev","number","BookMarkPhoto","BookMarkList","BookMark","userInfo","readPostId","postInfo","bookmarkList","setBookmarkList","Number","post_id","post_info","formatDate","dateString","dateOnly","toLocaleDateString","postClickHandler","setCurrentPage","HeaderOuter","TitleAndLogo","isMobileLogo","Center","InputAndSubmit","StyledPostCode","DaumPostcode","Input","input","Buttons","Button3","Buttons3","Cancel","Buttons2","Header","isInput","isLogin","searchEvent","setSearchEvent","onFocus","setOnFocus","setweatherFilter","changeWeatherFilter","onChange","value","placeholder","faSearch","onComplete","roadAddress","faSun","faCloud","faCloudRain","faSnowflake","token","JSON","parse","localStorage","getItem","Authorization","clear","Button1","Button2","Button4","Button5","MenuBar","url1","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faChevronLeft","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","isModalOpen","setIsModalOpen","user_Photo","gender","location","delete","name","ToggleContainer","Desc","Toggle","isOn","setisOn","LoginOuter","LoginStyledArticle","article","LoginInputAndTitle","LoginInputText","LoginValidationListBox","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","google","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","accessToken","split","authorization","accept","email","verified_email","res2","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","KAKAO_LOGIN_URL","REACT_APP_KAKAO_URL","complevent","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","nickName","user_photo","prevInput","prevText","password","assign","faGoogle","KakaoIcon","StyledLi","valid","edit","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","test","newPwdValid","SignUp","emailInput","emailVaildCode","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","codeOn","setCodeOn","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","indexOf","temporary_id","code","FlexArea","FlexArea2","CurPage","MyPost","start","end","current","curPage","setCurPage","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Secret","Write","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","isFilteringBtnActive","setIsFilteringBtnActive","breezy","windy","strong","isFilteringBtnActive2","setIsFilteringBtnActive2","cold","hot","isFilteringBtnActive3","setIsFilteringBtnActive3","selectValueOuter","setSelectValueOuter","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","weatherFunc","select","weatherFunc2","weatherFunc3","random","min","parseFloat","toFixed","getRandomIntInclusive","floor","sFunc","Comment","PostHeader","Title","BookmarkIcon","Profile","WeatherInfo","Icon","TodayCodi","Post","CommentSection","PostComment","CommentList","PostRead","postIds","postData","setPostData","noIdWarning","setNoIdWarning","params","bookmarked","setBookmarked","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","contentMsg","dateObject","hourAndMin","toLocaleTimeString","hour12","comment_user_id","comment_content","substr","Contents","HalfPage","AnimatedP","p","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","LoadingContainer","hide","Loading","FirstPageContainer","FirstPage","ProfileName","UserPhotoDiv","UserPhotoImg","RoomChatDiv","RoomList","FriendInput","FriendInputAndBtn","FriendListDiv","io","connect","Messenger","prevmsg","setprevmsg","newMsgSection","setNewMsgSection","receiver_id","setreceiver_id","joinedRoom","setjoinedRoom","roomInOut","recievemessage","roomListClick","clickRoomName","room","joinRoom","Set","roomNamefunc","required","user_id_sort","sort","roomName","faPlusSquare","replace","ChatList","socket","Messenger2","setroomName","curRoom","setcurRoom","msg","setmsg","msgevent","setmsgevent","setRoomInOut","on","msg2","roomlist","chatcontent","msgfunc","emit","faPaperPlane","opponent","MeDiv","YouDiv","ChatRoom","msgobj","newmsg","GlobalStyle","createGlobalStyle","App","userinfo","login","exact","path","to","initialState","selectWord","editPassword","homePost","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c4bc661c.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\"\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\"\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\"\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\"\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\"\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\"\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\"\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\"\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\"\n\nexport const UPDATE_WEATHERINFO = \"UPDATE_WEATHERINFO\"\nexport const UPDATE_USER_POST = \"UPDATE_USER_POST\"\nexport const UPDATE_POST_ID = \"UPDATE_POST_ID\"\nexport const UPDATE_HOME_POST = \"UPDATE_HOME_POST\"\n\nexport const CHANGE_WHEATER_FILTER = \"CHANGE_WHEATER_FILTER\"\nexport const CHANGE_MAP_PAGE = \"CHANGE_MAP_PAGE\"\nexport const CHANGE_CURROOM = \"CHANGE_CURROOM\"\nexport const CHANGE_NEWMSGSECTION = \"CHANGE_NEWMSGSECTION\"\n\n// actions creator functions\n\nexport const changeNewMsgSection = (newmsg) => {\n    return {\n        type: CHANGE_NEWMSGSECTION,\n        payload: {\n            newmsg,\n        },\n    }\n}\nexport const changeCurRoom = (room) => {\n    return {\n        type: CHANGE_CURROOM,\n        payload: {\n            room,\n        },\n    }\n}\nexport const changeUser = (userinfo) => {\n    return {\n        type: CHANGE_USER_INFO,\n        payload: {\n            ...userinfo,\n        },\n    }\n}\nexport const updateCurrentPage = (current) => {\n    return {\n        type: UPDATE_CURRENT_PAGE,\n        payload: {\n            current,\n        },\n    }\n}\nexport const updateStartEndPage = (start, end) => {\n    return {\n        type: UPDATE_START_END_PAGE,\n        payload: {\n            start,\n            end,\n        },\n    }\n}\n\nexport const changeGender = (usergender) => {\n    return {\n        type: CHANGE_USER_GENDER,\n        payload: usergender,\n    }\n}\nexport const changeSearchword = (searchWord) => {\n    return {\n        type: CHANGE_SEARCH_WORD,\n        payload: searchWord,\n    }\n}\nexport const changeSelectword = (selectWord) => {\n    return {\n        type: CHANGE_SELECT_WORD,\n        payload: selectWord,\n    }\n}\nexport const changeIsLogin = (trueOrFalse) => {\n    return {\n        type: CHANGE_IS_LOGIN,\n        payload: trueOrFalse,\n    }\n}\n\nexport const changeUserPw = (pw) => {\n    return {\n        type: CHANGE_USER_PW,\n        payload: pw,\n    }\n}\n\nexport const changeCurLocation = (lat, lon) => {\n    return {\n        type: CHANGE_CUR_LOCATION,\n        payload: { lat: lat, lon: lon },\n    }\n}\n\nexport const updateWeatherInfo = (data) => {\n    return {\n        type: UPDATE_WEATHERINFO,\n        payload: {\n            data: data,\n        },\n    }\n}\n\nexport const userPosts = (postinfo) => {\n    return {\n        type: UPDATE_USER_POST,\n        payload: {\n            postinfo: postinfo,\n        },\n    }\n}\n\nexport const updatePostId = (pageId) => {\n    return {\n        type: UPDATE_POST_ID,\n        payload: pageId,\n    }\n}\n\nexport const homePost = (homePost) => {\n    return {\n        type: UPDATE_HOME_POST,\n        payload: {\n            homePost: homePost,\n        },\n    }\n}\nexport const changeWeatherFilter = (weatherFilter) => {\n    return {\n        type: CHANGE_WHEATER_FILTER,\n        payload: {\n            weatherFilter: weatherFilter,\n        },\n    }\n}\n\nexport const changeMapPage = (mapPage) => {\n    return {\n        type: CHANGE_MAP_PAGE,\n        payload: {\n            mapPage: mapPage,\n        },\n    }\n}\n","import styled from \"styled-components\";\n\nconst Spinner = styled.img`\n  width: ${props => props.size || '50px'};\n  height: ${props => props.size || '50px'};\n  animation: add-spin linear infinite reverse;\n  animation-duration: ${props => props.duration || '2s'};\n  opacity: .7;\n\n  @media screen and (min-width: 1081px) {\n    width: ${props => props.size || '100px'};\n    height: ${props => props.size || '100px'};\n  }\n`;\n\nexport default function LoadingSpinner({ size, duration }) {\n  return (\n    <Spinner src=\"img/spinner.png\" size={size} duration={duration} />\n  );\n}\n","import styled from \"styled-components\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n    changeSearchword,\n    changeCurLocation,\n    updatePostId,\n} from \"../actions/index\"\nimport $ from \"jquery\"\nimport axios from \"axios\"\nimport { Doughnut, Bar } from \"react-chartjs-2\"\nimport LoadingSpinner from \"./LoadingSpinner\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst ImgContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\nconst PostListModal = styled.div`\n    // border: 1px solid black;\n\n    background-color: white;\n    z-index: 999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    // bottom: 115px;\n    bottom: 110px;\n    width: 100%;\n    height: 50%;\n    overflow: auto;\n    padding: 0.5rem;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 999;\n        position: absolute;\n        right: 0;\n        bottom: 70px;\n        width: 35.3%;\n        height: 75%;\n        overflow: auto;\n    }\n`\nconst SlideModal = styled.div`\n    // border: 1px solid black;\n    background-color: white;\n    z-index: 9999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    // top: 0px;\n    bottom: 70px;\n    // bottom: 130%;\n    // bottom: ${(props) => props.bottom || \"52.9%\"};\n    width: 100%;\n    height: 40px;\n    overflow: auto;\n    display: flex;\n    justify-content: center;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 9999;\n        position: absolute;\n        // position: fixed;\n        // right: 1%;\n\n        bottom: 70px;\n        // bottom: ${(props) => props.bottom || \"52.9%\"};\n        width: 35.3%;\n        height: 4%;\n        overflow: auto;\n        display: flex;\n        justify-content: center;\n    }\n`\nconst GraphModal = styled.div`\n    // border: 1px solid black;\n    width: 50%;\n    display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\n\nconst GraphTitle = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    font-weight: bold;\n\n    @media screen and (min-width: 1081px) {\n    }\n`\nconst GraphTitleDiv = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    // margin-top: 0.5rem;\n    // margin-bottom: 0.5rem;\n    width: 100%;\n    text-align: center;\n    // font-size: 0.8rem;\n    background-color: pink;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst GraphTitleDiv2 = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    width: 100%;\n    text-align: center;\n    font-size: 0.8rem;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst BarGraphFlex = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\nconst BarGraphchild = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\n\nexport default function Location({ bottom }) {\n    console.log(\"mapbox임\")\n    const { searchWord, weatherFilter } = useSelector(\n        (state) => state.itemReducer\n    )\n\n    const [isLoading, setisLoading] = useState(false)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const { kakao } = window\n    const [weatherCount, setWeatherCount] = useState({\n        sunny: 0,\n        cloudy: 0,\n        rainy: 0,\n        snowy: 0,\n    }) //그래프 통계용\n    const [weatherApi, setweatherApi] = useState(0)\n    console.log(kakao)\n    const [postList, setPostList] = useState([\n        {\n            bottom_id: \"\",\n            createdAt: \"Z\",\n            id: null,\n            post_content: \"\",\n            post_photo: \"\",\n            post_title: \"예보가 없는 지역 입니다.\",\n            temp: \"\",\n            top_id: \"\",\n            updatedAt: \"\",\n            user_id: \"\",\n            weather: \"\",\n            wind: \"\",\n            xLocation: null,\n            yLocation: null,\n        },\n    ])\n    console.log(weatherFilter)\n    let url =\n        process.env.REACT_APP_LOCAL_URL || \"https://thereweather.space/api\"\n\n    //---------------\n    useEffect(() => {\n        var container = document.getElementById(\"map\")\n        var options = {\n            center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n            level: 3,\n        }\n        var map = new kakao.maps.Map(container, options) //지도를 생성\n        var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n        map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT) //줌컨트롤 위치 조정\n        // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n\n                var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                    message =\n                        '<div style=\"font-align:center;\"> 현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n                // 마커와 인포윈도우를 표시합니다\n                displayMarker(locPosition, message)\n                console.log(locPosition)\n\n                console.log(lat) //위도\n                console.log(lon) //경도\n                dispatch(changeCurLocation(lat, lon))\n            })\n        } else {\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n            var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n                message = \"geolocation을 사용할수 없어요..\"\n\n            displayMarker(locPosition, message)\n        }\n        // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n\n        function displayMarker(locPosition, message) {\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: locPosition,\n            })\n\n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable,\n            })\n\n            // 인포윈도우를 마커위에 표시합니다\n            infowindow.open(map, marker)\n\n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n        }\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder()\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(searchWord, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                // var marker = new kakao.maps.Marker({\n                //     map: map,\n                //     position: coords,\n                // })\n                // console.log(arguments)\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // var infowindow = new kakao.maps.InfoWindow({\n                //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n                // })\n                // infowindow.open(map, marker)\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                dispatch(changeSearchword(searchWord))\n                map.setCenter(coords)\n            }\n        })\n\n        //클릭이벤트 함수\n        kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n            // 클릭한 위도, 경도 정보를 가져옵니다\n            var latlng = mouseEvent.latLng\n            // 마커 위치를 클릭한 위치로 옮깁니다\n            // marker.setPosition(latlng)\n            //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n            var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n            message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n            console.log(message)\n        })\n        //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n            minLevel: 9, // 클러스터 할 최소 지도 레벨\n        })\n\n        // 데이터를 가져오기 위해 jQuery를 사용합니다\n        // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n        $.get(\n            url + `/post/location?weather=${weatherFilter.weatherFilter}`,\n            function (data) {\n                // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n                // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n                // console.log(data)\n                // console.log($(data.positions))\n                // console.log($(data.positions[0]))\n\n                var markers = $(data.positions).map(function (i, position) {\n                    return new kakao.maps.Marker({\n                        position: new kakao.maps.LatLng(\n                            position.xLocation,\n                            position.yLocation\n                        ),\n                    })\n                })\n\n                console.log(markers)\n                console.log($(data.positions)[0])\n                $(data.positions).map((n, idx) => {\n                    console.log($(data.positions))\n                    // $(data.positions).map((el) => {\n                    //     console.log(el)\n                    //     if ($(data.positions)[el].weather === \"sunny\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             sunny: weatherCount.sunny + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"cloudy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             cloudy: weatherCount.cloudy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"rainy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             rainy: weatherCount.rainy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"snowy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             snowy: weatherCount.snowy + 1,\n                    //         })\n                    //     }\n                    // })\n\n                    var iwContent = `\n                <container style=\"border:3px solid pink; padding:5px; height:20rem; width:15rem; display:flex; flex-direction: row; overflow: auto;\">\n                    <box style=\"\">\n                        <h3>${$(data.positions)[n].post_title}</h3>\n                            <box style=\"display:flex; flex-direction: row;\">\n                            \n                        ${\n                            $(data.positions)[n].weather === \"sunny\"\n                                ? \"<img src='img/icons-write/sunny.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"cloudy\"\n                                ? \"<img src='img/icons-write/cloudy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"rainy\"\n                                ? \"<img src='img/icons-write/rainy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"snowy\"\n                                ? \"<img src='img/icons-write/snowy.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].wind === \"breezy\"\n                                ? \"<img src='img/icons-write/breezy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"windy\"\n                                ? \"<img src='img/icons-write/windy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"strong\"\n                                ? \"<img src='img/icons-write/strong.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].temp === \"cold\"\n                                ? \"<img src='img/icons-write/cold.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].temp === \"hot\"\n                                ? \"<img src='img/icons-write/hot.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].outer_id === \"가디건\"\n                                ? \"<img src='img/codi/가디건.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"자켓\"\n                                ? \"<img src='img/codi/자켓.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"얇은코트\"\n                                ? \"<img src='img/codi/얇은코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"두꺼운코트\"\n                                ? \"<img src='img/codi/두꺼운코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"패딩\"\n                                ? \"<img src='img/codi/패딩.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"default\"\n                                ? \"<img src='img/codi/default.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].top_id === \"반팔\"\n                                ? \"<img src='img/codi/반팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"셔츠\"\n                                ? \"<img src='img/codi/셔츠.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"민소매\"\n                                ? \"<img src='img/codi/민소매.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"긴팔\"\n                                ? \"<img src='img/codi/긴팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"니트\"\n                                ? \"<img src='img/codi/니트.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].bottom_id === \"반바지\"\n                                ? \"<img src='img/codi/반바지.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].bottom_id === \"긴바지\"\n                                ? \"<img src='img/codi/긴바지.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        </box>\n                        <img src=${\n                            $(data.positions)[n].post_photo\n                        } style=\"padding:5px; max-height:100%; max-width:100%;\"></img>\n                        <div>${$(data.positions)[n].post_content}</div>\n                    </box>\n                </container>\n\n\n                             `, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                        iwRemoveable = true // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n                    // 인포윈도우를 생성합니다\n                    var infowindow = new kakao.maps.InfoWindow({\n                        content: iwContent,\n                        removable: iwRemoveable,\n                    })\n                    kakao.maps.event.addListener(\n                        markers[n],\n                        \"click\",\n                        function () {\n                            // 마커 위에 인포윈도우를 표시합니다\n                            infowindow.open(map, markers[n])\n                        }\n                    )\n                })\n\n                clusterer.addMarkers(markers)\n            }\n        )\n\n        let timer\n        // 지도가 이동, 확대, 축소로 인해 지도영역이 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n        kakao.maps.event.addListener(map, \"idle\", function () {\n            setisLoading(false)\n            if (timer) {\n                clearTimeout(timer)\n            }\n\n            timer = setTimeout(function () {\n                console.log(\"지도 위치가 변경 될 때마다 API요청\")\n                // setWeatherCount({\n                //     sunny: 0,\n                //     cloudy: 0,\n                //     rainy: 0,\n                //     snowy: 0,\n                // })\n                // 지도 영역정보를 얻어옵니다\n                var bounds = map.getBounds()\n\n                // 영역정보의 남서쪽 정보를 얻어옵니다\n                var swLatlng = bounds.getSouthWest()\n\n                // 영역정보의 북동쪽 정보를 얻어옵니다\n                var neLatlng = bounds.getNorthEast()\n\n                var message =\n                    \"영역좌표는 남서쪽 위도, 경도는  \" +\n                    swLatlng.toString() +\n                    \"이고\"\n                message +=\n                    \"북동쪽 위도, 경도는  \" + neLatlng.toString() + \"입니다 \"\n\n                // setTimeout(() => {\n                console.log(message)\n                console.log(swLatlng)\n                console.log(neLatlng)\n                axios({\n                    url:\n                        url +\n                        `/post/list?top=${neLatlng.La}&bottom=${swLatlng.La}&left=${swLatlng.Ma}&right=${neLatlng.Ma}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setPostList(res.data)\n                    console.log(postList)\n                    let sunny = 0\n                    let cloudy = 0\n                    let rainy = 0\n                    let snowy = 0\n                    for (let n = 0; n < res.data.length; n++) {\n                        if (res.data[n].weather === \"sunny\") {\n                            sunny = sunny + 1\n                        } else if (res.data[n].weather === \"cloudy\") {\n                            cloudy++\n                        } else if (res.data[n].weather === \"rainy\") {\n                            rainy++\n                        } else if (res.data[n].weather === \"snowy\") {\n                            snowy++\n                        }\n                    }\n                    setWeatherCount({\n                        sunny: sunny,\n                        cloudy: cloudy,\n                        rainy: rainy,\n                        snowy: snowy,\n                    })\n                })\n\n                //지도중심좌표 기준으로 기상청 데이터를 받아올예정 -hoon\n                var latlng = map.getCenter()\n\n                axios({\n                    url: url + `/map2?lat=${latlng.Ma}&lon=${latlng.La}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setweatherApi(res.data.fcstValue)\n                })\n            }, 1000)\n            setisLoading(true)\n        })\n    }, [\n        kakao.maps.LatLng,\n        kakao.maps.Marker,\n        kakao.maps.event,\n        kakao.maps.Map,\n        searchWord,\n        weatherFilter,\n    ])\n\n    const Box = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n        // height: 50%;\n        // border: 1px solid black;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const Box2 = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        // width: 10000px;\n\n        width: 50%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const EmoticonBox = styled.div`\n        display: flex;\n        flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostTitle = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        // border: 1px solid black;\n        text-align: center;\n        background-color: pink;\n        border-radius: 10%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostContent = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostBox = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n\n        padding: 0.5rem;\n\n        &:hover {\n            background-color: #f5f5f5;\n        }\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostImg = styled.img`\n        width: 100%;\n        border-radius: 20%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const IconImg = styled.img`\n        width: 20%;\n        cursor: pointer;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const LoadingBoxDiv = styled.div`\n        // margin-top: 50%;\n        display: flex;\n        justify-content: center;\n        align-item: center;\n        width: 100%;\n        // border: 1px solid black;\n        flex-direction: column;\n        @media screen and (min-width: 1081px) {\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            align-item: center;\n            width: 100%;\n            border: 1px solid black;\n            flex-direction: column;\n        }\n    `\n    const Button = styled.button`\n        background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n        color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n        margin: 0.1rem;\n        // border: 1px solid black;\n    `\n    console.log(weatherCount)\n    const data = {\n        labels: [\"맑음\", \"구름\", \"비\", \"눈\"],\n        datasets: [\n            {\n                data: [\n                    weatherCount.sunny,\n                    weatherCount.cloudy,\n                    weatherCount.rainy,\n                    weatherCount.snowy,\n                ],\n                backgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"silver\"],\n                hoverBackgroundColor: [\"yellow\", \"black\", \"blue\", \"#d9d9d9\"],\n            },\n        ],\n    }\n    const data2 = {\n        labels: [\"동네 예보\", \"기상청\"],\n        datasets: [\n            {\n                label: \"강수 확률\",\n                backgroundColor: \"#697cfa\",\n                borderColor: \"#0022ff\",\n                borderWidth: 1,\n                hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                hoverBorderColor: \"rgba(255,99,132,1)\",\n                data: [\n                    ((weatherCount.rainy + weatherCount.snowy) /\n                        (weatherCount.sunny +\n                            weatherCount.cloudy +\n                            weatherCount.rainy +\n                            weatherCount.snowy)) *\n                        100,\n                    weatherApi,\n                ],\n            },\n        ],\n    }\n\n    const [isOnOff, setisOnOff] = useState(true)\n\n    // postbox를 클릭하면 postread로 연결됩니다\n    const postBoxHandler = (e) => {\n        let elem = e.target\n\n        while (!elem.classList.contains(\"postbox\")) {\n            elem = elem.parentNode\n            if (elem.classList.contains(\"mapModal\")) {\n                elem = null\n                return\n            }\n        }\n\n        // console.log('**mapbox click id**',elem.id);\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n    // postbox를 클릭하면 postread로 연결됩니다\n\n    return (\n        <>\n            <ImgContainer id=\"map\"></ImgContainer>\n            {isOnOff ? (\n                <SlideModal>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(false)}\n                            icon={faChevronDown}\n                        />\n                    </Button>\n                </SlideModal>\n            ) : (\n                <SlideModal bottom={\"70px;\"}>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(true)}\n                            icon={faChevronUp}\n                        />\n                    </Button>\n                </SlideModal>\n            )}\n            {isOnOff ? (\n                <PostListModal>\n                    {!isLoading ? (\n                        <LoadingBoxDiv>\n                            <LoadingSpinner size={\"100%;\"} />\n                        </LoadingBoxDiv>\n                    ) : (\n                        <div className=\"mapModal\">\n                            <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n                            <GraphTitle>\n                                <GraphTitleDiv2>\n                                    동네 예보 날씨 비율\n                                </GraphTitleDiv2>\n                                <GraphTitleDiv2>\n                                    동네 예보 vs 기상청예보\n                                </GraphTitleDiv2>\n                            </GraphTitle>\n                            <GraphModal>\n                                <Doughnut data={data} />\n                                <BarGraphFlex>\n                                    <BarGraphchild>\n                                        <Bar data={data2} />\n                                    </BarGraphchild>\n                                </BarGraphFlex>\n                            </GraphModal>\n                            <GraphTitleDiv>동네 예보</GraphTitleDiv>\n                            {postList.map((post) => {\n                                return (\n                                    // <PostBox onClick={() => console.log(post)}>\n                                    <PostBox\n                                        className=\"postbox\"\n                                        onClick={postBoxHandler}\n                                        key={post.id}\n                                        id={post.id}\n                                    >\n                                        <Box className=\"box\">\n                                            <PostImg\n                                                className=\"postImage\"\n                                                src={`${post.post_photo}`}\n                                            />\n                                            <EmoticonBox>\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.weather}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.wind}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.temp}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.outer_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.top_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.bottom_id}.png`}\n                                                />\n                                            </EmoticonBox>\n                                        </Box>\n                                        <Box2>\n                                            <PostTitle>{`${post.post_title}`}</PostTitle>\n                                            <PostContent>{`${post.post_content}`}</PostContent>\n                                        </Box2>\n                                    </PostBox>\n                                )\n                            })}\n                        </div>\n                    )}\n                </PostListModal>\n            ) : (\n                <></>\n            )}\n        </>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport { changeMapPage } from \"../actions/index\"\n\nconst Container = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100%;\n\n    position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // max-width: 100%;\n        width: 100%;\n        position: relative;\n    }\n`\n\nexport default function Map() {\n    const dispatch = useDispatch()\n    console.log(\"map임\")\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    useEffect(() => {\n        dispatch(changeMapPage(true))\n    }, [])\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","// 스크롤 탑 버튼\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst Button = styled.div`\n  /* width: 100%; */\n  height: 200px;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: flex-end;\n  right: 0;\n  bottom: 0;\n  transition: all 0.3s;\n  display: none;\n  img{\n    width: 5rem;\n    height: 5rem;\n    margin-right: 2vh;\n    opacity: 0.7;\n    background-color: #FFFFFF;\n    border-radius: 50%;\n  }\n\n  @media screen and (max-width: 1081px) {\n    display: block;\n    height: 170px;\n    img{\n      width: 4rem;\n      height: 4rem;\n      margin-right: 3vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 130px;\n    img{\n      width: 3rem;\n      height: 3rem;\n      margin-right: 2vh;\n    }\n  }\n`\n\nexport default function TopButton() {\n  // top button\n  const [ScrollY, setScrollY] = useState(0);\n  const [btnStatus, setBtnStatus] = useState(false);  // 버튼 상태\n\n  // console.log(window.pageYOffset)\n  // console.log(btnStatus)\n\n  const handleFollow = () => {\n    setScrollY(window.scrollY)\n    if(ScrollY > 200){  // 200 이상이면 버튼이 보임\n      setBtnStatus(true)\n    }else{  // 200 이하일때 버튼이 사라짐\n      setBtnStatus(false)\n    }\n  }\n\n  // 클릭시 위로 올라감\n  const scrollToTop = () => {\n    // e.preventDefault() // 새로고침 방지\n    window.scrollTo({top: 0, behavior: 'smooth'}) // 위로 올라감\n    setScrollY(0);  // 올라가면 다시 0으로 초기화\n    setBtnStatus(false); // 버튼 다시 사라짐\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleFollow)\n    return () => {\n      window.removeEventListener('scroll', handleFollow)\n    }\n  })\n\n  return(\n    <Button>\n      {\n        btnStatus?\n        <img\n          src={`${process.env.PUBLIC_URL}img/scroll-up.png`} alt=\"top\"\n          onClick={scrollToTop}\n        /> : null\n      }\n    </Button>\n  )\n}","import React from \"react\"\n\nimport styled from \"styled-components\"\n\nconst Outer = styled.div`\n    /* margin: 1.5rem; */\n    margin: 0 auto;\n    font-family: \"IBM Plex Sans KR\", sans-serif;\n\n    background-color: #ffffff;\n\n    height: 150px;\n\n    background-color: white;\n    /* display: flex; */\n    /* align-items: center; */\n\n    //모바일\n    @media screen and (max-width: 1080px) {\n        // background-color: red;\n        // margin-bottom: 2rem;\n        width: 100%;\n    }\n    @media screen and (max-width: 511px) {\n        // background-color: red;\n        // margin-bottom: 2rem;\n        width: 100%;\n    }\n`\n\nconst GifTag = styled.img`\n    // width: 100%;\n    // margin-bottom: 5px;\n    // margin-left: -21px;\n    @media screen and (max-width: 1080px) {\n        display: none;\n    }\n`\nconst ImgTag = styled.img`\n    width: 63px;\n    margin-bottom: 5px;\n    margin-left: -21px;\n    @media screen and (max-width: 1080px) {\n        display: none;\n    }\n`\nconst IconTag = styled.img`\n    width: 20px;\n    margin-bottom: -2px;\n`\nconst FlexRow1 = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    margin: 0 auto;\n    padding-top: 50px; // 수직 가운데추가\n`\nconst FlexRow2 = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin: 7px;\n\n    & button {\n        font-weight: bold;\n        background-color: transparent;\n        color: black;\n\n        &:hover {\n            background-color: #fedcaa;\n        }\n    }\n`\nconst DivTag1 = styled.div`\n    color: black;\n    font-weight: bold;\n    font-size: 14px;\n`\nconst FlexColumn1 = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media screen and (max-width: 1080px) {\n        margin-top: 1.5rem;\n        // display: none;\n    }\n`\nconst FlexColumn2 = styled.div`\n    // display: flex;\n    // flex-direction: column;\n    @media screen and (max-width: 1080px) {\n        display: none;\n    }\n`\nconst FlexColumn3 = styled.div`\n    // display: flex;\n    // flex-direction: column;\n    @media screen and (max-width: 1080px) {\n        display: none;\n    }\n`\nconst FlexColumn4 = styled.div`\n    display: none;\n    // display: flex;\n    // flex-direction: column;\n    @media screen and (max-width: 1080px) {\n        display: flex;\n        flex-direction: column;\n    }\n`\nconst FlexCenter1 = styled.div`\n    display: flex;\n    // flex-direction: row;\n    justify-content: center;\n`\n\nexport default function Footer(props) {\n    return (\n        <Outer className=\"footerComponent\">\n            <FlexRow1>\n                <FlexColumn2>\n                    <GifTag src={\"../img/footerGif.gif\"} alt={\"\"} />\n                    {/* <imgTag src={\"../img/footerGif.gif\"} alt={\"\"} /> */}\n\n                    {/* <ImgTag src={\"../img/image3.png\"} alt={\"\"} /> */}\n                </FlexColumn2>\n                <FlexColumn3>\n                    <FlexRow2>\n                        <button\n                            onClick={() => alert(\"준비중 입니다.\")}\n                        >{`개인정보처리방침 `}</button>\n                        <div>&nbsp;</div>\n                        <DivTag1>{\"|\"}</DivTag1>\n                        <div>&nbsp;</div>\n                        <button onClick={() => alert(\"준비중 입니다.\")}>\n                            {\" \"}\n                            이용약관\n                        </button>\n                    </FlexRow2>\n                    <FlexCenter1>\n                        <DivTag1>\n                            Copyright © For Real. All Rights Reserved.\n                        </DivTag1>\n                    </FlexCenter1>\n                </FlexColumn3>\n                <FlexColumn1>\n                    <DivTag1>\n                        박경훈&nbsp;\n                        <IconTag src={\"../img/git.png\"} alt={\"\"} />\n                        <a\n                            href=\"https://github.com/kingshuny\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Git\n                        </a>{\" \"}\n                        |&nbsp;\n                        <IconTag src={\"../img/blog.png\"} alt={\"\"} />\n                        <a\n                            href=\"https://smartstyle.tistory.com\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Blog{\" \"}\n                        </a>\n                        |&nbsp;\n                        <IconTag src={\"../img/email.png\"} alt={\"\"} />\n                        nicecap77@gmail.com\n                    </DivTag1>\n                    <DivTag1>\n                        오선화&nbsp;\n                        <IconTag src={\"../img/git.png\"} alt={\"\"} />\n                        <a\n                            href=\"https://github.com/xuanhee16\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Git\n                        </a>{\" \"}\n                        |&nbsp;\n                        <IconTag src={\"../img/blog.png\"} alt={\"\"} />\n                        <a\n                            href=\"https://xuanhee16.github.io\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Blog{\" \"}\n                        </a>\n                        |&nbsp;\n                        <IconTag src={\"../img/email.png\"} alt={\"\"} />\n                        xuanhee16@gmail.com\n                    </DivTag1>\n                    <DivTag1>\n                        홍현정&nbsp;\n                        <IconTag src={\"../img/git.png\"} alt={\"\"} />\n                        <a\n                            href=\"https://github.com/emily-hong\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Git\n                        </a>{\" \"}\n                        |&nbsp;\n                        <IconTag\n                            src={\"../img/blog.png\"}\n                            alt={\"\"}\n                            rel=\"noreferrer\"\n                        />\n                        <a\n                            href=\"https://emilyhong4659.notion.site/emilyhong4659/Today-I-Learned-9f74900b637947199c72d1220cc3451d\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Blog{\" \"}\n                        </a>\n                        |&nbsp;\n                        <IconTag src={\"../img/email.png\"} alt={\"\"} />\n                        emilyhong4659@gmail.com\n                    </DivTag1>\n                </FlexColumn1>\n            </FlexRow1>\n            <FlexColumn4>\n                <FlexRow2>\n                    <button\n                        onClick={() => alert(\"준비중 입니다.\")}\n                    >{`개인정보처리방침 `}</button>\n                    <div>&nbsp;</div>\n                    <DivTag1>{\"|\"}</DivTag1>\n                    <div>&nbsp;</div>\n                    <button onClick={() => alert(\"준비중 입니다.\")}>\n                        {\" \"}\n                        이용약관\n                    </button>\n                </FlexRow2>\n                <FlexCenter1>\n                    <DivTag1>\n                        Copyright © For Real. All Rights Reserved.\n                    </DivTag1>\n                </FlexCenter1>\n            </FlexColumn4>\n        </Outer>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { updateWeatherInfo, updatePostId } from \"../actions/index\"\nimport TopButton from \"../components/TopButton\"\nimport { useHistory } from \"react-router-dom\"\nimport { nanoid } from \"nanoid\"\n// import Loading from \"./Loading\";\nimport Footer from \"../components/Footer\"\n\nconst HomeContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 100vh;\n    padding-right: 5vh;\n    background-color: var(--page-bg-color);\n    ul {\n        list-style: none;\n    }\n\n    @media screen and (min-width: 3000px) {\n        width: 80%;\n    }\n\n    @media screen and (min-width: 1500px) {\n        margin: 0 auto;\n        width: 90%;\n        border: 1px solid #aaa;\n    }\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        margin: 0 auto;\n        padding: 0 2vw;\n        border: 1px solid #aaa;\n        width: 85%;\n        height: 100%;\n    }\n    @media screen and (max-width: 900px) {\n        width: 100%;\n    }\n`\n\nconst FooterDiv = styled.div`\n    //모바일\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        //pc\n        display: block;\n    }\n`\n\n// 날짜\nconst TodaysDate = styled.div`\n    background-color: var(--page-bg-color);\n    margin: 0 auto;\n    height: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    #curDate {\n        padding-left: 2vw;\n    }\n    #curLocation {\n        padding-right: 2vw;\n    }\n\n    @media screen and (min-width: 1500px) {\n        width: 90%;\n        #curDate {\n            padding-left: 0;\n        }\n        #curLocation {\n            padding-right: 0;\n        }\n    }\n    @media screen and (max-width: 1081px) {\n        width: 85%;\n    }\n    @media screen and (max-width: 900px) {\n        width: 100%;\n    }\n    @media screen and (max-width: 500px) {\n        font-size: 15px;\n    }\n    @media screen and (max-width: 375px) {\n        font-size: 12px;\n    }\n`\n\n// 왼쪽 container\nconst LeftContainer1 = styled.div`\n    display: flex;\n    gap: 0.1rem;\n    flex-direction: row;\n    width: 40vw;\n    flex-wrap: wrap;\n    .weatherInfo {\n        text-align: center;\n        line-height: 3rem;\n        li {\n            align-items: center;\n        }\n        img {\n            width: 2rem;\n            height: 2rem;\n            vertical-align: middle;\n        }\n    }\n    .codiInfo {\n        text-align: center;\n    }\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        width: 100%;\n    }\n    @media screen and (max-width: 300px) {\n        img {\n            width: 3rem;\n            height: 3rem;\n        }\n    }\n`\n\n// 00구 주민예보\nconst LeftNav1 = styled.nav`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 30px 5px 5px 5px;\n    padding: 10px;\n    line-height: 3vh;\n    height: 25%;\n    background-color: var(--page-bg-color);\n    p {\n        font-size: 1.2rem;\n        margin-bottom: 1vh;\n    }\n    @media screen and (max-width: 1081px) {\n        margin-top: 5px;\n    }\n\n    @media screen and (max-width: 375px) {\n        margin-top: 10px;\n        line-height: 4vh;\n        border-bottom: 1px solid #8e8e8e;\n    }\n`\n// 기상청 일기예보\nconst LeftNav2 = styled.div`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 5px;\n    padding: 10px;\n    line-height: 3vh;\n    height: 35%;\n    background-color: var(--page-bg-color);\n    p {\n        font-size: 1.2rem;\n        margin-bottom: 1vh;\n    }\n    @media screen and (max-width: 375px) {\n        line-height: 4vh;\n        border-bottom: 1px solid #8e8e8e;\n    }\n`\n// 00구 날씨 기반 추천 코디\nconst LeftNav3 = styled.div`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 3px;\n    padding: 10px;\n    background-color: var(--page-bg-color);\n    height: 35%;\n    p {\n        font-size: 1.2rem;\n        margin: 2vh 0;\n    }\n    .codiInfo {\n        height: 80%;\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n    }\n    @media screen and (max-width: 1081px) {\n        height: 30vh;\n        flex-basis: 100vh;\n        flex-grow: 2;\n    }\n    @media screen and (max-width: 375px) {\n        p {\n            font-size: 1.2rem;\n            margin: 2vh 0;\n        }\n        .codiInfo {\n            /* border: 1px solid hotpink; */\n            height: 80%;\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n        }\n        @media screen and (max-width: 1081px) {\n            height: 30vh;\n            flex-basis: 100vh;\n            flex-grow: 2;\n        }\n        @media screen and (max-width: 375px) {\n            border-bottom: 1px solid #8e8e8e;\n            p {\n                font-size: 1rem;\n                margin: 1vh 0;\n            }\n        }\n    }\n`\n// 코디 이미지\nconst Codi = styled.img`\n    width: 7rem;\n    height: 7rem;\n    border: purple;\n    @media screen and (max-width: 400px) {\n        width: 5rem;\n        height: 5rem;\n    }\n`\n\n// 오른쪽 container\nconst RightContainer = styled.div`\n    display: grid;\n    /* height:100vh; */\n    width: 80vw;\n    grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-area: \"nav nav\" \"main main\" \"main main\";\n    grid-gap: 0.1rem;\n    transition: all 0.01s ease-in-out;\n    .userPost {\n        &:hover {\n            border-bottom: 1px solid #fafafa;\n        }\n    }\n\n    @media (max-width: 600px) {\n        .userPost:nth-last-child(1) {\n            display: none;\n        }\n        grid-template-rows: 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"nav\"\n            \"main\";\n    }\n    .userPost {\n        text-align: center;\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        width: 100%;\n    }\n`\n\n// '00구 주민예보글'\nconst RightNav1 = styled.nav`\n    margin-top: 0.8rem;\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \"nav nav\";\n    grid-column: 1 / 4;\n    grid-row: 1 / 2;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1vh 1vh;\n    #location {\n        font-size: 1.5rem;\n        color: #8e8e8e;\n    }\n    #moreView {\n        color: #336fc9;\n    }\n    @media screen and (max-width: 600px) {\n        grid-column: 1 / 3;\n        #location {\n            font-size: 1rem;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Home() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { item, curLocation } = useSelector((state) => state.itemReducer)\n    console.log(item)\n    console.log(\"카카오 위도 : \", curLocation.lat) // map 페이지 거쳐야함\n    console.log(\"카카오 경도 : \", curLocation.lon)\n\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n\n    const [weatherData, setWeatherData] = useState()\n\n    useEffect(() => {\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                let lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n                console.log(lat, lon) //브라우저에 찍힘\n                axios({\n                    url: url + \"/map\",\n                    method: \"post\",\n                    data: { lat: lat, lon: lon },\n                    withCredentials: true,\n                }).then((res) => {\n                    //console.log(res.data)\n                    //console.log(res.data.item)\n                    setWeatherData(res.data)\n                    dispatch(updateWeatherInfo(res.data))\n                })\n            })\n        }\n    }, [])\n\n    // 현재 위치 주소\n    const [curAddress, setcurAddress] = useState(\"\")\n    // 최근 게시물(위도, 경도, 지역범위 확인)\n    const [currentPosts, setcurrentPosts] = useState([])\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                let lat = curLocation.lat, // 위도\n                    lon = curLocation.lon // 경도\n                // 37.5525698 127.0783197\n                /*\n          소수 7째자리까지 : Math.floor(a * 10000000) /10000000\n\n          남서쪽 위도, 경도는  (37.5262196, 127.0449971)이고\n          북동쪽 위도, 경도는  (37.5684781, 127.1200016)입니다 \n        */\n\n                // left(37.5262196) , right(37.5684781) : 0.0422585(0.04225850000000264), 각 0.02112925\n                // bottom(127.0449971) , top(127.1200016) : 0.0750045(0.07500449999999148), 각 0.03750225\n                // 현재 위도, 경도의 동,서,남,북 범위 설정 (소수 7째자리까지)\n                let right = lat + 0.02112925\n                let left = lat - 0.02112925\n                let top = lon + 0.03750225\n                let bottom = lon - 0.03750225\n\n                console.log(right, left, top, bottom)\n\n                axios({\n                    url: url + \"/home\",\n                    method: \"post\",\n                    data: {\n                        lat: lat,\n                        lon: lon,\n                        right: right,\n                        left: left,\n                        top: top,\n                        bottom: bottom,\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    // console.log('res : ', res.data.address);\n                    console.log(\"address : \", res.data.address)\n                    console.log(\"게시글 데이터 : \", res.data.curtPost)\n                    setcurrentPosts(res.data.curtPost) // 주민예보글 렌더링 부분\n                    setcurAddress(res.data.address)\n\n                    // dispatch(homePost(res.data))\n                })\n            })\n        }\n    }, [])\n\n    // 날짜\n    const [todaysDate, settodaysDate] = useState(\"\")\n    useEffect(() => {\n        let date = new Date()\n        const formatDate = (currentDate) => {\n            let formatted = `${currentDate.getFullYear()}년 ${\n                currentDate.getMonth() + 1\n            }월 ${currentDate.getDate()}일`\n            return formatted\n        }\n        settodaysDate(formatDate(date))\n    })\n\n    // 날씨, 코디 가져오기, 추후 수정\n    let [currentTemp, setcurrentTemp] = useState(\"\")\n    let [currentWind, setcurrentWind] = useState(\"\")\n    let [currentWeather, setcurrentWeather] = useState(\"\")\n    let [currentOuter, setcurrentOuter] = useState(\"\")\n    let [currentTop, setcurrentTop] = useState(\"\")\n    let [currentBottom, setcurrentBottom] = useState(\"\")\n\n    useEffect(() => {\n        let tempArr = [] // 체감온도\n        let windArr = [] // 바람세기\n        let weatherArr = [] // 날씨상태\n        let outerArr = [] // 겉옷\n        let topArr = [] // 상의\n        let bottomArr = [] // 하의\n\n        // 해당 key만 가져오기\n        for (let i = 0; i < currentPosts.length; i++) {\n            tempArr.push(currentPosts[i].temp) // temp키만 가져옴\n            windArr.push(currentPosts[i].wind)\n            weatherArr.push(currentPosts[i].weather)\n\n            outerArr.push(currentPosts[i].outer_id)\n            topArr.push(currentPosts[i].top_id)\n            bottomArr.push(currentPosts[i].bottom_id)\n        }\n\n        // 해당 키의 중복개수세는 함수\n        function getCount(arr) {\n            return arr.reduce((pv, cv) => {\n                pv[cv] = (pv[cv] || 0) + 1\n                return pv\n            }, {})\n        }\n\n        let tempObj = getCount(tempArr) // {hot: 6, cold: 3}\n        let windObj = getCount(windArr)\n        let weatherObj = getCount(weatherArr)\n        let outerObj = getCount(outerArr)\n        let topObj = getCount(topArr)\n        let bottomObj = getCount(bottomArr)\n\n        // 최대값구하기 : 객체 -> 배열\n        let newTempArr = Object.values(tempObj) // [6, 3]\n        let newWindArr = Object.values(windObj)\n        let newWeatherArr = Object.values(weatherObj)\n        let newOuterArr = Object.values(outerObj)\n        let newTopArr = Object.values(topObj)\n        let newBottomArr = Object.values(bottomObj)\n        // 최대값\n        let tempMaxNum = Math.max(...newTempArr) // 6\n        let windMaxNum = Math.max(...newWindArr)\n        let weatherMaxNum = Math.max(...newWeatherArr)\n        let outerMaxNum = Math.max(...newOuterArr)\n        let topMaxNum = Math.max(...newTopArr)\n        let bottomMaxNum = Math.max(...newBottomArr)\n\n        // 최대값과 일치하는 key 추출\n        function matchKey(obj, maxNum) {\n            // 객체, 최대값\n            for (let key in obj) {\n                if (obj[key] === maxNum) {\n                    return key\n                }\n            }\n        }\n\n        // 화면에 나타날 key\n        let maxTemp = matchKey(tempObj, tempMaxNum)\n        let maxWind = matchKey(windObj, windMaxNum)\n        let maxWeather = matchKey(weatherObj, weatherMaxNum)\n        let maxOuter = matchKey(outerObj, outerMaxNum)\n        let maxTop = matchKey(topObj, topMaxNum)\n        let maxBottom = matchKey(bottomObj, bottomMaxNum)\n\n        setcurrentTemp(maxTemp)\n        setcurrentWind(maxWind)\n        setcurrentWeather(maxWeather)\n        setcurrentOuter(maxOuter)\n        setcurrentTop(maxTop)\n        setcurrentBottom(maxBottom)\n\n        console.log(\"currentTemp : \", currentTemp)\n        console.log(\"currentWind : \", currentWind)\n        console.log(\"currentWeather : \", currentWeather)\n        console.log(\"outer : \", currentOuter) // 안나옴\n    })\n\n    // 게시물 사진 클릭\n    const photoClickHandler = (e) => {\n        // console.log(e.target.id); // 게시물id 전달\n        let elem = e.target\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n\n    return (\n        <div className=\"homecontainer\">\n            {/* <Loading /> */}\n            <TopButton />\n            <TodaysDate>\n                <p id=\"curDate\">날짜 : {todaysDate}</p>\n                <p id=\"curLocation\">위치 : {curAddress}</p>\n            </TodaysDate>\n            <HomeContainer>\n                <LeftContainer1>\n                    <LeftNav1>\n                        <p>주민예보</p>\n                        <div className=\"weatherInfo\">\n                            {currentTemp === undefined &&\n                            currentWind === undefined &&\n                            currentWeather === undefined ? (\n                                <p>현재 날씨 데이터가 없습니다 :(</p>\n                            ) : (\n                                <ul>\n                                    <li>\n                                        <span>현재위치 체감온도 </span>\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${currentTemp}.png`}\n                                            alt=\"온도\"\n                                        />\n                                    </li>\n                                    <li>\n                                        <span>현재위치 바람세기 </span>\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${currentWind}.png`}\n                                            alt=\"바람\"\n                                        />\n                                    </li>\n                                    <li>\n                                        <span>현재위치 날씨상태 </span>\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${currentWeather}.png`}\n                                            alt=\"날씨\"\n                                        />\n                                    </li>\n                                </ul>\n                            )}\n                        </div>\n                    </LeftNav1>\n                    <LeftNav2>\n                        {/* <p>기상청 일기예보</p>\n                      { weatherData && weatherData.item.map((info, index) => {\n                        return (\n                          <div className=\"weatherInfo\" key={index}>\n                           <ul>\n                            <li className=\"weathers date\">날짜: {info.baseDate[0]}</li> \n                            <li className=\"weathers time\">기준 예보시각: {info.baseTime[0]}</li> \n                           </ul>\n                          </div>\n\n                        )\n                      })} */}\n                        <p>기상청 일기예보</p>\n                        <div className=\"weatherInfo\">\n                            <ul>\n                                {/* {console.log(weatherData.item)}  */}\n                                {/* weatherData -> {item: Array(30)}, weatherData.item -> [ baseDate: '20211106',baseTime: '2130',category: 'T1H', fcstDate: '20211107', fcstTime: '0300', fcstValue: '10', nx: 59, ny: 128, ... ] */}\n                                {/* { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>날짜:{info.baseDate}</li> })[0] }\n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>기준 예보시각: {info.baseTime}</li> })[0] }\n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 기온: {info.fcstValue}℃</li> })[24] } \n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 바람세기: {info.fcstValue  < \"9\" ? \"바람세기 약하거나 약간 강함\" : info.fcstValue  < \"14\" ? \"바람세기 강함\" : \"바람세기 매우 강함\" }</li> })[54] } \n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 날씨상태: {info.fcstValue === \"0\" ? \"맑음\" : info.fcstValue === \"1\" ? \"비\" : info.fcstValue === \"3\" ? \"눈\" : info.fcstValue === \"5\" ? \"빗방울\" : \"눈날림\" }</li> })[6] }  */}\n\n                                {weatherData &&\n                                    weatherData.item.map((info) => {\n                                        return (\n                                            <li key={nanoid()}>\n                                                날짜:{info.baseDate}\n                                            </li>\n                                        )\n                                    })[0]}\n                                {weatherData &&\n                                    weatherData.item.map((info) => {\n                                        return (\n                                            <li key={nanoid()}>\n                                                기준 예보시각: {info.baseTime}\n                                            </li>\n                                        )\n                                    })[0]}\n                                {weatherData &&\n                                    weatherData.item.map((info) => {\n                                        return (\n                                            <li key={nanoid()}>\n                                                현재위치 기온: {info.fcstValue}℃\n                                            </li>\n                                        )\n                                    })[24]}\n                                {weatherData &&\n                                    weatherData.item.map((info) => {\n                                        return (\n                                            <li key={nanoid()}>\n                                                현재위치 바람세기:{\" \"}\n                                                {info.fcstValue < \"9\"\n                                                    ? \"바람세기 약하거나 약간 강함\"\n                                                    : info.fcstValue < \"14\"\n                                                    ? \"바람세기 강함\"\n                                                    : \"바람세기 매우 강함\"}\n                                            </li>\n                                        )\n                                    })[54]}\n                                {weatherData &&\n                                    weatherData.item.map((info) => {\n                                        return (\n                                            <li key={nanoid()}>\n                                                현재위치 날씨상태:{\" \"}\n                                                {info.fcstValue === \"0\"\n                                                    ? \"맑음\"\n                                                    : info.fcstValue === \"1\"\n                                                    ? \"비\"\n                                                    : info.fcstValue === \"3\"\n                                                    ? \"눈\"\n                                                    : info.fcstValue === \"5\"\n                                                    ? \"빗방울\"\n                                                    : \"눈날림\"}\n                                            </li>\n                                        )\n                                    })[6]}\n                            </ul>\n                        </div>\n                    </LeftNav2>\n                    <LeftNav3>\n                        <p>날씨 기반 추천 코디</p>\n                        <div className=\"codiInfo\">\n                            {currentOuter === undefined ||\n                            currentTop === undefined ||\n                            currentBottom === undefined ? (\n                                <p>\n                                    현재 위치 데이터가 없습니다. 현재위치의 첫\n                                    게시물을 올려보세요👍\n                                </p>\n                            ) : (\n                                <>\n                                    <Codi\n                                        src={`${process.env.PUBLIC_URL}img/codi/${currentOuter}.png`}\n                                        alt=\"겉옷\"\n                                    ></Codi>\n                                    <Codi\n                                        src={`${process.env.PUBLIC_URL}img/codi/${currentTop}.png`}\n                                        alt=\"상의\"\n                                    ></Codi>\n                                    <Codi\n                                        src={`${process.env.PUBLIC_URL}img/codi/${currentBottom}.png`}\n                                        alt=\"하의\"\n                                    ></Codi>\n                                </>\n                            )}\n                        </div>\n                    </LeftNav3>\n                </LeftContainer1>\n                <RightContainer>\n                    <RightNav1>\n                        <span id=\"location\">주민 예보글</span>\n                    </RightNav1>\n                    {currentPosts.map((el) => (\n                        <div className=\"userPost\" key={el.id}>\n                            <img\n                                src={el.post_photo}\n                                id={el.id}\n                                onClick={photoClickHandler}\n                            />\n                        </div>\n                    ))}\n                </RightContainer>\n            </HomeContainer>\n            <FooterDiv>\n                <Footer></Footer>\n            </FooterDiv>\n        </div>\n    )\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\n\nexport const Bookmark = ({ like, bookmarkHandler, color }) => {\n    return (\n        <button className=\"bookmarkContainer\" onClick={bookmarkHandler}>\n            <FontAwesomeIcon\n                icon={faBookmark}\n                className=\"bookmark\"\n                size=\"3x\"\n                color={color}\n            />\n        </button>\n    )\n}\n\n// 사용 예시\n// const [bookmarked, setBookmarked] = useState(false);\n// const bookmarkHandler = (e) => {\n//   setBookmarked(prev => !prev);\n// }\n// <Bookmark bookmarkHandler={bookmarkHandler} color={bookmarked ? '#eb425b' : '#aaa'}/>\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst PaginationContainer = styled.div.attrs({\n  className: \"pagination\"\n})`\n  margin-bottom: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #A1A1A1;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst PageNumbersList = styled.ul.attrs({\n  className: \"pageNumbersList\"\n})`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  list-style-type: none;\n  padding: 0 1rem;\n`;\n\nconst ArrowButton = styled.span.attrs({\n  className: \"arrow\"\n})`\n  &:hover {\n    color: black;\n  }\n`;\n\nconst PageNumberItem = styled.li.attrs({\n  className: \"pageNumberItem\"\n})`\n  padding: 0 1rem;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport default function Pagination({dataLength, itemsPerPage, numberButtonClickHandler}) {\n  const numberOfPages = Math.ceil(dataLength / itemsPerPage); // 총 페이지 수\n  const numberArr = new Array(numberOfPages).fill(0).map((el, idx) => idx + 1); // 1~총페이지 수로 채워진 배열\n  let unit;\n  if (numberOfPages < 5) {\n    unit = numberOfPages+1;\n  } else {\n    unit = 5;\n  }\n  const [startIdx, setStartIdx] = useState(0);\n  const [lastIdx, setLastIdx] = useState(unit);\n  const cutArrInit = new Array(unit).fill(0).map((el, idx) => idx + 1);\n  const [cutArr, setCutArr] = useState(cutArrInit);\n\n  const prevHandler = () => {\n    if(startIdx === 0) return;\n    setStartIdx(prev => prev - unit);\n    setLastIdx(prev => prev - unit);\n  }\n\n  const nextHandler = () => {\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(lastIdx === tempIdxEnd) return;\n    setStartIdx(prev => prev + unit);\n    setLastIdx(prev => prev + unit);\n  }\n\n  useEffect(()=>{\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(startIdx >= itemsPerPage || lastIdx <= tempIdxEnd) {\n      const result = numberArr.slice(startIdx, lastIdx);\n      setCutArr(prev => result);\n    }\n  }, [startIdx, lastIdx])\n\n  return (\n    <PaginationContainer>\n      <ArrowButton className=\"prevButton\" onClick={prevHandler}>\n        ⬅️\n      </ArrowButton>\n      <PageNumbersList>\n        {\n          cutArr.map(number => {\n            return (\n              <PageNumberItem\n                key={number}\n                id={number}\n                onClick={() => {\n                  numberButtonClickHandler(number);\n                }}\n              >\n                {number}\n              </PageNumberItem>\n            );\n          })\n        }\n      </PageNumbersList>\n      <ArrowButton className=\"nextButton\" onClick={nextHandler}>\n        ➡️\n      </ArrowButton>\n    </PaginationContainer>\n  );\n}","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { Bookmark } from \"../components/BookMarks\"\nimport { updatePostId } from \"../actions/index\"\nimport { useHistory } from \"react-router\"\nimport { default as PaginationWithArrow } from \"../components/Pagination\"\nimport Footer from \"../components/Footer\"\n/*\n  [수정]\n  - 페이지네이션\n  - 주석 정리\n  - 레이아웃 정리\n  - 클릭이벤트\n  - import 주석 정리\n*/\n\nconst Outer = styled.div`\n    // 데스크탑\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: center;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: 100vh;\n    // padding-top: 100px;\n\n    @media screen and (max-width: 1081px) {\n        // 1081 이하일 때 // 모바일\n        // padding-top: 3vh;\n    }\n`\nconst FooterDiv = styled.div`\n    //모바일\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        //pc\n        display: block;\n    }\n`\n\n// 그리드\nconst Container = styled.div`\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n    grid-template-columns: repeat(2, 40vw);\n    margin: 5rem;\n    // grid-template-rows: 3fr 3fr;\n    // grid-template-columns: 1fr 1fr;\n    // grid-template-areas:\n    // \"div div\"\n    // \"div div\";\n    /* height: 83vh; */\n    // (max-width: 600px)\n    // margin-left: 3vw;\n    // margin-right: 3vw;\n    /* overflow: auto; */\n\n    .BookMarkContainer {\n        gap: 0.2rem;\n        background-color: rgba(255, 255, 255, 0.6);\n        display: flex;\n        justify-content: space-around;\n        border: 1px solid #dbdbdb;\n        border-radius: 3px;\n    }\n\n    @media (max-width: 1081px) {\n        margin: 3rem 2rem;\n        gap: 2rem;\n        grid-template-columns: 80vw;\n        // grid-template-rows: 1fr 1fr 1fr 1fr;\n        // grid-template-columns: 1fr;\n        grid-template-areas: \"div\";\n    }\n\n    @media (max-width: 400px) {\n        margin: 1rem;\n        grid-auto-rows: 500px;\n        gap: 0;\n        .BookMarkContainer {\n            height: 80%;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n`\n\n// const BookMarkContainer = styled.div`\n//   background-color: rgba(255, 255, 255, 0.6);\n//   display: flex;\n//   gap: 0.1rem;\n//   justify-content: space-around;\n//   border: 1px solid #dbdbdb;\n//   border-radius: 3px;\n// `;\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n    // flex-basis: 30rem;\n    .postItem {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .postPicture {\n        margin: 1rem 2rem 1rem 1rem;\n        padding: 0;\n        height: 25vh;\n        align-items: center;\n    }\n    .postImg {\n        margin: 0.5rem;\n        width: 250px;\n        height: 250px;\n    }\n    .postImg:hover {\n        transform: scale(1.05);\n        transition: 0.5s ease-in-out;\n    }\n    @media screen and (max-width: 1081px) {\n        .postPicture {\n            height: 20vh;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .postPicture {\n            margin: 0;\n        }\n    }\n`\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n    margin: 1rem;\n    line-height: 3rem;\n    flex-direction: column;\n    flex-basis: 15rem;\n    justify-content: flex-start;\n    .postTitle {\n        font-weight: bold;\n        font-size: 2rem;\n    }\n    .postDate {\n        font-size: 1.5rem;\n    }\n    .postWeather {\n        /* font-size: 1.5rem; */\n        width: 3rem;\n        height: 3rem;\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n\n    @media (max-width: 1081px) {\n        line-height: 2rem;\n        .postTitle {\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n        .postDate {\n            font-size: 1rem;\n        }\n        .postWeather {\n            font-size: 0.5rem;\n            width: 30px;\n            height: 30px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        margin: 0.1rem 0 0 0.5rem;\n        line-height: 1.4rem;\n        .postTitle {\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n        .postDate {\n            font-size: 1rem;\n        }\n        .postWeather {\n            font-size: 0.5rem;\n            width: 30px;\n            height: 30px;\n        }\n    }\n`\n\nconst BookMarkIcon = styled(Bookmark)`\n    float: right;\n\n    & .heart {\n        cursor: pointer;\n        color: #aaa;\n    }\n`\n\n//북마크가 없습니다.\nconst Waring = styled.div`\n    font-weight: bold;\n    font-size: 1.5rem;\n    text-align: center;\n`\n\n// 페이지네이션\nconst Pagination = styled.div`\n    background-color: #fafafa;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10vh;\n    /* margin: 2rem; */\n    list-style: none;\n\n    button {\n        font-size: 1.5rem;\n        margin: 0 1vw;\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 2vh;\n    }\n\n    @media screen and (max-width: 375px) {\n        margin-top: 5vh;\n        padding-bottom: 3vh;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\nconst PrevPage = styled.div``\n\nconst PageNumber = styled.div`\n    li {\n        float: left;\n        margin: 1rem;\n    }\n    button {\n        font-size: 1.5rem;\n    }\n    @media screen and (max-width: 375px) {\n        li {\n            margin: 0;\n        }\n        button {\n            margin: 0 2vw;\n            font-size: 1rem;\n        }\n    }\n`\n\nconst NextPage = styled.div``\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function BookMark() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, readPostId, postInfo } = useSelector(\n        (state) => state.itemReducer\n    )\n    const [bookmarkList, setBookmarkList] = useState()\n\n    // console.log(userInfo)\n    // console.log(readPostId)\n    // console.log(postInfo)\n    const postId = Number(readPostId)\n    //console.log(postId)\n\n    useEffect(() => {\n        axios({\n            // url: url + `/bookmarklist?searchID=${userInfo.user_id}&&searchPost=${postId}`,\n            // url: url + `/bookmarklist?searchID=${userInfo.user_id}`,\n            // method: \"get\",\n            url: url + \"/bookmarklist\",\n            method: \"post\",\n            data: {\n                user_id: userInfo.id,\n                post_id: postId,\n                post_info: postInfo,\n            },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }).then((res) => {\n            // console.log(\"**res.data bookmarkList**\", res.data)\n            setBookmarkList(res.data)\n        })\n    }, [])\n\n    //console.log(bookmarkList)\n\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        return `${dateOnly}`\n    }\n\n    const postClickHandler = (e) => {\n        //\"PostBookMarkList\"\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"BookMarkContainer\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            // pathname: '/postread',\n            pathname: \"/bookmarkpost\",\n            state: { postId: elem.id },\n        })\n    }\n\n    // 시작 - 페이지네이션 변수들\n    const [currentPage, setCurrentPage] = useState(1)\n    // 1페이지로 시작\n    const itemsPerPage = 6\n    // 한 페이지에 8개씩 보여준다\n    const lastIdx = currentPage * itemsPerPage\n    const firstIdx = lastIdx - itemsPerPage\n    const slicedData = (dataArr) => {\n        return dataArr.slice(firstIdx, lastIdx)\n    }\n    // 끝 - 페이지네이션 변수들\n    // const target = arr.slice(start, end)\n\n    return (\n        <Outer>\n            {/* {bookmarkList === [] ?\n      <Waring>\"북마크가 없습니다.\"</Waring> : */}\n            <Container>\n                {bookmarkList &&\n                    bookmarkList.map((el) => {\n                        {\n                            /* {bookmarkList && slicedData(bookmarkList).map((el) => { */\n                        }\n                        return (\n                            <div className=\"BookMarkContainer\" key={el.id}>\n                                <BookMarkPhoto>\n                                    <div\n                                        className={[\"postItem\"]}\n                                        id={el.id}\n                                        onClick={postClickHandler}\n                                        key={el.id}\n                                    >\n                                        <img\n                                            className=\"postImg\"\n                                            key={el.id}\n                                            src={el.post_photo}\n                                            alt=\"posts\"\n                                        />\n                                    </div>\n                                </BookMarkPhoto>\n                                <BookMarkList>\n                                    <div className=\"test\" key={el.id}>\n                                        <p className=\"postDate\">\n                                            {formatDate(el.createdAt)}\n                                        </p>\n                                        <p className=\"postWeather sky\">\n                                            {\" \"}\n                                            {el.weather}{\" \"}\n                                        </p>\n                                        <p className=\"postWeather wind\">\n                                            {el.wind}{\" \"}\n                                        </p>\n                                        <p className=\"postWeather temp\">\n                                            {el.temp}{\" \"}\n                                        </p>\n                                    </div>\n                                </BookMarkList>\n                            </div>\n                        )\n                    })}\n            </Container>\n            {/* : <Waring>\"북마크가 없습니다.\"</Waring>} */}\n\n            {/* 시작 - 페이지네이션 새로 추가 */}\n            <PaginationWithArrow\n                // dataLength={bookmarkList.length} // 본래\n                dataLength={6} // 테스트용\n                itemsPerPage={8}\n                numberButtonClickHandler={setCurrentPage}\n            />\n            {/* 끝 - 페이지네이션 새로 추가 */}\n            <FooterDiv>\n                <Footer></Footer>\n            </FooterDiv>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport {\n    changeIsLogin,\n    changeSearchword,\n    changeWeatherFilter,\n} from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100vw;\n    height: 125px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    border-bottom: 0.5px solid #dbdbdb;\n\n    h1 {\n        font-weight: bold;\n        font-size: 2.5rem;\n        margin: 0;\n        padding: 0;\n    }\n\n    @media screen and (min-width: 1081px) {\n        width: 100vw;\n        background-color: white;\n        flex-direction: row;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        /* border: 1px solid red;  // 확인용 */\n    }\n`\n\nconst Wing = styled.div`\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst TitleAndLogo = styled.div`\n    display: ${(props) => (props.isMobileLogo ? \"flex\" : \"none\")};\n    justify-content: center;\n    align-items: center;\n    color: #231f20;\n\n    & img {\n        width: 20%;\n        margin-right: 0.5rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst Center = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-width: 350px;\n    justify-content: space-around;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        flex-growth: 2;\n        width: 60vw;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n    position: absolute;\n    top: 50px;\n    border: 1px solid #e0e0e0;\n    @media screen and (max-width: 1081px) {\n        top: 32px;\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    background-color: var(--page-bg-color);\n    border: 0.5px solid #dbdbdb;\n    border-radius: 3px;\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n        height: 30px;\n        font-size: 1rem;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: red;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n`\n\nconst Button3 = styled.button`\n    // width: 140px;\n    // height: 45px;\n    // font-size: 11px;\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    font-family: \"IBM Plex Sans KR\", sans-serif;\n\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    text-transform: uppercase;\n    letter-spacing: 2.5px;\n    font-weight: 500;\n    color: #000;\n    background-color: #fff;\n    // border:3px solid pink;\n    // border: none;\n    border-radius: 45px;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease 0s;\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        background-color: pink;\n        box-shadow: 0px 15px 20px #f7cac9;\n        color: #fff;\n        transform: translateY(-4px);\n\n        @media screen and (max-width: 1081px) {\n            // 임시 추가\n            display: none;\n        }\n    }\n`\nconst Buttons3 = styled.button`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media screen and (max-width: 1081px) {\n        // 임시 추가\n        display: none;\n    }\n`\n// const SearchBarAndDaumPost = styled.div`\n//     // display: flex;\n//     // flex-direction: row;\n//     position: relative;\n//     margin: \"100px solid green\";\n// `\n// const DaumPostcodeWrap = styled.div`\n//     height: 3.5rem;\n//     width: 100%;\n//     // padding-right: 2.5rem;\n// `\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    /* padding: 0.3rem; */\n`\n\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    @media screen and (max-width: 1081px) {\n        padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n    }\n    @media screen and (max-width: 375px) {\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n        padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n        height: 2rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Header({ isInput, isMobileLogo, isText }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, mapPage } = useSelector((state) => state.itemReducer)\n    console.log(mapPage)\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    //검색창에 사용할 포커스변수-hoon\n    const [onFocus, setOnFocus] = useState(false)\n    console.log(\"헤더는 찍히나?\")\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n    const [weatherFilter, setweatherFilter] = useState(\"\")\n    useEffect(() => {\n        setweatherFilter(weatherFilter)\n        dispatch(changeWeatherFilter(weatherFilter))\n\n        console.log(weatherFilter)\n    }, [weatherFilter])\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <HeaderOuter className=\"header\">\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n                    src=\"img/img6.png\"\n                    alt=\"logo\"\n                />\n                <h2 onClick={() => history.push(\"/\")}>There Weather</h2>\n            </TitleAndLogo>\n\n            {isInput ? (\n                <Center className=\"headerCenter\">\n                    <InputAndSubmit className=\"inputAndSubmit\">\n                        <Input\n                            // onClick={(e) => console.log(e)}\n                            onChange={(e) => setSearchEvent(e.target.value)}\n                            type=\"text\"\n                            placeholder=\"위치 검색\"\n                            value={searchEvent}\n                            // ref={inputRef}\n                            // onClick={onRest}\n                            onFocus={(e) => setOnFocus(true)}\n                        />\n                        <Buttons2 bgGrey>\n                            {onFocus ? (\n                                <Cancel onClick={() => setOnFocus(false)}>\n                                    Cancel\n                                </Cancel>\n                            ) : (\n                                <FontAwesomeIcon\n                                    onClick={() => {\n                                        dispatch(changeSearchword(searchEvent))\n                                        history.push(\"/map\")\n                                    }}\n                                    icon={faSearch}\n                                />\n                            )}\n                        </Buttons2>\n                        {/* <SearchBarAndDaumPost> */}\n                        {/* <DaumPostcodeWrap> */}\n\n                        {/* </DaumPostcodeWrap> */}\n                        {/* </SearchBarAndDaumPost> */}\n                    </InputAndSubmit>\n                    {onFocus ? (\n                        <StyledPostCode\n                            className=\"daumPostCodeContainer\"\n                            onComplete={handleComplete}\n                        />\n                    ) : (\n                        <></>\n                    )}\n                    {mapPage.mapPage ? (\n                        <Buttons className=\"headerButtons\">\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"sunny\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"sunny\")\n                                }}\n                                isText={\n                                    weatherFilter === \"sunny\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faSun} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"cloudy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"cloudy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"cloudy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faCloud} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"rainy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"rainy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"rainy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faCloudRain} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"snowy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"snowy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"snowy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faSnowflake} />\n                            </Button>\n                        </Buttons>\n                    ) : (\n                        <div></div>\n                    )}\n                </Center>\n            ) : (\n                <Center className=\"headerCenter\" />\n            )}\n\n            {isLogin ? (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button3\n                        className=\"login\"\n                        onClick={logoutBtnHandler}\n                        isText\n                    >\n                        logOut\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        mypage\n                    </Button3>\n                </Buttons3>\n            ) : (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    <Button3\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        logIn\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        signUp\n                    </Button3>\n                </Buttons3>\n            )}\n        </HeaderOuter>\n    )\n}\n","import react, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faHome,\n    faHeart,\n    faMapMarkerAlt,\n    faPencilAlt,\n    faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\"\nconst Outer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    z-index: 100;\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    @media screen and (min-width: 1081px) {\n        width: 1080px;\n    }\n`\n\nconst Buttons = styled.div`\n    background-color: WHITE;\n    height: 70px;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    z-index: 101;\n    border-top: 1px solid #dbdbdb;\n\n    @media screen and (min-width: 1081px) {\n        position: fixed;\n        background-color: white;\n        border-top: 1px solid #dbdbdb;\n        border-left: 1px solid #dbdbdb;\n        position: fiexd;\n        width: 400px;\n    }\n`\n\nconst Button1 = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n    img:hover {\n        filter: opacity(0.2) drop-shadow(0 0 0 red);\n        background: url(\"img/home.png\");\n    }\n`\nconst Button2 = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n    img:hover {\n        filter: opacity(0.2) drop-shadow(0 0 0 red);\n        background: url(\"img/like.png\");\n    }\n`\nconst Button3 = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n    img:hover {\n        filter: opacity(0.2) drop-shadow(0 0 0 red);\n        background: url(\"img/location.png\");\n    }\n`\nconst Button4 = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n    img:hover {\n        filter: opacity(0.2) drop-shadow(0 0 0 red);\n        background: url(\"img/pencil.png\");\n    }\n`\nconst Button5 = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n    img:hover {\n        filter: opacity(0.2) drop-shadow(0 0 0 red);\n        background: url(\"img/setting.png\");\n    }\n`\nexport default function MenuBar() {\n    const [url1, setUrl1] = useState(\"img/home0.png\")\n    const [curClick, setCurClick] = useState(\"\")\n    const history = useHistory()\n    const [selectBtn, setSelectBtn] = useState(\"\")\n    return (\n        <Outer className=\"menuBar\">\n            <Buttons>\n                {/*\n                    <Link to='/mainpage'>\n                    <Button>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Button>\n                    </Link>\n                */}\n                <Button1>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/homeorlogin\")}\n                        icon={faHome}\n                    /> */}\n                    <img\n                        src={url1}\n                        onClick={() => history.push(\"/homeorlogin\")}\n                    />\n                </Button1>\n                <Button2>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                        icon={faHeart}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/ios/45/000000/like--v1.png\"\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                    />\n                </Button2>\n                <Button3>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/map\")}\n                        icon={faMapMarkerAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n                        onClick={() => history.push(\"/map\")}\n                    />\n                </Button3>\n                <Button4>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/writeorlogin\")}\n                        icon={faPencilAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n                        onClick={() => history.push(\"/writeorlogin\")}\n                    />\n                </Button4>\n                <Button5>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                        icon={faUserAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                    />\n                </Button5>\n            </Buttons>\n        </Outer>\n    )\n}\n","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n\n    &:hover {\n        border: 1px solid #fec0cb;\n        p {\n            color: #fec0cb;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n\n                <InfoBox>\n                    <button onClick={() => history.push(\"/messenger\")}>\n                        <p>메신져</p>\n                    </button>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport React, { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { changeMapPage } from \"../actions/index\"\nimport { useDispatch } from \"react-redux\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: calc(100vh - 125px);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    // border: 1px solid #dbdbdb;\n    border: 1px solid black;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        // border: 1px solid #262626;\n        border: 1px solid pink;\n        p {\n            // color: #262626;\n            color: pink;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nexport default function More() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .5rem;\n  font-size: 1.2rem;\n  border-radius: .5rem;\n  background-color: var(--modal-confirm-button-bg);\n\n  &:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\n/*\n    [수정]\n    - 위치 잡는 코드가 약간 바뀌었어요... (position, display)\n*/\n\nconst Button = styled.button`\n    /* top: 90vh; */\n    top: 1.5vh;\n    left: 0;\n    position: fixed;\n    z-index:100;\n    // border-radius: 50%;\n    display: none;\n    padding: 1rem 1rem 1rem .3rem;\n\n    .fa-fw {\n        font-size: 50px;\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin, userPosts, updatePostId } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\nimport Footer from \"../components/Footer\"\n/*\n    [수정]\n    - 페이지네이션 추가\n    - 주석, console.log 정리\n*/\n\nconst Outer = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: calc(100vh - 125px);\n    position: relative;\n    display: flex;\n    padding-bottom: 100px;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        min-height: calc(100vh - 125px - 70px);\n    }\n`\nconst FooterDiv = styled.div`\n    //모바일\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        //pc\n        display: block;\n    }\n`\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n    width: 30%;\n    padding: 15vh 1vw 1vh 1vw;\n    text-align: center;\n    button {\n        // 비밀번호 수정, 회원탈퇴\n        color: #336fc9;\n        font-size: 1.5rem;\n        margin-top: 1vh;\n    }\n    .mediaBox {\n        margin-top: 2vh;\n        margin-bottom: 2vh;\n        p {\n            margin-top: 1vh;\n        }\n        #user-name {\n            font-size: 1.5rem;\n            font-weight: bold;\n        }\n        #user-changeInfo {\n            color: #336fc9;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border-bottom: 1px solid #aaa;  // 구분선 추가 */\n        margin: 0 auto;\n        margin-top: 4vh;\n        width: 100%;\n        padding: 0 1vw 3vh 1vw;\n        .mediaBox {\n            width: 40%;\n            display: inline-block;\n            text-align: left;\n            p {\n                margin-top: 2vh;\n                justify-content: center;\n                line-height: 3vh;\n                font-size: 1.2rem;\n            }\n        }\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            font-size: 1rem;\n        }\n        .mediaBox {\n            width: 50%;\n            display: inline-block;\n            padding-bottom: 1vh;\n            p {\n                margin-top: 0;\n                justify-content: center;\n                font-size: 1rem;\n            }\n            #user-name {\n                font-size: 1rem;\n            }\n        }\n    }\n`\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n    width: 200px;\n    height: 200px;\n    padding: 10px 10px;\n    border-radius: 50%;\n    @media screen and (max-width: 1081px) {\n        margin-right: 5vw;\n    }\n    @media screen and (max-width: 375px) {\n        width: 7rem;\n        height: 7rem;\n    }\n`\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-end;\n    text-decoration: none;\n\n    button {\n        font-size: 1.2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 100vw; // 가운데로 맞춤\n        align-items: center;\n        height: 10vh;\n        position: absolute;\n        bottom: 0;\n    }\n    @media screen and (max-width: 375px) {\n        padding: 0 15vw;\n        height: 20vh;\n        justify-content: space-between;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n    width: 100vw;\n    padding: 2vh 3vw 2vh 5vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 200px 1fr 1fr;\n\n    row-gap: 10px; /* row의 간격을 10px로 */\n    column-gap: 20px; /* column의 간격을 20px로 */\n    // border-top: 1px solid #aaa; // 구분선 추가 // header와 외곽선이 겹쳐서 주석처리합니다 ㅜㅜ\n\n    .item:nth-child(1) {\n        border: none;\n        grid-column: 1 / 4;\n        grid-row: 1 / 2;\n    }\n\n    div {\n        background-color: rgba(255, 255, 255, 0.5); // 추가\n    }\n    div:hover {\n        border: 1px solid var(--page-bg-color);\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n    .more {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n        background-color: transparent;\n    }\n    p {\n        font-size: 2rem;\n        margin: 0 auto;\n        font-weight: bold;\n        color: #8e8e8e;\n    }\n    .moreView {\n        font-size: 1.5rem;\n        color: #336fc9;\n        width: 5vw;\n    }\n\n    @media screen and (max-width: 1380px) {\n        .moreView {\n            font-size: 1.4rem;\n            width: 6vw;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        margin-bottom: 10vh;\n        padding: 0;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 100px 300px 300px;\n        row-gap: 5px;\n        column-gap: 3px;\n\n        p {\n            font-size: 2rem;\n        }\n        .item {\n            margin: 0.5vh;\n        }\n        .moreView {\n            width: 80px;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        padding-left: 2vw;\n        padding-right: 2vw;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 50px 150px 150px 150px;\n        .item:nth-child(1) {\n            border: none;\n            grid-column: 1 / 3;\n            grid-row: 1 / 2;\n        }\n        p {\n            font-size: 1rem;\n        }\n        .moreView {\n            font-size: 1rem;\n            width: 50px;\n            height: 3rem;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n}\n\nexport default function MyPage() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, userInfo, postInfo, readPostId } = useSelector(\n        (state) => state.itemReducer\n    )\n    console.log(userInfo) //정보잘넘어옴\n    console.log(postInfo.postinfo)\n    console.log(readPostId)\n\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [removeUser, setremoveUser] = useState(false)\n\n    const [currentPosts, setcurrentPosts] = useState([])\n\n    const [noIdWarning, setNoIdWarning] = useState(\"\")\n    // 게시물 데이터 조회\n    useEffect(() => {\n        axios({\n            url: url + `/mypage?searchID=${userInfo.user_id}`,\n            method: \"get\",\n            withCredentials: true,\n        }).then((res) => {\n            setcurrentPosts(res.data)\n            dispatch(userPosts(res.data))\n        })\n    }, [])\n\n    // 정보수정\n    const changeUserInfo = () => {\n        //console.log(\"정보수정 클릭\")\n        history.push(\"/edituserinfo\")\n    }\n\n    const removeUserInfo = () => {\n        setIsModalOpen(true)\n    }\n\n    const modalYesButtonHandlers = () => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .delete(url + \"/removeuser\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `token ${token}`,\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                localStorage.clear(token)\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n        //setIsModalOpen(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n    const modalCloseButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n\n    // 게시물 클릭했을 때\n    const postClickHandler = (e) => {\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"myPagePostList\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n\n    // 더보기\n    const moreViewHandler = () => {\n        history.push(\"/mypost\")\n    }\n\n    return (\n        <>\n            <Outer>\n                <GoBackButton />\n                <ProfileArea>\n                    <ProfileImg src={userInfo.user_Photo} />\n                    <div className=\"mediaBox\">\n                        <p id=\"user-name\">{userInfo.user_id}</p>\n                        <p id=\"user-gender\">\n                            {userInfo.gender === 1 ? \"남성\" : \"여성\"}\n                        </p>\n                        <p id=\"user-location\">\n                            나의 위치 : {userInfo.location}\n                        </p>\n                        <p id=\"user-changeInfo\" onClick={changeUserInfo}>\n                            정보수정\n                        </p>\n                    </div>\n                    <ButtonArea>\n                        <button onClick={() => history.push(\"/editpassword\")}>\n                            비밀번호 수정\n                        </button>\n                        <button onClick={removeUserInfo}>회원탈퇴</button>\n                        {isModalOpen === false ? null : (\n                            <ModalConfirm\n                                yesHandler={modalYesButtonHandlers}\n                                noHandler={modalNoButtonHandler}\n                                closeHandler={modalCloseButtonHandler}\n                            >\n                                <p>탈퇴하시겠습니까?</p>\n                                <p>이유를 선택해 주세요</p>\n                                <select name=\"pets\" id=\"pet-select\">\n                                    <option value=\"\">선택</option>\n                                    <option value=\"notUseful\">\n                                        사용을 많이 하지 않음\n                                    </option>\n                                    <option value=\"inconvenientDesign\">\n                                        디자인이 불편함\n                                    </option>\n                                    <option value=\"otherOptions\">\n                                        다른 앱을 이용하기 위해\n                                    </option>\n                                    <option value=\"andSoForth\">기타</option>\n                                </select>\n                            </ModalConfirm>\n                        )}\n                    </ButtonArea>\n                </ProfileArea>\n\n                <GridArea className=\"myPagePostList\">\n                    <div className=\"item more\">\n                        <p>내가 쓴 예보</p>\n                    </div>\n                    {currentPosts.map((el) => (\n                        <div\n                            className={[\"item\", \"postItem\"]}\n                            id={el.id}\n                            onClick={postClickHandler}\n                            key={el.id}\n                        >\n                            <img src={el.post_photo} alt=\"posts\" />\n                        </div>\n                    ))}\n                    <button className=\"moreView\" onClick={moreViewHandler}>\n                        더 보기\n                    </button>\n                </GridArea>\n            </Outer>\n            <FooterDiv>\n                <Footer></Footer>\n            </FooterDiv>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/kakao_login.94f321a2.png\";","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { changeIsLogin, changeMapPage } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport KakaoIcon from \"../../src/KakaoIcon/kakao_login.png\"\n\n/*\n  TODO\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우 (버튼과 연결?)\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100vw;\n    min-height: calc(var(--mobile-page-height) - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst LoginInputAndTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n    img {\n      width: 20px;\n      height: 20px;\n    }\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: black;\n    background-color: pink;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n        color: white;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #ea4335;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = process.env.REACT_APP_CLIENTURL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n    clientUrl = \"https://thereweather.space\"\n}\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    // if (!url) {\n    //     url = \"https://thereweather.space/api\"\n    //     clientUrl = \"https://thereweather.space\"\n    // }\n    console.log(url)\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] =\n        useState(\"아이디를 입력하세요..\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n\n    useEffect(() => {\n        // console.log(\"나는 login.js\")\n        dispatch(changeMapPage(false))\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    //console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                //console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                //console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n\n    \n    //카카오 로그인 \n    const KAKAO_LOGIN_URL=`https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${process.env.REACT_APP_KAKAO_ID}&redirect_uri=${process.env.REACT_APP_KAKAO_URL}&response_type=code`\n    function kakaoLoginHandler() {\n        window.location.assign(KAKAO_LOGIN_URL)\n    } \n\n\n\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        //console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        //console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        //console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        {/* <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호\"\n                                    onChange={idOnChangeHanlder(\"pwInput\")}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.pwInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호 확인</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwCheckInput\"\n                                    placeholder=\"비밀번호 확인\"\n                                    onChange={idOnChangeHanlder2}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{pwCheckInputMessage}</li>\n                            </ValidationListBox>\n                        </StyledArticle> */}\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <h2>로그인</h2>\n                    <div className=\"Login--center\">\n                        <LoginStyledArticle className=\"id\">\n                            <LoginInputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <LoginInputText\n                                    type=\"text\"\n                                    name=\"idInput\"\n                                    placeholder=\"아이디를 입력하세요\"\n                                    value={idInput}\n                                    onChange={loginidOnChangeHanlder}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"idValidationList\">\n                                <li>{idInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n\n                        <LoginStyledArticle className=\"password\">\n                            <LoginInputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <LoginInputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                    value={pwInput}\n                                    onChange={pwOnChangeHandler}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"pwValidationList\">\n                                <li>{pwInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n\n                        {/* 구글 소셜로그인 */}\n                        <LoginButton onClick={googleLoginButtonHandler} google>\n                            <FontAwesomeIcon icon={faGoogle} />\n                            <span>구글 로그인</span>\n                        </LoginButton>\n                         {/* 카카오 소셜로그인 */}\n                         <LoginButton onClick={kakaoLoginHandler}>\n                            <img src={KakaoIcon}></img>\n                            <span> 카카오 로그인</span>\n                        </LoginButton>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport axios from \"axios\"\nimport { changeUserPw } from \"../actions/index\"\n\n/*\n  TODO - 비밀번호 수정 페이지\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [x] 함수로 구현\n      - [x] (둘 다) input이 없는 경우 - li\n      - [x] (새 비밀번호) 조건에 안 맞는 경우 - li\n      - [] (현재 비밀번호) 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n  [] 최종 결과 모아서 악시오스 요청\n*/\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    min-height: calc(100vh - 125px - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    h2 {\n        text-align: center;\n        font-size: 1.8rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        min-height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    // margin: .5rem;\n\n    h3 {\n        font-size: 1.3rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 0 1rem 0;\n    font-size: 1rem;\n`\n\nconst StyledLi = styled.li`\n    height: 1.2rem;\n    padding: 0.3rem 2rem;\n    font-size: 0.9rem;\n    // font-weight: bold;\n    color: ${(props) =>\n        props.valid\n            ? `var(--font-validation-positive)`\n            : `var(--font-validation-negative)`};\n    font-weight: ${(props) => (props.valid ? `bold` : `null`)};\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 25vw;\n    min-width: 50px;\n    max-width: 200px;\n    margin: 0.5rem 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)`}; */\n    border-radius: 1rem;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n`\n\n// const TextButton = styled.button`\n//   // align-self: flex-end;\n//   margin: 1rem 3rem;\n//   font-size: 1rem;\n//   color: grey;\n//   text-decoration: underline;\n// `;\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function PasswordEdit() {\n    // const { password } = useSelector((state) => state.itemReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const [curPwd, setCurPwd] = useState(\"\")\n    const [newPwd, setNewPwd] = useState(\"\")\n    const [curPwdInputWarning, setCurPwdInputWarning] =\n        useState(\"비밀번호를 입력해주세요.\")\n    const [newPwdInputWarning, setNewPwdInputWarning] = useState({\n        isNoInput: \"비밀번호를 입력해주세요.\",\n        isTooShort: \"6자 이상이어야 합니다.\",\n        isWrongType: \"숫자와 문자를 포함해야 합니다.\",\n    })\n    const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning\n    const [isValid, setIsValid] = useState(\"\")\n\n    const validationReg =\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/g\n    // 정규식 : 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n\n    const curInputHandler = (e) => {\n        setCurPwd((prev) => e.target.value)\n        // console.log(e.target.value)\n        if (e.target.value.length === 0) {\n            setCurPwdInputWarning((prev) => \"비밀번호를 입력해주세요.\")\n        } else {\n            setCurPwdInputWarning((prev) => \"\")\n        }\n    }\n\n    const newInputHandler = (e) => {\n        setNewPwd((prev) => e.target.value)\n\n        // 유효성 검사\n        if (e.target.value.length === 0) {\n            setNewPwdInputWarning((prev) => {\n                return { ...prev, isNoInput: \"비밀번호를 입력해주세요.\" }\n            })\n        } else {\n            setNewPwdInputWarning((prev) => {\n                return { ...prev, isNoInput: \"\" }\n            })\n        }\n\n        if (!validationReg.test(e.target.value)) {\n            setNewPwdInputWarning((prev) => {\n                return {\n                    ...prev,\n                    isWrongType:\n                        \"문자, 숫자, 특수문자가 모두 포함되어야 합니다.\",\n                }\n            })\n            setIsValid((prev) => \"\")\n        } else {\n            setNewPwdInputWarning((prev) => {\n                return { ...prev, isWrongType: \"\" }\n            })\n            setIsValid((prev) => \"사용 가능합니다.\")\n        }\n\n        if (e.target.value.length < 6) {\n            setNewPwdInputWarning((prev) => {\n                return { ...prev, isTooShort: \"6자 이상이어야 합니다.\" }\n            })\n        } else {\n            setNewPwdInputWarning((prev) => {\n                return { ...prev, isTooShort: \"\" }\n            })\n        }\n    }\n\n    // 버튼 클릭 이벤트\n    const editButtonHandler = (e) => {\n        // e.prevntDefault()\n\n        let newPwdValid = validationReg.test(newPwd)\n        console.log(\"새 비밀번호 유효성 검사 결과\", newPwdValid)\n        // TODO\n        // 클라이언트 로컬스토리지에 있는 토큰을 찾아서\n        // 헤더에 담아서 서버에 전달\n        // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\")) //문자열벗긴 토큰\n        //console.log(token) //토큰찾음\n        axios({\n            url: url + \"/password\",\n            method: \"put\",\n            data: { password: newPwd },\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            // console.log(res.data)\n            dispatch(changeUserPw(true))\n            history.push(\"/mypage\")\n        })\n    }\n\n    const cancelButtonHandler = (e) => {\n        console.log(\"취소 버튼 동작 확인\")\n        setCurPwd((prev) => \"\")\n        setNewPwd((prev) => \"\")\n        setIsValid((prev) => \"\")\n        // TODO 이전 페이지로\n        history.push(\"/home\")\n    }\n\n    // 탈퇴 모달에 붙은 함수\n    // const [ isModalOpen, setIsModalOpen ] = useState(false);\n    // const withdrawButtonHandler = (e) => {\n    //   console.log('탈퇴 버튼 동작확인');\n    //   setIsModalOpen(true);\n    // }\n\n    // const modalSelectList = [\n    //   [null, \"--탈퇴 이유 선택--\"],\n    //   [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n    //   [\"inconvenientDesign\", \"디자인이 불편함\"],\n    //   [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n    //   [\"etc\", \"기타\"]\n    // ];\n\n    // const [ modalSelected, setModalSelected ] = useState(\"\");\n    // const handleChangeSelect = (e) => {\n    //   setModalSelected(prev => e.target.value);\n    // }\n\n    // const modalCloseButtonHandler = (e) => {\n    //   console.log('모달 닫기 버튼 동작 확인');\n    //   setIsModalOpen(false);\n    // }\n\n    // const modalYesButtonHandler = (e) => {\n    //   console.log('모달 yes 버튼 동작 확인');\n    // }\n\n    // const modalNoButtonHandler = (e) => {\n    //   console.log('모달 no 버튼 동작 확인');\n    //   setIsModalOpen(false);\n    // }\n\n    return (\n        <Outer className=\"loginPageComponent\">\n            <h2>비밀번호 변경</h2>\n\n            <div className=\"Login--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputCurPwdSection\">\n                        <h3>현재 비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"curPwd\"\n                            placeholder=\"현재 비밀번호를 입력하세요\"\n                            onChange={curInputHandler}\n                            value={curPwd}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <StyledLi>{curPwdInputWarning}</StyledLi>\n                    </ValidationListBox>\n                </StyledArticle>\n\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputNewPwSection\">\n                        <h3>새 비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"newPwd\"\n                            placeholder=\"비밀번호를 입력하세요\"\n                            onChange={newInputHandler}\n                            value={newPwd}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <StyledLi valid>{isValid}</StyledLi>\n                        <StyledLi>{isNoInput}</StyledLi>\n                        <StyledLi>{isTooShort}</StyledLi>\n                        <StyledLi>{isWrongType}</StyledLi>\n                    </ValidationListBox>\n                </StyledArticle>\n            </div>\n\n            <Buttons className=\"login--buttons\">\n                <div>\n                    <Button onClick={editButtonHandler} edit>\n                        수정\n                    </Button>\n                    <Button onClick={cancelButtonHandler}>취소</Button>\n                </div>\n            </Buttons>\n\n            {/* <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton> */}\n\n            {/* {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      } */}\n        </Outer>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n  TODO\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // margin: 0.5rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"pink\")};\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.google ? \"#EA4335\" : \"#2f6ecb\"}; */\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.google ? \"#EA4335\" : \"#2f6ecb\"}; */\n    border-radius: 1rem;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function SignUp() {\n    const dispatch = useDispatch()\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n        emailInput: \"\",\n        emailVaildCode: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력하세요..\",\n        pwInput: \"패스워드를 입력하세요.\",\n        nickNameInput: \"닉네임을 입력하세요.\",\n        emailInput: \"이메일을 입력하세요.\",\n        emailVaildCode: \"이메일 인증 코드 기입 후 인증하기 하세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력하세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색하세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${process.env.REACT_APP_CLIENTURL}/img/blankProfile.png`,\n    })\n    console.log(uploadedImg)\n    const [codeOn, setCodeOn] = useState(false)\n\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다..\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n    useEffect(() => {\n        //이메일 유효성검사\n        if (\n            inputSignUpData.emailInput.length >= 5 &&\n            inputSignUpData.emailInput.indexOf(\"@\") !== -1\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, emailInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailInput: \"이메일은 5글자 이상이며, @를 포함합니다.\",\n            })\n        }\n    }, [inputSignUpData.emailInput])\n    useEffect(() => {\n        //이메일인증 코드 유효성검사\n        if (inputSignUpData.emailVaildCode.length >= 1) {\n            setInputVaildMessage({ ...inputVaildMessage, emailVaildCode: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailVaildCode: \"코드를 기입하세요.\",\n            })\n        }\n    }, [inputSignUpData.emailVaildCode])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n    function emailSend() {\n        console.log(\"email 보내기\")\n        if (!inputVaildMessage.emailInput && !inputVaildMessage.idInput) {\n            console.log(\"정상수행가능\")\n            axios({\n                url: url + \"/users/auth\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                data: {\n                    temporary_id: inputSignUpData.idInput,\n                    email: inputSignUpData.emailInput,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 200) {\n                    alert(\"인증메일을 발송하였습니다\")\n                } else {\n                    alert(\"인증메일을 발송에 실패하였습니다\")\n                }\n            })\n        } else {\n            console.log(\"안되는곳\")\n            alert(\"아이디, 이메일을 기입하세요\")\n        }\n    }\n    function codeSend() {\n        console.log(\"code 보내기\")\n        axios({\n            url: url + \"/users/auth\",\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                temporary_id: inputSignUpData.idInput,\n                email: inputSignUpData.emailInput,\n                code: inputSignUpData.emailVaildCode,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            if (res.data) {\n                setCodeOn(res.data)\n                alert(\"이메일 인증 완료 되었습니다.\")\n            } else {\n                alert(\"이메일 인증에 실패 하였습니다.\")\n            }\n        })\n    }\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\" ||\n            codeOn === false\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailInput\"\n                            placeholder=\"ex) example@exammail.com\"\n                            onChange={idOnChangeHanlder(\"emailInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailInput}</li>\n                        <Buttons className=\"SignUp--buttons\">\n                            <Button onClick={emailSend}>인증메일 보내기</Button>\n                        </Buttons>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증 코드</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailVaildCode\"\n                            placeholder=\"인증코드\"\n                            onChange={idOnChangeHanlder(\"emailVaildCode\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailVaildCode}</li>\n                    </ValidationListBox>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={codeSend}>코드 인증하기</Button>\n                    </Buttons>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { userPosts, updatePostId } from \"../actions/index\"\n// UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE\nimport GoBackButton from \"../components/GoBackButton\"\nimport Pagination from \"../components/Pagination\"\n\nconst Outer = styled.div`\n    position: relative;\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    min-height: 100vh;\n    padding: 2rem;\n\n    h2 {\n        align-self: flex-start;\n        margin: 2rem 0;\n    }\n\n    button {\n        font-size: 1.5rem;\n    }\n\n    @media screen and (min-width: 1500px) {\n        // 제일 큰 사이즈\n        padding-left: 3vh;\n        padding-right: 3vh;\n    }\n    @media screen and (max-width: 375px) {\n        padding-top: 2vh;\n    }\n    @media screen and (max-width: 1081px) {\n        // 1080이하\n    }\n`\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n    // border: 1px solid blue;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 300px 300px;\n    grid-gap: 1.5rem;\n    min-height: 70vh;\n    margin: 1rem;\n    p {\n        font-size: 28px;\n    }\n\n    .postItem {\n        background-color: rgba(255, 255, 255, 0.6);\n        display: flex;\n    }\n    .postItem:hover {\n        border: 1px solid #d5d8dc;\n    }\n    @media screen and (min-width: 2100px) {\n        height: 50vh;\n        width: 300px;\n    }\n    @media screen and (max-width: 1081px) {\n        padding-left: 5vw;\n        padding-right: 5vw;\n        height: auto;\n        grid-template-columns: 1fr 1fr;\n    }\n    @media screen and (max-width: 600px) {\n        padding-left: 2vw;\n        padding-right: 2vw;\n        p {\n            font-size: 20px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        height: auto;\n    }\n`\nconst FlexArea = styled.div``\nconst FlexArea2 = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\n// 게시물 사진\nconst PostImg = styled.img`\n    // border: 1px solid red;\n    width: 100%;\n    height: 100%;\n    background-color: #ffffff;\n\n    @media screen and (min-width: 2100px) {\n        width: 300px;\n        height: 300px;\n    }\n\n    @media screen and (max-width: 1081px) {\n        // 이미지 크기 수정 필요\n    }\n`\n\n//   @media screen and (max-width: 1081px) {\n//     padding: 1vh 2vw 2vh 2vw;\n//     font-size: 1.5rem;\n//   }\n//   @media screen and (max-width: 375px) {\n//     font-size: 1rem;\n//     padding-left: 3vw;\n//   }\n// `\n\n// 페이지네이션\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    li {\n        /* margin: 3px; */\n        list-style: none;\n        padding: 3px;\n        /* border: 1px solid red; */\n    }\n    button {\n        margin: 0 1vw;\n        padding: 1rem 1.5rem;\n        border-radius: 50%;\n    }\n    button:focus {\n        background-color: var(--modal-bg-color);\n    }\n    #prev,\n    #next {\n        background: none;\n    }\n    @media screen and (max-width: 1081px) {\n        margin-top: 10rem;\n        padding-bottom: 5rem;\n    }\n\n    @media screen and (max-width: 375px) {\n        margin-top: 3rem;\n        padding-bottom: 3rem;\n        li {\n            /* margin: 0 1vw; */\n            /* margin: 1vh; */\n            padding: 0;\n        }\n        button {\n            /* margin: 0 1.5vw; */\n            font-size: 1.5rem;\n            margin: 0;\n            padding: 1px 7px;\n        }\n    }\n`\nconst CurPage = styled.button`\n    color: red;\n    // width: 30px;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function MyPost() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { start, end, current, isLogin, userInfo, postInfo, readPostId } =\n        useSelector((state) => state.itemReducer)\n\n    const [currentPosts, setcurrentPosts] = useState([])\n    const [curPage, setCurPage] = useState(1)\n\n    useEffect(() => {\n        axios({\n            url: url + `/mypost?searchID=${userInfo.user_id}`,\n            method: \"get\",\n            withCredentials: true,\n        }).then((res) => {\n            //console.log(res.data)\n            setcurrentPosts(res.data)\n            dispatch(userPosts(res.data))\n        })\n    }, [])\n\n    // // 페이지네이션 시작\n    // const [currentPage, setCurrentPage] = useState(1)\n    // // 1페이지로 시작\n    // const itemsPerPage = 8\n    // // 한 페이지에 8개씩 보여준다\n    // const lastIdx = currentPage * itemsPerPage\n    // const firstIdx = lastIdx - itemsPerPage\n    // const slicedData = (dataArr) => {\n    //     return dataArr.slice(firstIdx, lastIdx)\n    // }\n    // // 페이지네이션 끝\n\n    //게시물의 총 수량\n    console.log(currentPosts.length)\n    // 총 페이지 수 = Math.ceil(전체 개수/ 한 페이지에 나타낼 데이터 수);\n    console.log(Math.ceil(currentPosts.length / 2))\n    // 화면에 보여질 페이지 그룹 = Math.ceil(현재 페이지/ 한 화면에 나타낼 페이지 수);\n    // const curPage = Math.ceil(1 / 10)\n    // 화면에 보여질 첫번째 페이지\n    // 화면에 보여질 마지막 페이지\n\n    // 게시물사진 클릭했을 때\n    const postClickHandler = (e) => {\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"myPostList\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n    console.log(currentPosts)\n    return (\n        <Outer className=\"MyPostPage\">\n            <div>\n                <GoBackButton className=\"gobackButton\" />\n                <h2>내가 쓴 게시물</h2>\n            </div>\n\n            {/* <GridArea className=\"myPostList\">\n                {slicedData(currentPosts).map((el) => (\n                    <div\n                        className={[\"postItem\"]}\n                        id={el.id}\n                        onClick={postClickHandler}\n                        key={el.id}\n                    >\n                        <PostImg src={el.post_photo} alt=\"posts\" />\n                    </div>\n                ))}\n            </GridArea> */}\n            <FlexArea>\n                {currentPosts.map((el) => (\n                    <div\n                        className={[\"postItem\"]}\n                        id={el.id}\n                        key={el.id}\n                        onClick={postClickHandler}\n                    >\n                        <PostImg src={el.post_photo} alt=\"posts\" />\n                    </div>\n                ))}\n            </FlexArea>\n            <FlexArea2>\n                <div>{\"<<\"}</div>\n                <div>{\"⬅️\"}</div>\n\n                {currentPosts.map((number, idx) =>\n                    idx + 1 === curPage ? (\n                        <CurPage onClick={() => setCurPage(idx + 1)}>\n                            {idx + 1}\n                        </CurPage>\n                    ) : (\n                        <button onClick={() => setCurPage(idx + 1)}>\n                            {idx + 1}\n                        </button>\n                    )\n                )}\n\n                <div>{\"➡️\"}</div>\n                <div>{\">>\"}</div>\n            </FlexArea2>\n        </Outer>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    /* background-color: var(--button-bg-normal); */\n    background-color: #fec0cb;\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n    border: 0;\n    outline: 0;\n    color: white;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        // filePath: `http://localhost:3000/img/blankPost.png`,\n        filePath: `${process.env.REACT_APP_CLIENTURL}/img/blankPost.png`,\n    })\n\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        //console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        //console.log(userInfo.user_id)\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                // headers: {\n                //     // accept: \"application/json\",\n                // },\n                data: {\n                    user_id: userInfo.user_id,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            let content = [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                getRandomIntInclusive(0, 3)\n            ]\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    // user_id: Math.random().toString(36).substr(2, 5),\n                    user_id: \"kimcoding\",\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: \"안녕하세요~이곳의 날씨는 이렇답니다~~~\",\n                    post_content: `이곳의 날씨는 현재 ${content}랍니다~`,\n                    weather: content,\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\n\nconst Outer = styled.div`\n  background-color: yellowgreen;\n`\n\n// 아이디, 댓글내용, 날짜, 좋아요하트, 삭제버튼\nexport default function Comment() {\n  return (\n    <Outer>\n      <li>댓글1</li>\n      <li>댓글2</li>\n      <li>댓글3</li>\n    </Outer>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { Bookmark } from \"../components/BookMarks\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport GoBackButton from \"../components/GoBackButton\"\nimport { useHistory } from \"react-router-dom\"\nimport TopButton from \"../components/TopButton\"\nimport Comment from \"../components/PostRead-comment\"\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n    width: 100vw;\n    background-color: var(--page-bg-color);\n\n    // 오늘의 코디\n    .todayCodi {\n        margin: 0 auto;\n        width: 60%;\n        text-align: center;\n        color: #2e2e2e;\n        padding-top: 2vh;\n        border-top: 1px solid #aaa;\n    }\n\n    h2.warning--nodata {\n        color: #c60239;\n        font-size: 3rem;\n        margin: 0 1rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        .todayCodi {\n            margin-top: 2vh;\n            font-weight: bold;\n        }\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n    padding-top: 8vh;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        padding-top: 5vh;\n    }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 80%;\n    max-width: 960px;\n    text-align: center;\n    margin: 0 auto;\n\n    span {\n        font-size: 2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%; // 추가\n        span {\n            font-size: 1.2rem;\n        }\n    }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n    float: right;\n\n    & .bookmark {\n        cursor: pointer;\n        color: #aaa;\n    }\n`\n\n// 프로필\nconst Profile = styled.div`\n    width: 60rem;\n    margin: 0 auto;\n    margin-top: 2vh;\n    padding-bottom: 3vh;\n    border-bottom: 1px solid #aaa;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    flex-flow: wrap;\n\n    .profileInfo {\n        display: flex;\n        align-items: center;\n        /* margin-left: 1vh; */\n    }\n    .location {\n        font-size: 1.2rem;\n    }\n    span {\n        margin-left: 1vh;\n    }\n    span.date {\n        font-size: 0.8rem;\n        color: #707b7c;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 594px) {\n        .location {\n            margin-top: 1.2vh;\n            font-size: 1.2rem;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        margin-top: 4vh;\n        span {\n            font-size: 0.5rem;\n        }\n        span.date {\n            font-size: 0.5rem;\n            color: #707b7c;\n        }\n        .location {\n            margin-top: 0;\n            font-size: 0.5rem;\n        }\n    }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n    border: 1px solid #aaa;\n    width: 4rem;\n    height: 4rem;\n    border-radius: 50%;\n    @media screen and (max-width: 375px) {\n        width: 2rem;\n        height: 2rem;\n    }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n    // 이미지 사이즈(1000*750)\n    // 다시 확인필요\n    width: 60rem;\n    height: 40rem;\n    display: block;\n    margin: 3vh auto;\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n        height: 30rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        height: 18rem;\n    }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n    width: 330px;\n    margin-top: 4vh;\n    display: flex;\n    margin: 0 auto;\n    margin-bottom: 2vh;\n    justify-content: space-between;\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 1vh;\n        margin-bottom: 1vw;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50%;\n        margin-bottom: 3vh;\n    }\n`\n\nconst Icon = styled.img`\n    @media screen and (max-width: 1081px) {\n        width: 4rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 3rem;\n    }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n    width: 20%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    .warning {\n        display: none;\n    }\n    & p.warning {\n        font-size: 0.9rem;\n        width: 6rem;\n        height: 6rem;\n        text-align: center;\n    }\n\n    img {\n        width: 4rem;\n        height: auto;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 50%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50vw;\n    }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n    background-color: rgba(255, 255, 255, 0.5);\n    margin: 0 auto;\n    margin-bottom: 5vh;\n    padding: 1rem;\n    width: 60rem;\n\n    p {\n        line-height: 2.5rem;\n        font-size: 1.5rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 85%;\n        margin-top: 4vh;\n        p {\n            line-height: 1.5rem;\n            font-size: 1rem;\n        }\n    }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    padding-bottom: 10vh;\n\n    .button {\n        width: 7rem;\n        height: 3rem;\n        border-radius: 1rem;\n        background-color: #ffbfcb;\n        font-size: 1.2rem;\n        font-weight: bold;\n    }\n    .button2 {\n        margin-left: 5rem;\n    }\n    .button:hover {\n        background-color: #ff7f9f;\n    }\n    .button:before {\n        height: 0%;\n        width: 2px;\n    }\n    .button:active {\n        border: none;\n        box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n            inset -4px -4px 6px 0 rgba(255, 255, 255, 0.2),\n            inset 4px 4px 6px 0 rgba(0, 0, 0, 0.4);\n    }\n\n    @media screen and (max-width: 1081px) {\n        .button2 {\n            margin-left: 80px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 40%;\n        display: flex;\n        justify-content: space-between;\n        .button {\n            width: 3rem;\n            height: 2rem;\n            font-size: 1rem;\n        }\n        .button2 {\n            margin-left: 0;\n        }\n    }\n`\n\n// 댓글\nconst CommentSection = styled.div`\n    border: 1px solid red;\n`\nconst PostComment = styled.div`\n    border: 1px solid blue;\n\n    button {\n        border: 1px solid black;\n    }\n`\nconst CommentList = styled.ul`\n    border: 1px solid purple;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function PostRead() {\n    const history = useHistory()\n    const { readPostId, userInfo, postInfo } = useSelector(\n        (state) => state.itemReducer\n    )\n    //console.log(userInfo) //현재접속한 유저\n    //console.log(readPostId) //포스트번호\n    //console.log(postInfo) //본인것만 보임\n    //console.log(pagePostInfo)\n    const postIds = Number(readPostId)\n    //console.log(postIds)\n\n    // postData state 변수\n    const [postData, setPostData] = useState({\n        id: null,\n        post_title: \"\",\n        user_id: \"\",\n        createdAt: \"\",\n        updatedAt: \"\",\n        xLocation: \"\",\n        yLocation: \"\",\n        post_photo: \"\",\n        weather: \"\",\n        wind: \"\",\n        temp: \"\",\n        top_id: \"\",\n        bottom_id: \"\",\n        post_content: \"\",\n        address: \"\",\n    })\n    const [noIdWarning, setNoIdWarning] = useState(\"\")\n\n    // 날짜 처리\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        let hourAndMin = dateObject.toLocaleTimeString(\"en-US\", {\n            hour12: false,\n        })\n        hourAndMin = hourAndMin.slice(0, -3)\n\n        return `${dateOnly} ${hourAndMin}`\n    }\n\n    // 글 불러오기\n    useEffect(() => {\n        function getOnePost(postId) {\n            axios\n                .get(`${url}/readpost`, {\n                    headers: { \"Content-Type\": \"application/json\" },\n                    params: { id: postId },\n                    withCredentials: true,\n                })\n                .then((res) => {\n                    //console.log(res.data)\n                    return setPostData((prev) => res.data)\n                    // return res.data;\n                })\n                .catch((err) => console.log(err))\n        }\n\n        let id\n        if (history.location.state) {\n            id = history.location.state.postId\n        } else {\n            id = readPostId\n        }\n\n        if (!id) {\n            //console.log(\"**postread: id가 없습니다**\")\n            setNoIdWarning((prev) => \"잘못된 접근입니다.\")\n        } else {\n            getOnePost(id)\n        }\n    }, [])\n\n    // 북마크 상태\n    const [bookmarked, setBookmarked] = useState(false)\n\n    // const [isOpen, setIsOpen] = useState(false);\n    // 게시물 수정\n    const [edit, setEdit] = useState(false)\n    // 게시물 삭제\n    const [removePost, setRemovePost] = useState(false)\n\n    // 게시물 수정\n    const editPost = () => {\n        //console.log(\"수정버튼동작확인\")\n        setEdit(true)\n    }\n\n    // 게시물 삭제\n    const deletePost = (e) => {\n        //console.log(\"삭제버튼동작확인\")\n        setRemovePost(true)\n    }\n\n    //게시물 수정 yes버튼\n    const editModalYes = () => {\n        axios({\n            url: url + \"/editpost\",\n            method: \"put\",\n            data: {\n                user_id: userInfo.user_id,\n                post_id: postIds,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            alert(res.data)\n            if (res.data === \"게시물의 작성자가 아닙니다.\") {\n                history.push(\"/mypage\")\n            } else {\n                history.push(\"/editpost\")\n            }\n        })\n        setEdit(false)\n    }\n\n    //게시물 삭제 yes버튼\n    const removeModalYes = () => {\n        // console.log('삭제완료')\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        //console.log(token)\n        axios({\n            url: url + \"/deletepost\",\n            method: \"delete\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            data: { post_id: postIds },\n            withCredentials: true,\n        }).then((res) => {\n            //console.log(res.data)\n            alert(res.data)\n            // alert(\"삭제 완료\")\n            history.push(\"/mypage\")\n        })\n        setRemovePost(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const modalCloseButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const bookmarkHandler = (e) => {\n        //console.log(\"글 읽기 - 북마크 버튼 동작 확인\")\n        axios({\n            url: url + \"/bookmark\",\n            method: \"post\",\n            data: { user_id: userInfo.id, post_id: postIds },\n            // data: { post_id: postId },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }).then((res) => {\n            //console.log(res.data)\n            setBookmarked((prev) => !prev)\n            // history.push(\"/bookmark\")\n        })\n        // console.log(e.currentTarget);\n    }\n\n    // 댓글작성\n    const [contentMsg, setContentMsg] = useState(null)\n    const commentBtnClick = () => {\n        console.log(\"clcik : \", userInfo);\n\n        axios({\n            url: url + \"/sendComment\",\n            method:  \"post\",\n            data: {\n                post_id: postData.id,\n                comment_user_id: userInfo.user_id,\n                comment_content: contentMsg,\n            },\n            withCredentials: true,\n        })\n\n\n        \n    }\n\n    useEffect(() => {\n        axios({\n            url: url + \"/readbookmark\",\n            method: \"post\", \n            data: {\n                user_id: userInfo.id, \n                post_id: postIds\n            }, \n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true\n        })\n        .then((res) => {\n            //console.log(res.data)\n            if(res.data !== \"북마크없음\"){\n              setBookmarked(!bookmarked)\n            }\n        })\n    }, [])\n\n    return (\n        <Outer>\n            {noIdWarning.length !== 0 ? (\n                <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n            ) : (\n                \"\"\n            )}\n            <TopButton />\n            <GoBackButton />\n            <PostHeader className=\"postHeader\">\n                <Title className=\"title\">\n                    <span>{postData.post_title}</span>\n                    <BookmarkIcon\n                        bookmarkHandler={bookmarkHandler}\n                        color={bookmarked ? \"#ED4956\" : \"#aaa\"}\n                    />\n                </Title>\n\n                <Profile className=\"userProfile\">\n                    <div className=\"profileInfo\">\n                        <ProfileImg src={postData.user_Photo} />\n                        <span className=\"nickName\">{postData.nickName}</span>\n                        <span className=\"date\">\n                            {formatDate(postData.updatedAt)}\n                        </span>\n                    </div>\n                    <div>\n                        <p className=\"location\">{postData.address}</p>\n                        {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n                    </div>\n                </Profile>\n            </PostHeader>\n            <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n            <WeatherInfo>\n                {!postData.weather ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n                {!postData.wind ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`}\n                        alt=\"바람아이콘\"\n                    />\n                )}\n                {!postData.temp ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n            </WeatherInfo>\n\n            {/* 코디가 있을 때, 없을 때 */}\n            {\n                // 코디 3개 없을때\n                (!postData.outer_id || postData.outer_id === \"default\") &&\n                (!postData.top_id || postData.top_id === \"default\") &&\n                (!postData.bottom_id ||\n                    postData.top_id === \"default\") ? null : (\n                    <>\n                        <h2 className=\"todayCodi\">오늘의 코디</h2>\n                        <TodayCodi>\n                            {!postData.outer_id ||\n                            postData.outer_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    겉옷 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`}\n                                    alt=\"겉옷\"\n                                />\n                            )}\n                            {!postData.top_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    상의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`}\n                                    alt=\"상의\"\n                                />\n                            )}\n                            {!postData.bottom_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    하의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`}\n                                    alt=\"하의\"\n                                />\n                            )}\n                        </TodayCodi>\n                    </>\n                )\n            }\n\n            <Post>\n                <p>{postData.post_content}</p>\n            </Post>\n\n            <Buttons>\n                <button\n                    className=\"button button1\"\n                    value=\"delete\"\n                    onClick={deletePost}\n                >\n                    삭제\n                </button>\n                {removePost === false ? null : (\n                    <ModalConfirm\n                        yesHandler={removeModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        삭제하시겠습니까?\n                    </ModalConfirm>\n                )}\n                <button className=\"button button2\" onClick={editPost}>\n                    수정\n                </button>\n                {edit === false ? null : (\n                    <ModalConfirm\n                        yesHandler={editModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        수정하시겠습니까?\n                    </ModalConfirm>\n                )}\n            </Buttons>\n\n            <CommentSection>\n                {/* 댓글작성 */}\n                <PostComment>\n                    <input type=\"text\" placeholder=\"댓글을 작성해주세요.\"/>\n                    <button onClick={commentBtnClick}>작성</button>\n                </PostComment>\n                {/* 댓글목록 */}\n                <CommentList>\n                    {/* map */}\n                    <Comment/>\n                </CommentList>\n            </CommentSection>\n\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { Bookmark } from \"../components/BookMarks\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport GoBackButton from \"../components/GoBackButton\"\nimport { useHistory } from \"react-router-dom\"\nimport TopButton from \"../components/TopButton\"\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n    width: 100vw;\n    background-color: var(--page-bg-color);\n\n    // 오늘의 코디\n    .todayCodi {\n        margin: 0 auto;\n        width: 60%;\n        text-align: center;\n        color: #2e2e2e;\n        padding-top: 2vh;\n        border-top: 1px solid #aaa;\n    }\n\n    h2.warning--nodata {\n        color: #c60239;\n        font-size: 3rem;\n        margin: 0 1rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        .todayCodi {\n            margin-top: 2vh;\n            font-weight: bold;\n        }\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n    padding-top: 8vh;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        padding-top: 5vh;\n    }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 80%;\n    max-width: 960px;\n    text-align: center;\n    margin: 0 auto;\n\n    span {\n        font-size: 2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        span {\n            font-size: 1.2rem;\n        }\n    }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n    float: right;\n\n    & .heart {\n        cursor: pointer;\n        color: #aaa;\n    }\n`\n\n// 프로필\nconst Profile = styled.div`\n    width: 60rem;\n    margin: 0 auto;\n    margin-top: 2vh;\n    padding-bottom: 3vh;\n    border-bottom: 1px solid #aaa;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    flex-flow: wrap;\n\n    .profileInfo {\n        display: flex;\n        align-items: center;\n        /* margin-left: 1vh; */\n    }\n    .location {\n        font-size: 1.2rem;\n    }\n    span {\n        margin-left: 1vh;\n    }\n    span.date {\n        font-size: 0.8rem;\n        color: #707b7c;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 594px) {\n        .location {\n            margin-top: 1.2vh;\n            font-size: 1.2rem;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        margin-top: 4vh;\n        span {\n            font-size: 0.5rem;\n        }\n        .location {\n            font-size: 0.5rem;\n        }\n    }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n    border: 1px solid #aaa;\n    width: 4rem;\n    height: 4rem;\n    border-radius: 50%;\n    @media screen and (max-width: 375px) {\n        width: 2rem;\n        height: 2rem;\n    }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n    // 이미지 사이즈(1000*750)\n    // 다시 확인필요\n    width: 60rem;\n    height: 40rem;\n    display: block;\n    margin: 3vh auto;\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n        height: 30rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        height: 18rem;\n    }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n    width: 330px;\n    margin-top: 4vh;\n    display: flex;\n    margin: 0 auto;\n    margin-bottom: 2vh;\n    justify-content: space-between;\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 1vh;\n        margin-bottom: 1vw;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50%;\n        margin-bottom: 3vh;\n    }\n`\n\nconst Icon = styled.img`\n    @media screen and (max-width: 1081px) {\n        width: 4rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 3rem;\n    }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n    width: 20%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    .warning {\n        display: none;\n    }\n    & p.warning {\n        font-size: 0.9rem;\n        width: 6rem;\n        height: 6rem;\n        text-align: center;\n    }\n\n    img {\n        width: 4rem;\n        height: auto;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 50%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50vw;\n    }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n    background-color: rgba(255, 255, 255, 0.5);\n    margin: 0 auto;\n    margin-bottom: 5vh;\n    padding: 1rem;\n    width: 60rem;\n\n    p {\n        line-height: 2.5rem;\n        font-size: 1.5rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 85%;\n        margin-top: 4vh;\n        p {\n            line-height: 1.5rem;\n            font-size: 1rem;\n        }\n    }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n    width: 15rem;\n    margin: 0 auto;\n    padding-bottom: 10vh;\n\n    .button {\n        width: 5rem;\n        height: 3rem;\n        border-radius: 5px;\n        background-color: var(--button-bg-normal);\n        font-size: 1.2rem;\n    }\n    .button2 {\n        margin-left: 5rem;\n    }\n    .button:before {\n        height: 0%;\n        width: 2px;\n    }\n    .button:active {\n        border: none;\n        box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n            inset -4px -4px 6px 0 rgba(255, 255, 255, 0.2),\n            inset 4px 4px 6px 0 rgba(0, 0, 0, 0.4);\n    }\n\n    @media screen and (max-width: 1081px) {\n        .button2 {\n            margin-left: 80px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 40%;\n        display: flex;\n        justify-content: space-between;\n        .button {\n            width: 3rem;\n            height: 2rem;\n            font-size: 1rem;\n        }\n        .button2 {\n            margin-left: 0;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function PostRead() {\n    const history = useHistory()\n    const { readPostId, userInfo, postInfo } = useSelector(\n        (state) => state.itemReducer\n    )\n    console.log(userInfo) //현재접속한 유저\n    console.log(readPostId) //포스트번호\n    console.log(postInfo) //본인것만 보임\n    // console.log(pagePostInfo)\n    const postIds = Number(readPostId)\n    console.log(postIds)\n\n    // postData state 변수\n    const [postData, setPostData] = useState({\n        id: null,\n        post_title: \"\",\n        user_id: \"\",\n        createdAt: \"\",\n        updatedAt: \"\",\n        xLocation: \"\",\n        yLocation: \"\",\n        post_photo: \"\",\n        weather: \"\",\n        wind: \"\",\n        temp: \"\",\n        top_id: \"\",\n        bottom_id: \"\",\n        post_content: \"\",\n        address: \"\",\n    })\n    const [noIdWarning, setNoIdWarning] = useState(\"\")\n\n    // 날짜 처리\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        let hourAndMin = dateObject.toLocaleTimeString(\"en-US\", {\n            hour12: false,\n        })\n        hourAndMin = hourAndMin.slice(0, -3)\n\n        return `${dateOnly} ${hourAndMin}`\n    }\n\n    // 글 불러오기\n    useEffect(() => {\n        function getOnePost(postId) {\n            axios\n                .get(`${url}/readpost`, {\n                    headers: { \"Content-Type\": \"application/json\" },\n                    params: { id: postId },\n                    withCredentials: true,\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    return setPostData((prev) => res.data)\n                    // return res.data;\n                })\n                .catch((err) => console.log(err))\n        }\n\n        let id\n        if (history.location.state) {\n            id = history.location.state.postId\n        } else {\n            id = readPostId\n        }\n\n        if (!id) {\n            console.log(\"**postread: id가 없습니다**\")\n            setNoIdWarning((prev) => \"잘못된 접근입니다.\")\n        } else {\n            getOnePost(id)\n        }\n    }, [])\n\n    // 북마크 상태\n    const [bookmarked, setBookmarked] = useState(false)\n\n    // const [isOpen, setIsOpen] = useState(false);\n    // 게시물 수정\n    const [edit, setEdit] = useState(false)\n    // 게시물 삭제\n    const [removePost, setRemovePost] = useState(false)\n\n    // 게시물 수정\n    const editPost = () => {\n        console.log(\"수정버튼동작확인\")\n        setEdit(true)\n    }\n\n    // 게시물 삭제\n    const deletePost = (e) => {\n        console.log(\"삭제버튼동작확인\")\n        setRemovePost(true)\n    }\n\n    //게시물 수정 yse버튼\n    const editModalYes = () => {\n        axios({\n            url: url + \"/editpost\",\n            method: \"put\",\n            data: {\n                user_id: userInfo.user_id,\n                post_id: postIds,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            alert(res.data)\n            if (res.data === \"게시물의 작성자가 아닙니다.\") {\n                history.push(\"/mypage\")\n            } else {\n                history.push(\"/editpost\")\n            }\n        })\n        setEdit(false)\n    }\n\n    //게시물 삭제 yes버튼\n    const removeModalYes = () => {\n        // console.log('삭제완료')\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        //console.log(token)\n        axios({\n            url: url + \"/deletepost\",\n            method: \"delete\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            data: { post_id: postIds },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            alert(res.data)\n            // alert(\"삭제 완료\")\n            history.push(\"/mypage\")\n        })\n        setRemovePost(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const modalCloseButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const bookmarkHandler = (e) => {\n        console.log(\"글 읽기 - 북마크 버튼 동작 확인\")\n        //눌렀을 때 북마크에 저장\n        //다시 누르면 해제\n        axios({\n            url: url + \"/bookmark\",\n            method: \"post\",\n            data: { user_id: userInfo.id, post_id: postIds },\n            // data: { post_id: postId },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setBookmarked((prev) => !prev)\n            // history.push(\"/bookmark\")\n        })\n        // console.log(e.currentTarget);\n    }\n\n    return (\n        <Outer>\n            {noIdWarning.length !== 0 ? (\n                <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n            ) : (\n                \"\"\n            )}\n            <TopButton />\n            <GoBackButton />\n            <PostHeader className=\"postHeader\">\n                <Title className=\"title\">\n                    <span>{postData.post_title}</span>\n                    <BookmarkIcon\n                        bookmarkHandler={bookmarkHandler}\n                        color={bookmarked ? \"#aaa\" : \"#ED4956\"}\n                    />\n                </Title>\n\n                <Profile className=\"userProfile\">\n                    <div className=\"profileInfo\">\n                        <ProfileImg src={postData.user_Photo} />\n                        <span className=\"nickName\">{postData.nickName}</span>\n                        <span className=\"date\">\n                            {formatDate(postData.updatedAt)}\n                        </span>\n                    </div>\n                    <div>\n                        <p className=\"location\">{postData.address}</p>\n                        {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n                    </div>\n                </Profile>\n            </PostHeader>\n            <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n            <WeatherInfo>\n                {!postData.weather ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n                {!postData.wind ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`}\n                        alt=\"바람아이콘\"\n                    />\n                )}\n                {!postData.temp ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n            </WeatherInfo>\n\n            {/* 코디가 있을 때, 없을 때 */}\n            {\n                // 코디 3개 없을때\n                (!postData.outer_id || postData.outer_id === \"default\") &&\n                (!postData.top_id || postData.top_id === \"default\") &&\n                (!postData.bottom_id ||\n                    postData.top_id === \"default\") ? null : (\n                    <>\n                        <h2 className=\"todayCodi\">오늘의 코디</h2>\n                        <TodayCodi>\n                            {!postData.outer_id ||\n                            postData.outer_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    겉옷 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`}\n                                    alt=\"겉옷\"\n                                />\n                            )}\n                            {!postData.top_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    상의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`}\n                                    alt=\"상의\"\n                                />\n                            )}\n                            {!postData.bottom_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    하의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`}\n                                    alt=\"하의\"\n                                />\n                            )}\n                        </TodayCodi>\n                    </>\n                )\n            }\n\n            <Post>\n                <p>{postData.post_content}</p>\n            </Post>\n\n            <Buttons>\n                <button\n                    className=\"button button1\"\n                    value=\"delete\"\n                    onClick={deletePost}\n                >\n                    삭제\n                </button>\n                {removePost === false ? null : (\n                    <ModalConfirm\n                        yesHandler={removeModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        삭제하시겠습니까?\n                    </ModalConfirm>\n                )}\n                <button className=\"button button2\" onClick={editPost}>\n                    수정\n                </button>\n                {edit === false ? null : (\n                    <ModalConfirm\n                        yesHandler={editModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        수정하시겠습니까?\n                    </ModalConfirm>\n                )}\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation, postInfo, readPostId } = useSelector(\n        (state) => state.itemReducer\n    )\n    // console.log('userId : ',userInfo);\n    // console.log('postInfo : ', postInfo);\n    // console.log('readPostId : ', readPostId);\n    const [postId, setPostId] = useState(readPostId)\n    const [selectWeather, setSelectWeather] = useState() // 날씨\n    const [selectWind, setSelectWind] = useState() // 바람\n    const [selectTemp, setSelectTemp] = useState() // 온도\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    const postIds = Number(readPostId)\n    // console.log('postIds : ', postIds)\n\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 기존 데이터 렌더링\n    useEffect(() => {\n        axios({\n            url: url + `/readpost?searchID=${userInfo.postIds}`,\n            method: \"get\",\n            params: { id: postIds },\n            withCredentials: true,\n        })\n            .then((res) => {\n                console.log(\"res : \", res.data) // 해당 게시물 데이터 들어옴\n                // 제목\n                setTitle(res.data.post_title)\n                // 사진\n                setUploadedImg({ filePath: res.data.post_photo })\n                // 날씨\n                setIsFilteringBtnActive({ [res.data.weather]: true })\n                setIsFilteringBtnActive2({ [res.data.wind]: true })\n                setIsFilteringBtnActive3({ [res.data.temp]: true })\n\n                // 코디\n                setSelectValueOuter(res.data.outer_id)\n                setSelectValueTop(res.data.top_id)\n                setSelectValueBottom(res.data.bottom_id)\n                // 내용\n                setPostText(res.data.post_content)\n            })\n            .catch((err) => console.log(err))\n    }, [])\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/editpost\",\n                method: \"put\",\n                data: {\n                    user_id: userInfo.user_id,\n                    post_id: postId,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    user_id: Math.random().toString(36).substr(2, 5),\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: Math.random().toString(36).substr(2, 20),\n                    post_content: Math.random().toString(36).substr(2, 100),\n                    weather: [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드 </Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n    }\n`\n\nexport const HalfPage = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n    & img {\n        margin: 2rem;\n        width: 50vw;\n        height: auto;\n    }\n\n    & p {\n        font-size: 1.5rem;\n        margin: 1rem;\n        line-height: 150%;\n    }\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n        & img {\n            margin: 2rem;\n            width: 95%;\n            height: auto;\n        }\n\n        & p {\n            margin: 2rem;\n            width: 35vw;\n            height: auto;\n        }\n    }\n`\n\nexport const AnimatedP = styled.p`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \"1.5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\n\nexport const AnimatedImg = styled.img`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \".5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\nconst Button = styled.button`\n// width: 140px;\n// height: 45px;\n// font-size: 11px;\n// border:3px solid pink;\nfont-family: 'IBM Plex Sans KR', sans-serif;\n\nfont-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\npadding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\nmargin: 0.5rem;\nborder-radius: 10%;\ncolor: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\nbackground-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\ntext-transform: uppercase;\nletter-spacing: 2.5px;\nfont-weight: 500;\ncolor: #000;\nbackground-color: #fff;\n// border: none;\nborder-radius: 45px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\ntransition: all 0.3s ease 0s;\ncursor: pointer;\noutline: none;\n}\n\n&:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\ntransform: translateY(-4px);\n}\n`\nconst Buttons = styled.button`\n    // height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function One({ delayOne, delayTwo }) {\n    const history = useHistory()\n\n    return (\n        <Contents className={[\"landingPagePart\", \"one\"]}>\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\">\n                    일기 예보가 <br />\n                    믿음직스럽지 못하시다구요?\n                    <br />\n                </AnimatedP>\n                <div className=\"picture-png left\">\n                    <AnimatedImg\n                        src=\"img/firstpage/phone-and-human.png\"\n                        alt=\"human with phone\"\n                    />\n                </div>\n\n                <Buttons>\n                    <Button onClick={() => history.push(\"/map\")}>\n                        시작하기\n                    </Button>\n                </Buttons>\n            </HalfPage>\n\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    동네 주민이 올린 하늘의 사진을 <br />\n                    실시간으로 확인할 수 있어요.\n                    <br />\n                </AnimatedP>\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    여러분도 하늘사진을 공유하고 <br />\n                    동네 날씨예보관이 되어 보세요!\n                </AnimatedP>\n                <div className=\"picture-png right\">\n                    <AnimatedImg\n                        src=\"img/firstpage/town.png\"\n                        alt=\"street\"\n                        delay={delayTwo}\n                    />\n                </div>\n            </HalfPage>\n        </Contents>\n    )\n}\n","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40vw;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\"\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\"\nimport { useHistory } from \"react-router-dom\"\nimport { TwoPictures } from \"./Three\"\nimport styled from \"styled-components\"\n\nconst Button = styled.button`\n// width: 140px;\n// height: 45px;\n// font-size: 11px;\nborder:3px solid pink;\nfont-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\nfont-family: 'IBM Plex Sans KR', sans-serif;\n\npadding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\nmargin: 0.5rem;\nborder-radius: 10%;\ncolor: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\nbackground-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\ntext-transform: uppercase;\nletter-spacing: 2.5px;\nfont-weight: 500;\ncolor: #000;\nbackground-color: #fff;\n// border: none;\nborder-radius: 45px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\ntransition: all 0.3s ease 0s;\ncursor: pointer;\noutline: none;\n}\n\n&:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\ntransform: translateY(-4px);\n}\n`\nconst Buttons = styled.button`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function Four({\n    delayOne,\n    delayTwo,\n    delayThree,\n    delayFour,\n    delayFive,\n}) {\n    const history = useHistory()\n    return (\n        <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n            <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n            <ContentsUnderTitle className=\"contents\">\n                <HalfPage className=\"half-page\">\n                    <AnimatedP className=\"desc\" delay={delayTwo}>\n                        날씨에 따라 코디를 <br />\n                        추천하거나 <br />\n                        코디를 추천 받으세요.\n                    </AnimatedP>\n                    <div className=\"picture-png left\">\n                        <AnimatedImg\n                            src=\"img/firstpage/destination.png\"\n                            alt=\"reading mobile phone map\"\n                            delay={delayThree}\n                        />\n                    </div>\n                </HalfPage>\n                <HalfPage className=\"half-page\">\n                    <TwoPictures className=\"picture-png right\">\n                        <AnimatedImg\n                            src=\"img/firstpage/publish_post.png\"\n                            alt=\"publishing post\"\n                            delay={delayFour}\n                        />\n                        <AnimatedImg\n                            src=\"img/firstpage/among_nature.png\"\n                            alt=\"watching tree\"\n                            delay={delayFour}\n                        />\n                    </TwoPictures>\n                    <AnimatedP className=\"desc\" delay={delayFive}>\n                        날씨에 따라 코디를 추천받거나, <br />\n                        예보글을 작성하여 <br />\n                        적절한 코디를 추천할 수 있어요.\n                        <Buttons>\n                            <Button onClick={() => history.push(\"/map\")}>\n                                시작하기\n                            </Button>\n                        </Buttons>\n                    </AnimatedP>\n                </HalfPage>\n            </ContentsUnderTitle>\n        </TitleAndContents>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { changeUser } from \"../actions/index\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\n\n// 부모요소에 postion: relative 필요함\n// props\n// duration : 따옴표 안에 s(초) 단위로 지정\n// ex) duration={'3s'}\n// 지정하지 않은 경우 기본값 2s\n// 숫자가 작을수록 빨리 돌아간다\n// size : 따옴표 안에 px 단위로 지정\n// ex) size={'30px'}\n// 지정하지 않은 경우 기본값 (가로 === 세로)\n// 모바일 50px\n// 데스크탑 100px\n// hide\n// true -> display: none;\n// false(지정하지 않은 경우 포함) -> display: flex;\n\nconst LoadingContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n    justify-content: center;\n    width: 100vw;\n    min-height: 100vh;\n    background-color: rgba(253, 254, 254, 0.5);\n    // 밝은 회색, opacity 0.3\n    z-index: 300;\n\n    & > img {\n        margin-top: calc(var(--mobile-header-height) + 10vh);\n\n        @media screen and (min-width: 1081px) {\n            margin-top: calc(var(--desktop-header-height) + 10vh);\n        }\n    }\n`\n\nexport default function Loading({ size, duration, hide }) {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n\n    return (\n        <LoadingContainer className=\"loadingContainer\" hide={hide}>\n            <LoadingSpinner size={size} duration={duration} />\n        </LoadingContainer>\n    )\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport One from \"../components/FirstPage/One\"\nimport Two from \"../components/FirstPage/Two\"\nimport Three from \"../components/FirstPage/Three\"\nimport Four from \"../components/FirstPage/Four\"\nimport { changeMapPage } from \"../actions/index\"\nimport React, { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport Loading from \"../pages/Loading\"\nimport Footer from \"../components/Footer\"\n\nconst FirstPageContainer = styled.div`\n    background: linear-gradient(#fff, #fef9ef, #fff5dc, #d7f9ff, #aaf2ff);\n`\n\nconst FooterDiv = styled.div`\n    //모바일\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        //pc\n        display: block;\n    }\n`\n\nexport default function FirstPage() {\n    const dispatch = useDispatch()\n    // console.log(One)\n    // console.log(Two)\n    // console.log(Three)\n    // console.log(Four)\n\n    // let assignedHeight = window.innerHeight * 0.95;\n    // const [ locationY, setLocationY ] = useState(0);\n    // console.log('[스크롤 위치]', Math.floor(locationY));\n    // const scrollHandler = () => {\n    //   setLocationY(window.pageYOffset);\n    // }\n\n    // useEffect(()=>{\n    //   window.addEventListener('scroll', scrollHandler);\n    //   return () => {\n    //     window.removeEventListener('scroll', scrollHandler);\n    //   }\n    // }, []);\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n\n    return (\n        <>\n            {!One && !Two && !Three && !Four ? (\n                <Loading></Loading>\n            ) : (\n                <FirstPageContainer className=\"firstPageWhole\">\n                    <One delayOne={\"1s\"} delayTwo={\"1.2s\"} />\n                    <Two\n                        delayOne={\"2.2s\"}\n                        delayTwo={\"2.5s\"}\n                        delayThree={\"2.6s\"}\n                        delayFour={\"2.7s\"}\n                        delayFive={\"2.8s\"}\n                    />\n                    <Three\n                        delayOne={\"4.0s\"}\n                        delayTwo={\"4.3s\"}\n                        delayThree={\"4.4s\"}\n                        delayFour={\"4.5s\"}\n                        delayFive={\"4.6s\"}\n                    />\n                    <Four\n                        delayOne={\"5.5s\"}\n                        delayTwo={\"5.8s\"}\n                        delayThree={\"5.9s\"}\n                        delayFour={\"6.0s\"}\n                        delayFive={\"6.1s\"}\n                    />\n                    <FooterDiv>\n                        <Footer></Footer>\n                    </FooterDiv>\n                </FirstPageContainer>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { changeCurRoom } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\n\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\nconst socket = io.connect(url)\n\nexport default function Messenger() {\n    const dispatch = useDispatch()\n    const [prevmsg, setprevmsg] = useState([])\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)-hoon\n    const [msgevent, setmsgevent] = useState(\"\")\n    //메시지의 총 집합-hoon\n    const [newMsgSection, setNewMsgSection] = useState([])\n    //방을 새로 개설할때 쓰인다-hoon\n    const [receiver_id, setreceiver_id] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방-hoon\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트-hoon\n    const [joinedRoom, setjoinedRoom] = useState([\"\"])\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    const [recievemessage, setrecievemessage] = useState([])\n    const history = useHistory()\n    console.log(recievemessage)\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)-hoon\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setreceiver_id(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.-hoon\n        const user_id_sort = [userInfo.user_id, receiver_id].sort()\n        // socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n        // setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        //룸네임이 만들어지면 axios로 접속된 목록을 추가하여 데이터 베이스에 저장해주자-hoon\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: receiver_id,\n                roomName: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }\n    //처음에 가지고 있는 참여된 방이 있는지 조회-hoon\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }, [])\n\n    useState(() => {\n        setNewMsgSection([...newMsgSection])\n        setprevmsg([...prevmsg])\n        console.log(newMsgSection)\n    }, [roomInOut, prevmsg, newMsgSection])\n\n    //방을 클릭했을때 방을 입장하게 할 함수-hoon\n    function roomListClick(clickRoomName) {\n        console.log(clickRoomName)\n        // setcurRoom(clickRoomName)\n        dispatch(changeCurRoom(clickRoomName))\n\n        history.push(\"/chatroom\")\n\n        // setRoomInOut(true)\n\n        // //현재 방입장-hoon\n        // // socket.emit(\"enter_room\", clickRoomName)\n        // //방입장시 렌더링 할 메시지를 가져와야한다.\n        // axios({\n        //     url: url + `/chat/messagelist`,\n        //     method: \"post\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //     },\n        //     data: {\n        //         user_id: userInfo.user_id,\n        //         receiver_id: curRoom\n        //             .replace(\"_\", \"\")\n        //             .replace(`${userInfo.user_id}`, \"\"),\n        //         roomName: curRoom,\n        //     },\n        //     withCredentials: true,\n        // }).then((res) => {\n        //     setprevmsg(res.data)\n        // })\n    }\n    // useEffect(() => {\n    //     console.log(curRoom)\n    // }, [curRoom])\n    //채팅방 메시지 글작성 이벤트타겟용 함수\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        }).then((res) =>\n            socket.emit(\"message\", {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                chatcontent: msgevent,\n            })\n        )\n        setmsgevent(\"\")\n    }\n\n    // socket.on(\"newMsg\", (msg2) => {\n    //     // console.log(\"메시지 적용되야됨\")\n    //     //총 메시지리스트를 여기서 업데이트하고있다\n    //     setprevmsg([...msg, msg2])\n    // })\n    // useEffect(() => {\n    //     axios({\n    //         url: url + \"/chat/messagelist\",\n    //         method: \"post\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         data: {\n    //             roomName: curRoom,\n    //             chatcontent: JSON.stringify(msg),\n    //         },\n    //         withCredentials: true,\n    //     }).then((res) => {})\n    //     // .then((res) => console.log(\"글 업데이트 완료\"))\n    // }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n\n    return (\n        <Container className=\"mapcontainer\">\n            <RoomChatDiv>\n                <ProfileName>{userInfo.user_id}</ProfileName>\n                <UserPhotoDiv>\n                    <UserPhotoImg src={userInfo.user_Photo} />\n                </UserPhotoDiv>\n                <FriendInputAndBtn>\n                    <FriendInput\n                        onChange={(e) => roomNamefunc(e)}\n                        placeholder=\"친구 ID\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={roomNameSubmit}\n                                icon={faPlusSquare}\n                            />\n                        </Button>\n                    </Buttons>\n                </FriendInputAndBtn>\n                <RoomList>\n                    <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                    {joinedRoom.map((el) => (\n                        <FriendListDiv onClick={() => roomListClick(el)}>\n                            {el\n                                .replace(\"_\", \"\")\n                                .replace(`${userInfo.user_id}`, \"\")}\n                        </FriendListDiv>\n                    ))}\n                </RoomList>\n            </RoomChatDiv>\n        </Container>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n}\nconst socket = io.connect(url)\n\nexport default function Messenger2() {\n    // const dispatch = useDispatch()\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n    //방을 새로 개설할때 쓰인다\n    const [roomName, setroomName] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방\n    //메시지의 총 집합\n    const [msg, setmsg] = useState([\"\"])\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)\n    const [msgevent, setmsgevent] = useState(\"\")\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트\n    const [joinedRoom, setjoinedRoom] = useState([])\n    const history = useHistory()\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setroomName(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.\n        const user_id_sort = [userInfo.user_id, roomName].sort()\n        socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n        //axios로 접속된 목록을 추가하여 데이터 베이스에 저장하는데, 유즈이펙트로, 변화가 있을때만 저장한다.\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                opponent: roomName,\n                roomlist: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setjoinedRoom(res.data)\n        })\n    }\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => setjoinedRoom(res.data))\n    }, [])\n\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        socket.emit(\"enter_room\", clickRoomName)\n        setcurRoom(clickRoomName)\n\n        axios({\n            url: url + `/chat/messagelist?roomlist=${clickRoomName}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setmsg(res.data)\n        })\n    }\n\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    function msgSubmit() {\n        socket.emit(\n            \"newMsg\",\n            `${userInfo.user_id} : ` + msgevent,\n            curRoom,\n            () => {\n                // console.log(\"메시지추가 찍혀라\")\n                setmsg([...msg, `${userInfo.user_id} : ` + msgevent])\n            }\n        )\n    }\n    // socket.on(\"newMsg\", setmsg([msg, ...msg]))\n\n    // socket.on(\"welcome\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 방에 들어왔습니다\", ...msg])\n    // })\n    // socket.on(\"bye\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 나갔습니다\", ...msg])\n    // })\n    socket.on(\"newMsg\", (msg2) => {\n        // console.log(\"메시지 적용되야됨\")\n        //총 메시지리스트를 여기서 업데이트하고있다\n        setmsg([...msg, msg2])\n    })\n    useEffect(() => {\n        axios({\n            url: url + \"/chat/messagelist\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                roomlist: curRoom,\n                chatcontent: JSON.stringify(msg),\n            },\n            withCredentials: true,\n        }).then((res) => {})\n        // .then((res) => console.log(\"글 업데이트 완료\"))\n    }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el.split(\"_\").indexOf(userInfo.user_id) === 0\n                                    ? el.split(\"_\")[1]\n                                    : el.split(\"_\")[0]}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {msg.map((el) => {\n                            return <div>{el}</div>\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    /* justify-content: space-around; */\n    justify-content: start;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    /* background-color: var(--button-bg-normal); */\n    background-color: #fec0cb;\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n    border: 0;\n    outline: 0;\n    color: white;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        /* justify-content: flex-start; */\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst WriteText = styled.div`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"5vh\")};\n    text-align: center;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    /* margin: 2rem 1rem 4rem; */\n    margin: 1.5rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\n\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios({\n            url: url + \"/edituserinfo\",\n            method: \"put\",\n            data: {\n                location: userRoadAddress,\n                user_photo: uploadedImg.filePath,\n            },\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            withCredentials: true,\n        })\n            .then((res) => {\n                alert(\"변경 완료, 로그아웃 후 확인해주세요:)\")\n                history.push(\"/home\")\n                console.log(res.data)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0,-4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <WriteText>프로필 사진</WriteText>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <WriteText>사는곳</WriteText>\n                <DaumPostcode onComplete={handleComplete} />\n                <ValidationListBox className=\"pwValidationList\">\n                    {userRoadAddress}\n                </ValidationListBox>\n                <Button className=\"submitButton\" onClick={submitButtonHandler}>\n                    등록\n                </Button>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport io from \"socket.io-client\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeNewMsgSection } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\n\nconst MeDiv = styled.div`\n    // border-bottom: 1px solid green;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: right;\n\n    overflow: auto;\n`\nconst YouDiv = styled.div`\n    // border-bottom: 1px solid black;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: left;\n\n    overflow: auto;\n`\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\nconst socket = io.connect(url)\n\nexport default function ChatRoom() {\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const { userInfo, curRoom, newMsgSection } = useSelector(\n        (state) => state.itemReducer\n    )\n    const [prevmsg, setprevmsg] = useState([])\n    // const [newMsgSection, setNewMsgSection] = useState([])\n    const [msgevent, setmsgevent] = useState(\"\")\n\n    console.log(curRoom)\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg, newMsgSection])\n    // }, [newMsgSection])\n\n    // recievemessage = prevmsg\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg])\n    // }, [recievemessage])\n    // let recievemessage = function (msgobj) {\n    function recievemessage(msgobj) {\n        // this.setState({\n        //     messages:[...this.state.messages,messageobject]\n        // })\n        dispatch(changeNewMsgSection([msgobj]))\n    }\n    /////////////메시지를 받았을때/////\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n        socket.on(\"sendmsg\", (msgobj) =>\n            // setNewMsgSection([...newMsgSection, msgobj])\n            {\n                console.log(newMsgSection)\n                console.log(msgobj)\n                // return dispatch(changeNewMsgSection([...newMsgSection, msgobj]))\n                recievemessage({\n                    user_id: msgobj.receiver_id,\n                    receiver_id: msgobj.user_id,\n                    chatcontent: msgobj.chatcontent,\n                })\n            }\n        )\n    }, [])\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n    }, [])\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        const user_id = userInfo.user_id\n        const receiver_id = curRoom\n            .replace(\"_\", \"\")\n            .replace(`${userInfo.user_id}`, \"\")\n\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        })\n        // .then((res) =>\n        socket.emit(\"message\", {\n            user_id: user_id,\n            receiver_id: receiver_id,\n            // user_id: curRoom\n            //     .replace(\"_\", \"\")\n            //     .replace(`${userInfo.user_id}`, \"\"),\n            // receiver_id: userInfo.user_id,\n\n            chatcontent: msgevent,\n        })\n        // )\n        setmsgevent(\"\")\n        console.log(prevmsg)\n        console.log(newMsgSection)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            <GoBackButton>\n                <FontAwesomeIcon\n                    icon={faChevronLeft}\n                    className=\"fa-fw\"\n                    color=\"#ACB5BD\"\n                    onClick={() => history.push(\"/messenger\")}\n                />\n            </GoBackButton>\n            <ChatList>\n                <div>{\"채팅창\"}</div>\n            </ChatList>\n            {prevmsg.map((el) => {\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            {newMsgSection.map((el) => {\n                console.log(el)\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            <input\n                onChange={(e) => msgfunc(e)}\n                placeholder=\"메시지\"\n                required\n                type=\"text\"\n                value={msgevent}\n            />\n            <Buttons>\n                <Button>\n                    <FontAwesomeIcon onClick={msgSubmit} icon={faPaperPlane} />\n                </Button>\n            </Buttons>\n        </Container>\n    )\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box;   \n}\n\nbody { \n  font-family: 'IBM Plex Sans KR', sans-serif;\n  }\n  \n`\n\nexport default GlobalStyle\n","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport ReadBookMarkPost from \"./pages/ReadBookMarkPost\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport Messenger from \"./pages/Messenger\"\nimport Messenger2 from \"./pages/Messenger2\"\nimport Loading from \"./pages/Loading\"\nimport EditUserInfo from \"./pages/EditUserInfo\"\nimport ChatRoom from \"./pages/ChatRoom\"\nimport Footer from \"../src/components/Footer\"\n\nimport { changeIsLogin, changeUser } from \"./actions/index\"\n\nimport styled from \"styled-components\"\nimport GlobalStyle from \"./components/GlobalStyle\"\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n}\nexport default function App() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const isInput = true\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        //console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                //console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <GlobalStyle />\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/edituserinfo\">\n                    <EditUserInfo></EditUserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/postread\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/bookmarkpost\">\n                    <ReadBookMarkPost></ReadBookMarkPost>\n                </Route>\n                <Route exact path=\"/postedit\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/Messenger\">\n                    <Messenger />\n                </Route>\n                <Route exact path=\"/Messenger2\">\n                    <Messenger2 />\n                </Route>\n                <Route exact path=\"/loading\">\n                    <Loading />\n                </Route>\n                <Route exact path=\"/chatroom\">\n                    <ChatRoom />\n                </Route>\n\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/first\" />\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n    //만드신 변수는 어떤 변수인지 설명 부탁드려요-hoon\n    isLogin: false, //로그인상태 -hoon\n    genderToggle: 1, //기본값 1, 회원가입시에 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n    curLocation: { lat: \"\", lon: \"\" }, //현재 위치 변수-hoon\n    userInfo: {}, //회원 로그인시 정보 저장할 변수-hoon\n    weatherFilter: \"\", //헤더에서 날씨 필터에서 선택된 날씨-hoon\n    mapPage: false, //헤더에서 날씨필터 없애기용 변수-hoon\n    curRoom: null, //메신져에서 방입장시 사용할 변수-hoon\n    newMsgSection: [\n        // {\n        //     user_id: \"\",\n        //     receiver_id: \"\",\n        //     roomName: \"\",\n        // },\n    ], //메신져기능에서 새로운 메시지를 렌더링할 변수\n    searchWord: \"\",\n    selectWord: \"\",\n    editPassword: false,\n    start: 0, //북마크 페이지네이션\n    end: 10,\n    current: 1,\n    item: [], //기상청 데이터\n    postInfo: {}, //post 정보\n    readPostId: \"\", // 북마크나 지도 모달에서 클릭한 게시물의 아이디\n    homePost: [], // Home의 최근 게시물\n}\n","import {\n    CHANGE_SEARCH_WORD,\n    CHANGE_SELECT_WORD,\n    CHANGE_USER_INFO,\n    CHANGE_USER_GENDER,\n    CHANGE_IS_LOGIN,\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    CHANGE_USER_PW,\n    CHANGE_CUR_LOCATION,\n    UPDATE_WEATHERINFO,\n    UPDATE_USER_POST,\n    UPDATE_POST_ID,\n    CHANGE_WHEATER_FILTER,\n    CHANGE_MAP_PAGE,\n    CHANGE_CURROOM,\n    CHANGE_NEWMSGSECTION,\n} from \"../actions/index\"\nimport { initialState } from \"./initialState\"\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_NEWMSGSECTION:\n            return {\n                ...state,\n                newMsgSection: action.payload.newmsg,\n            }\n        case CHANGE_CURROOM:\n            return {\n                ...state,\n                curRoom: action.payload.room,\n            }\n        case CHANGE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload,\n            }\n        // 새로운기능은 위의 양식으로 아래쪽에 만들어서 쓸수있다.-hoon\n\n        case CHANGE_USER_GENDER:\n            return {\n                ...state,\n                genderToggle: action.payload,\n            }\n\n        case UPDATE_CURRENT_PAGE:\n            return {\n                ...state,\n                current: action.payload,\n            }\n\n        case UPDATE_START_END_PAGE:\n            return {\n                ...state,\n                start: action.payload.start,\n                end: action.payload.end,\n            }\n\n        case CHANGE_IS_LOGIN:\n            return {\n                ...state,\n                isLogin: action.payload,\n            }\n\n        case CHANGE_USER_PW:\n            return {\n                ...state,\n                editPassword: action.payload,\n            }\n\n        case CHANGE_SEARCH_WORD:\n            return {\n                ...state,\n                searchWord: action.payload,\n            }\n\n        case CHANGE_SELECT_WORD:\n            return {\n                ...state,\n                selectWord: action.payload,\n            }\n\n        case CHANGE_CUR_LOCATION:\n            return {\n                ...state,\n                curLocation: action.payload,\n            }\n        case UPDATE_WEATHERINFO:\n            return {\n                ...state,\n                item: action.payload,\n            }\n\n        case UPDATE_USER_POST:\n            return {\n                ...state,\n                postInfo: action.payload,\n            }\n\n        case UPDATE_POST_ID:\n            return {\n                ...state,\n                readPostId: action.payload,\n            }\n        case CHANGE_WHEATER_FILTER:\n            return {\n                ...state,\n                weatherFilter: action.payload,\n            }\n        case CHANGE_MAP_PAGE:\n            return {\n                ...state,\n                mapPage: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default itemReducer\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n\r\nexport default store\r\n","/* eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}