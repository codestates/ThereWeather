{"version":3,"sources":["actions/index.js","components/LoadingSpinner.js","components/MapBox.js","pages/Map.js","components/TopButton.js","pages/Home.js","pages/BookMark.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","pages/Login.js","pages/PasswordEdit.js","pages/SignUp.js","components/Pagination.js","pages/MyPost.js","pages/Write.js","components/Heart.js","pages/PostRead.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/FirstPage.js","pages/Messenger.js","pages/Messenger2.js","pages/Loading.js","components/GlobalStyle.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","UPDATE_WEATHERINFO","UPDATE_USER_POST","UPDATE_POST_ID","CHANGE_WHEATER_FILTER","CHANGE_MAP_PAGE","changeSearchword","searchWord","type","payload","changeIsLogin","trueOrFalse","userPosts","postinfo","updatePostId","pageId","changeMapPage","mapPage","Spinner","styled","img","props","size","duration","LoadingSpinner","src","ImgContainer","div","PostListModal","SlideModal","bottom","GraphModal","GraphTitle","GraphTitleDiv","GraphTitleDiv2","BarGraphFlex","BarGraphchild","url","process","Location","useSelector","state","itemReducer","weatherFilter","useState","isLoading","setisLoading","history","useHistory","dispatch","useDispatch","kakao","window","sunny","cloudy","rainy","snowy","weatherCount","setWeatherCount","weatherApi","setweatherApi","bottom_id","createdAt","id","post_content","post_photo","post_title","temp","top_id","updatedAt","user_id","weather","wind","xLocation","yLocation","postList","setPostList","console","log","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","LEFT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","timer","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","markers","positions","i","n","idx","outer_id","infowindow","addMarkers","clearTimeout","setTimeout","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","toString","axios","La","Ma","method","headers","withCredentials","then","res","length","getCenter","fcstValue","Box","Box2","EmoticonBox","PostTitle","PostContent","PostBox","PostImg","IconImg","LoadingBoxDiv","Button","button","bgGrey","isText","labels","datasets","backgroundColor","hoverBackgroundColor","data2","label","borderColor","borderWidth","hoverBorderColor","isOnOff","setisOnOff","postBoxHandler","e","elem","target","classList","contains","parentNode","push","pathname","postId","onClick","icon","faChevronDown","faChevronUp","className","post","Container","TopButton","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","alt","scrollTo","top","behavior","HomeContainer","TodaysDate","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","Codi","RightContainer","RightNav1","Home","item","curLocation","weatherData","setWeatherData","currentPosts","setcurrentPosts","right","left","todaysDate","settodaysDate","currentDate","date","Date","getFullYear","getMonth","getDate","currentTemp","setcurrentTemp","currentWind","setcurrentWind","currentWeather","setcurrentWeather","currentOuter","setcurrentOuter","currentTop","setcurrentTop","currentBottom","setcurrentBottom","tempArr","windArr","weatherArr","outerArr","topArr","bottomArr","getCount","arr","reduce","pv","cv","tempObj","windObj","weatherObj","outerObj","topObj","bottomObj","newTempArr","Object","values","newWindArr","newWeatherArr","newOuterArr","newTopArr","newBottomArr","tempMaxNum","Math","max","windMaxNum","weatherMaxNum","outerMaxNum","topMaxNum","bottomMaxNum","matchKey","obj","maxNum","key","maxTemp","maxWind","maxWeather","maxOuter","maxTop","maxBottom","undefined","info","kye","baseTime","el","Outer","BookMarkContainer","BookMarkPhoto","BookMarkList","BookMarkIcon","Pagination","PrevPage","PageNumber","NextPage","BookMark","userInfo","readPostId","bookmarkList","setBookmarkList","formatDate","dateString","dateOnly","toLocaleDateString","postClickHandler","start","end","current","updateCurrentPages","page","dispatchs","updateStartEndPages","total","ceil","slice","faHeart","alert","HeaderOuter","Wing","TitleAndLogo","isMobileLogo","Center","InputAndSubmit","StyledPostCode","DaumPostcode","Input","input","Buttons","Cancel","Buttons2","Header","isInput","isLogin","searchEvent","setSearchEvent","onFocus","setOnFocus","setweatherFilter","changeWeatherFilter","onChange","value","placeholder","faSearch","onComplete","roadAddress","faSun","faCloud","faCloudRain","faSnowflake","token","JSON","parse","localStorage","getItem","Authorization","clear","MenuBar","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faChevronLeft","color","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","postInfo","isModalOpen","setIsModalOpen","user_Photo","gender","location","delete","name","ToggleContainer","Desc","Toggle","isOn","setisOn","LoginOuter","LoginStyledArticle","article","LoginInputAndTitle","LoginInputText","LoginValidationListBox","ul","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","Button3","Button2","google","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","href","accessToken","split","authorization","accept","email","verified_email","res2","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","complevent","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","nickName","user_photo","prevInput","prevText","password","assign","faGoogle","StyledLi","li","valid","edit","TextButton","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","modalSelected","setModalSelected","prev","test","newPwdValid","SignUp","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","PaginationContainer","attrs","PageNumbersList","ArrowButton","span","PageNumberItem","dataLength","unit","numberButtonClickHandler","numberOfPages","numberArr","Array","fill","startIdx","setStartIdx","lastIdx","setLastIdx","cutArrInit","cutArr","setCutArr","tempIdxEnd","number","Page","MyPost","updateCurrPage","updateStartEndPage","array","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Secret","Write","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","isFilteringBtnActive","setIsFilteringBtnActive","breezy","windy","strong","isFilteringBtnActive2","setIsFilteringBtnActive2","cold","hot","isFilteringBtnActive3","setIsFilteringBtnActive3","selectValueOuter","setSelectValueOuter","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","weatherFunc","select","weatherFunc2","weatherFunc3","random","min","parseFloat","toFixed","getRandomIntInclusive","floor","substr","sFunc","PostHeader","Title","BookmarkIcon","like","bookmarkHandler","Profile","WeatherInfo","Icon","TodayCodi","Post","PostRead","Number","address","postData","setPostData","noIdWarning","setNoIdWarning","params","getOnePost","bookmarked","setBookmarked","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","post_id","dateObject","hourAndMin","toLocaleTimeString","hour12","clickedWeatherButtons","setClickedWeatherButtons","nodeName","includes","filter","btnName","btnListObj","Contents","HalfPage","AnimatedP","p","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","FirstPageContainer","FirstPage","ProfileName","UserPhotoDiv","UserPhotoImg","RoomChatDiv","RoomList","ChatList","FriendInput","FriendInputAndBtn","FriendListDiv","socket","io","connect","Messenger","prevmsg","setprevmsg","msgevent","setmsgevent","newMsgSection","setNewMsgSection","receiver_id","setreceiver_id","curRoom","setcurRoom","joinedRoom","setjoinedRoom","roomInOut","setRoomInOut","recievemessage","joinRoom","Set","replace","roomName","on","msgobj","MeDiv","YouDiv","chatcontent","msgfunc","required","emit","faPaperPlane","roomNamefunc","user_id_sort","sort","faPlusSquare","clickRoomName","Messenger2","setroomName","msg","setmsg","msg2","roomlist","opponent","indexOf","LoadingContainer","hide","Loading","GlobalStyle","createGlobalStyle","App","userinfo","login","exact","path","to","initialState","selectWord","editPassword","homePost","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.058daca6.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\"\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\"\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\"\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\"\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\"\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\"\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\"\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\"\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\"\n\nexport const UPDATE_WEATHERINFO = \"UPDATE_WEATHERINFO\"\nexport const UPDATE_USER_POST = \"UPDATE_USER_POST\"\nexport const UPDATE_POST_ID = \"UPDATE_POST_ID\"\nexport const UPDATE_HOME_POST = \"UPDATE_HOME_POST\"\n\nexport const CHANGE_WHEATER_FILTER = \"CHANGE_WHEATER_FILTER\"\nexport const CHANGE_MAP_PAGE = \"CHANGE_MAP_PAGE\"\n\n// actions creator functions\nexport const changeUser = (userinfo) => {\n    return {\n        type: CHANGE_USER_INFO,\n        payload: {\n            ...userinfo,\n        },\n    }\n}\nexport const updateCurrentPage = (current) => {\n    return {\n        type: UPDATE_CURRENT_PAGE,\n        payload: {\n            current,\n        },\n    }\n}\nexport const updateStartEndPage = (start, end) => {\n    return {\n        type: UPDATE_START_END_PAGE,\n        payload: {\n            start,\n            end,\n        },\n    }\n}\n\nexport const changeGender = (usergender) => {\n    return {\n        type: CHANGE_USER_GENDER,\n        payload: usergender,\n    }\n}\nexport const changeSearchword = (searchWord) => {\n    return {\n        type: CHANGE_SEARCH_WORD,\n        payload: searchWord,\n    }\n}\nexport const changeSelectword = (selectWord) => {\n    return {\n        type: CHANGE_SELECT_WORD,\n        payload: selectWord,\n    }\n}\nexport const changeIsLogin = (trueOrFalse) => {\n    return {\n        type: CHANGE_IS_LOGIN,\n        payload: trueOrFalse,\n    }\n}\n\nexport const changeUserPw = (pw) => {\n    return {\n        type: CHANGE_USER_PW,\n        payload: pw,\n    }\n}\n\nexport const changeCurLocation = (lat, lon) => {\n    return {\n        type: CHANGE_CUR_LOCATION,\n        payload: { lat: lat, lon: lon },\n    }\n}\n\nexport const updateWeatherInfo = (data) => {\n    return {\n        type: UPDATE_WEATHERINFO,\n        payload: {\n            data: data,\n        },\n    }\n}\n\nexport const userPosts = (postinfo) => {\n    return {\n        type: UPDATE_USER_POST,\n        payload: {\n            postinfo: postinfo,\n        },\n    }\n}\n\nexport const updatePostId = (pageId) => {\n    return {\n        type: UPDATE_POST_ID,\n        payload: pageId,\n    }\n}\n\nexport const homePost = (homePost) => {\n    return {\n        type: UPDATE_HOME_POST,\n        payload: {\n            homePost: homePost,\n        },\n    }\n}\nexport const changeWeatherFilter = (weatherFilter) => {\n    return {\n        type: CHANGE_WHEATER_FILTER,\n        payload: {\n            weatherFilter: weatherFilter,\n        },\n    }\n}\n\nexport const changeMapPage = (mapPage) => {\n    return {\n        type: CHANGE_MAP_PAGE,\n        payload: {\n            mapPage: mapPage,\n        },\n    }\n}\n","import styled from \"styled-components\";\n\nconst Spinner = styled.img`\n  width: ${props => props.size || '50px'};\n  height: ${props => props.size || '50px'};\n  animation: add-spin linear infinite reverse;\n  animation-duration: ${props => props.duration || '2s'};\n  opacity: .7;\n\n  @media screen and (min-width: 1081px) {\n    width: ${props => props.size || '100px'};\n    height: ${props => props.size || '100px'};\n  }\n`;\n\nexport default function LoadingSpinner({ size, duration }) {\n  return (\n    <Spinner src=\"img/spinner.png\" size={size} duration={duration} />\n  );\n}\n","import styled from \"styled-components\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n    changeSearchword,\n    changeCurLocation,\n    updatePostId,\n} from \"../actions/index\"\nimport $ from \"jquery\"\nimport axios from \"axios\"\nimport { Doughnut, Bar } from \"react-chartjs-2\"\nimport LoadingSpinner from \"./LoadingSpinner\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst ImgContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\nconst PostListModal = styled.div`\n    // border: 1px solid black;\n\n    background-color: white;\n    z-index: 999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    bottom: 115px;\n    width: 100%;\n    height: 50%;\n    overflow: auto;\n    padding: 0.5rem;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 999;\n        position: absolute;\n        right: 0;\n        bottom: 70px;\n        width: 35.3%;\n        height: 75%;\n        overflow: auto;\n    }\n`\nconst SlideModal = styled.div`\n    // border: 1px solid black;\n    background-color: white;\n    z-index: 9999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    // top: 0px;\n    bottom: 70px;\n    // bottom: 130%;\n    // bottom: ${(props) => props.bottom || \"52.9%\"};\n    width: 100%;\n    height: 4%;\n    overflow: auto;\n    display: flex;\n    justify-content: center;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 9999;\n        position: absolute;\n        // position: fixed;\n        // right: 1%;\n\n        bottom: 70px;\n        // bottom: ${(props) => props.bottom || \"52.9%\"};\n        width: 35.3%;\n        height: 4%;\n        overflow: auto;\n        display: flex;\n        justify-content: center;\n    }\n`\nconst GraphModal = styled.div`\n    // border: 1px solid black;\n    width: 50%;\n    display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\n\nconst GraphTitle = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    font-weight: bold;\n\n    @media screen and (min-width: 1081px) {\n    }\n`\nconst GraphTitleDiv = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    // margin-top: 0.5rem;\n    // margin-bottom: 0.5rem;\n    width: 100%;\n    text-align: center;\n    // font-size: 0.8rem;\n    background-color: pink;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst GraphTitleDiv2 = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    width: 100%;\n    text-align: center;\n    font-size: 0.8rem;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst BarGraphFlex = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\nconst BarGraphchild = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Location({ bottom }) {\n    const { searchWord, weatherFilter } = useSelector(\n        (state) => state.itemReducer\n    )\n\n    const [isLoading, setisLoading] = useState(false)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const { kakao } = window\n    const [weatherCount, setWeatherCount] = useState({\n        sunny: 0,\n        cloudy: 0,\n        rainy: 0,\n        snowy: 0,\n    }) //그래프 통계용\n    const [weatherApi, setweatherApi] = useState(0)\n\n    const [postList, setPostList] = useState([\n        {\n            bottom_id: \"\",\n            createdAt: \"Z\",\n            id: null,\n            post_content: \"\",\n            post_photo: \"\",\n            post_title: \"예보가 없는 지역 입니다.\",\n            temp: \"\",\n            top_id: \"\",\n            updatedAt: \"\",\n            user_id: \"\",\n            weather: \"\",\n            wind: \"\",\n            xLocation: null,\n            yLocation: null,\n        },\n    ])\n    console.log(weatherFilter)\n    //---------------\n    useEffect(() => {\n        var container = document.getElementById(\"map\")\n        var options = {\n            center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n            level: 3,\n        }\n        var map = new kakao.maps.Map(container, options) //지도를 생성\n        var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n        map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT) //줌컨트롤 위치 조정\n        // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n\n                var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                    message =\n                        '<div style=\"font-align:center;\"> 현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n                // 마커와 인포윈도우를 표시합니다\n                displayMarker(locPosition, message)\n                console.log(locPosition)\n\n                console.log(lat) //위도\n                console.log(lon) //경도\n                dispatch(changeCurLocation(lat, lon))\n            })\n        } else {\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n            var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n                message = \"geolocation을 사용할수 없어요..\"\n\n            displayMarker(locPosition, message)\n        }\n        // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n\n        function displayMarker(locPosition, message) {\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: locPosition,\n            })\n\n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable,\n            })\n\n            // 인포윈도우를 마커위에 표시합니다\n            infowindow.open(map, marker)\n\n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n        }\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder()\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(searchWord, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                // var marker = new kakao.maps.Marker({\n                //     map: map,\n                //     position: coords,\n                // })\n                // console.log(arguments)\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // var infowindow = new kakao.maps.InfoWindow({\n                //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n                // })\n                // infowindow.open(map, marker)\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                dispatch(changeSearchword(searchWord))\n                map.setCenter(coords)\n            }\n        })\n\n        //클릭이벤트 함수\n        kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n            // 클릭한 위도, 경도 정보를 가져옵니다\n            var latlng = mouseEvent.latLng\n            // 마커 위치를 클릭한 위치로 옮깁니다\n            // marker.setPosition(latlng)\n            //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n            var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n            message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n            console.log(message)\n        })\n        //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n            minLevel: 9, // 클러스터 할 최소 지도 레벨\n        })\n\n        // 데이터를 가져오기 위해 jQuery를 사용합니다\n        // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n        $.get(\n            url + `/post/location?weather=${weatherFilter.weatherFilter}`,\n            function (data) {\n                // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n                // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n                // console.log(data)\n                // console.log($(data.positions))\n                // console.log($(data.positions[0]))\n\n                var markers = $(data.positions).map(function (i, position) {\n                    return new kakao.maps.Marker({\n                        position: new kakao.maps.LatLng(\n                            position.xLocation,\n                            position.yLocation\n                        ),\n                    })\n                })\n                console.log(markers)\n                console.log($(data.positions)[0])\n                $(data.positions).map((n, idx) => {\n                    console.log($(data.positions))\n                    // $(data.positions).map((el) => {\n                    //     console.log(el)\n                    //     if ($(data.positions)[el].weather === \"sunny\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             sunny: weatherCount.sunny + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"cloudy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             cloudy: weatherCount.cloudy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"rainy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             rainy: weatherCount.rainy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"snowy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             snowy: weatherCount.snowy + 1,\n                    //         })\n                    //     }\n                    // })\n\n                    var iwContent = `\n                <container style=\"border:3px solid pink; padding:5px; height:20rem; width:15rem; display:flex; flex-direction: row; overflow: auto;\">\n                    <box style=\"\">\n                        <h3>${$(data.positions)[n].post_title}</h3>\n                            <box style=\"display:flex; flex-direction: row;\">\n                            \n                        ${\n                            $(data.positions)[n].weather === \"sunny\"\n                                ? \"<img src='img/icons-write/sunny.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"cloudy\"\n                                ? \"<img src='img/icons-write/cloudy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"rainy\"\n                                ? \"<img src='img/icons-write/rainy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"snowy\"\n                                ? \"<img src='img/icons-write/snowy.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].wind === \"breezy\"\n                                ? \"<img src='img/icons-write/breezy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"windy\"\n                                ? \"<img src='img/icons-write/windy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"strong\"\n                                ? \"<img src='img/icons-write/strong.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].temp === \"cold\"\n                                ? \"<img src='img/icons-write/cold.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].temp === \"hot\"\n                                ? \"<img src='img/icons-write/hot.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].outer_id === \"가디건\"\n                                ? \"<img src='img/codi/가디건.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"자켓\"\n                                ? \"<img src='img/codi/자켓.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"얇은코트\"\n                                ? \"<img src='img/codi/얇은코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"두꺼운코트\"\n                                ? \"<img src='img/codi/두꺼운코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"패딩\"\n                                ? \"<img src='img/codi/패딩.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"default\"\n                                ? \"<img src='img/codi/default.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].top_id === \"반팔\"\n                                ? \"<img src='img/codi/반팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"셔츠\"\n                                ? \"<img src='img/codi/셔츠.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"민소매\"\n                                ? \"<img src='img/codi/민소매.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"긴팔\"\n                                ? \"<img src='img/codi/긴팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"니트\"\n                                ? \"<img src='img/codi/니트.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].bottom_id === \"반바지\"\n                                ? \"<img src='img/codi/반바지.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].bottom_id === \"긴바지\"\n                                ? \"<img src='img/codi/긴바지.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        </box>\n                        <img src=${\n                            $(data.positions)[n].post_photo\n                        } style=\"padding:5px; max-height:100%; max-width:100%;\"></img>\n                        <div>${$(data.positions)[n].post_content}</div>\n                    </box>\n                </container>\n\n\n                             `, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                        iwRemoveable = true // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n                    // 인포윈도우를 생성합니다\n                    var infowindow = new kakao.maps.InfoWindow({\n                        content: iwContent,\n                        removable: iwRemoveable,\n                    })\n                    kakao.maps.event.addListener(\n                        markers[n],\n                        \"click\",\n                        function () {\n                            // 마커 위에 인포윈도우를 표시합니다\n                            infowindow.open(map, markers[n])\n                        }\n                    )\n                })\n\n                clusterer.addMarkers(markers)\n            }\n        )\n\n        let timer\n        // 지도가 이동, 확대, 축소로 인해 지도영역이 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n        kakao.maps.event.addListener(map, \"idle\", function () {\n            setisLoading(false)\n            if (timer) {\n                clearTimeout(timer)\n            }\n\n            timer = setTimeout(function () {\n                console.log(\"지도 위치가 변경 될 때마다 API요청\")\n                // setWeatherCount({\n                //     sunny: 0,\n                //     cloudy: 0,\n                //     rainy: 0,\n                //     snowy: 0,\n                // })\n                // 지도 영역정보를 얻어옵니다\n                var bounds = map.getBounds()\n\n                // 영역정보의 남서쪽 정보를 얻어옵니다\n                var swLatlng = bounds.getSouthWest()\n\n                // 영역정보의 북동쪽 정보를 얻어옵니다\n                var neLatlng = bounds.getNorthEast()\n\n                var message =\n                    \"영역좌표는 남서쪽 위도, 경도는  \" +\n                    swLatlng.toString() +\n                    \"이고 <br>\"\n                message +=\n                    \"북동쪽 위도, 경도는  \" + neLatlng.toString() + \"입니다 \"\n\n                // setTimeout(() => {\n                console.log(message)\n                console.log(swLatlng)\n                console.log(neLatlng)\n                axios({\n                    url:\n                        url +\n                        `/post/list?top=${neLatlng.La}&bottom=${swLatlng.La}&left=${swLatlng.Ma}&right=${neLatlng.Ma}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setPostList(res.data)\n                    console.log(postList)\n                    let sunny = 0\n                    let cloudy = 0\n                    let rainy = 0\n                    let snowy = 0\n                    for (let n = 0; n < res.data.length; n++) {\n                        if (res.data[n].weather === \"sunny\") {\n                            sunny = sunny + 1\n                        } else if (res.data[n].weather === \"cloudy\") {\n                            cloudy++\n                        } else if (res.data[n].weather === \"rainy\") {\n                            rainy++\n                        } else if (res.data[n].weather === \"snowy\") {\n                            snowy++\n                        }\n                    }\n                    setWeatherCount({\n                        sunny: sunny,\n                        cloudy: cloudy,\n                        rainy: rainy,\n                        snowy: snowy,\n                    })\n                })\n\n                //지도중심좌표 기준으로 기상청 데이터를 받아올예정 -hoon\n                var latlng = map.getCenter()\n\n                axios({\n                    url: url + `/map2?lat=${latlng.Ma}&lon=${latlng.La}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    setweatherApi(res.data.fcstValue)\n                })\n            }, 1000)\n            setisLoading(true)\n        })\n    }, [\n        kakao.maps.LatLng,\n        kakao.maps.Marker,\n        kakao.maps.event,\n        kakao.maps.Map,\n        searchWord,\n        weatherFilter,\n    ])\n\n    const Box = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n        // height: 50%;\n        // border: 1px solid black;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const Box2 = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        // width: 10000px;\n\n        width: 50%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const EmoticonBox = styled.div`\n        display: flex;\n        flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostTitle = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        // border: 1px solid black;\n        text-align: center;\n        background-color: pink;\n        border-radius: 10%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostContent = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostBox = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n\n        padding: 0.5rem;\n\n        &:hover {\n            background-color: #f5f5f5;\n        }\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostImg = styled.img`\n        width: 100%;\n        border-radius: 20%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const IconImg = styled.img`\n        width: 20%;\n        cursor: pointer;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const LoadingBoxDiv = styled.div`\n        // margin-top: 50%;\n        display: flex;\n        justify-content: center;\n        align-item: center;\n        width: 100%;\n        // border: 1px solid black;\n        flex-direction: column;\n        @media screen and (min-width: 1081px) {\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            align-item: center;\n            width: 100%;\n            border: 1px solid black;\n            flex-direction: column;\n        }\n    `\n    const Button = styled.button`\n        background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n        color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n        margin: 0.1rem;\n        // border: 1px solid black;\n    `\n    console.log(weatherCount)\n    const data = {\n        labels: [\"맑음\", \"구름\", \"비\", \"눈\"],\n        datasets: [\n            {\n                data: [\n                    weatherCount.sunny,\n                    weatherCount.cloudy,\n                    weatherCount.rainy,\n                    weatherCount.snowy,\n                ],\n                backgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"silver\"],\n                hoverBackgroundColor: [\"yellow\", \"black\", \"blue\", \"#d9d9d9\"],\n            },\n        ],\n    }\n    const data2 = {\n        labels: [\"동네 예보\", \"기상청\"],\n        datasets: [\n            {\n                label: \"강수 확률\",\n                backgroundColor: \"#697cfa\",\n                borderColor: \"#0022ff\",\n                borderWidth: 1,\n                hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                hoverBorderColor: \"rgba(255,99,132,1)\",\n                data: [\n                    ((weatherCount.rainy + weatherCount.snowy) /\n                        (weatherCount.sunny +\n                            weatherCount.cloudy +\n                            weatherCount.rainy +\n                            weatherCount.snowy)) *\n                        100,\n                    weatherApi,\n                ],\n            },\n        ],\n    }\n\n    const [isOnOff, setisOnOff] = useState(true)\n\n    // postbox를 클릭하면 postread로 연결됩니다\n    const postBoxHandler = (e) => {\n        let elem = e.target\n\n        while (!elem.classList.contains(\"postbox\")) {\n            elem = elem.parentNode\n            if (elem.classList.contains(\"mapModal\")) {\n                elem = null\n                return\n            }\n        }\n\n        // console.log('**mapbox click id**',elem.id);\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n    // postbox를 클릭하면 postread로 연결됩니다\n\n    return (\n        <>\n            <ImgContainer id=\"map\"></ImgContainer>\n            {isOnOff ? (\n                <SlideModal>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(false)}\n                            icon={faChevronDown}\n                        />\n                    </Button>\n                </SlideModal>\n            ) : (\n                <SlideModal bottom={\"70px;\"}>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(true)}\n                            icon={faChevronUp}\n                        />\n                    </Button>\n                </SlideModal>\n            )}\n            {isOnOff ? (\n                <PostListModal>\n                    {!isLoading ? (\n                        <LoadingBoxDiv>\n                            <LoadingSpinner size={\"100%;\"} />\n                        </LoadingBoxDiv>\n                    ) : (\n                        <div className=\"mapModal\">\n                            <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n                            <GraphTitle>\n                                <GraphTitleDiv2>\n                                    동네 예보 날씨 비율\n                                </GraphTitleDiv2>\n                                <GraphTitleDiv2>\n                                    동네 예보 vs 기상청예보\n                                </GraphTitleDiv2>\n                            </GraphTitle>\n                            <GraphModal>\n                                <Doughnut data={data} />\n                                <BarGraphFlex>\n                                    <BarGraphchild>\n                                        <Bar data={data2} />\n                                    </BarGraphchild>\n                                </BarGraphFlex>\n                            </GraphModal>\n                            <GraphTitleDiv>동네 예보</GraphTitleDiv>\n                            {postList.map((post) => {\n                                return (\n                                    // <PostBox onClick={() => console.log(post)}>\n                                    <PostBox\n                                        className=\"postbox\"\n                                        onClick={postBoxHandler}\n                                        key={post.id}\n                                        id={post.id}\n                                    >\n                                        <Box className=\"box\">\n                                            <PostImg\n                                                className=\"postImage\"\n                                                src={`${post.post_photo}`}\n                                            />\n                                            <EmoticonBox>\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.weather}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.wind}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.temp}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.outer_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.top_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.bottom_id}.png`}\n                                                />\n                                            </EmoticonBox>\n                                        </Box>\n                                        <Box2>\n                                            <PostTitle>{`${post.post_title}`}</PostTitle>\n                                            <PostContent>{`${post.post_content}`}</PostContent>\n                                        </Box2>\n                                    </PostBox>\n                                )\n                            })}\n                        </div>\n                    )}\n                </PostListModal>\n            ) : (\n                <></>\n            )}\n        </>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport { changeMapPage } from \"../actions/index\"\n\nconst Container = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100%;\n\n    position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // max-width: 100%;\n        width: 100%;\n        position: relative;\n    }\n`\n\nexport default function Map() {\n    const dispatch = useDispatch()\n\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    useEffect(() => {\n        dispatch(changeMapPage(true))\n    }, [])\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","// 스크롤 탑 버튼\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst Button = styled.div`\n  /* width: 100%; */\n  height: 200px;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: flex-end;\n  right: 0;\n  bottom: 0;\n  transition: all 0.3s;\n\n  img{\n    width: 6rem;\n    height: 6rem;\n    margin-right: 2vh;\n    opacity: 0.7;\n  }\n\n  @media screen and (max-width: 1081px) {\n    height: 200px;\n    img{\n      width: 6rem;\n      height: 6rem;\n      margin-right: 3vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 130px;\n    img{\n      width: 3rem;\n      height: 3rem;\n      margin-right: 2vh;\n    }\n  }\n`\n\nexport default function TopButton() {\n  // top button\n  const [ScrollY, setScrollY] = useState(0);\n  const [btnStatus, setBtnStatus] = useState(false);  // 버튼 상태\n\n  // console.log(window.pageYOffset)\n  // console.log(btnStatus)\n\n  const handleFollow = () => {\n    setScrollY(window.scrollY)\n    if(ScrollY > 200){  // 200 이상이면 버튼이 보임\n      setBtnStatus(true)\n    }else{  // 200 이하일때 버튼이 사라짐\n      setBtnStatus(false)\n    }\n  }\n\n  // 클릭시 위로 올라감\n  const scrollToTop = () => {\n    // e.preventDefault() // 새로고침 방지\n    window.scrollTo({top: 0, behavior: 'smooth'}) // 위로 올라감\n    setScrollY(0);  // 올라가면 다시 0으로 초기화\n    setBtnStatus(false); // 버튼 다시 사라짐\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleFollow)\n    return () => {\n      window.removeEventListener('scroll', handleFollow)\n    }\n  })\n\n  return(\n    <Button>\n      {\n        btnStatus?\n        <img\n          src={`${process.env.PUBLIC_URL}img/scroll-up.png`} alt=\"top\"\n          onClick={scrollToTop}\n        /> : null\n      }\n    </Button>\n  )\n}","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { updateWeatherInfo, homePost } from \"../actions/index\"\nimport TopButton from \"../components/TopButton\"\n// import Loading from \"./Loading\";\n\nconst HomeContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 90vh;\n    background-color: var(--page-bg-color);\n    ul {\n        list-style: none;\n    }\n\n    @media screen and (min-width: 1500px) {\n        margin: 0 auto;\n        width: 90%;\n        border: 1px solid #aaa;\n    }\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        margin: 0 auto;\n        padding: 0 2vw;\n        border: 1px solid #aaa;\n        width: 85%;\n        height: 100%;\n    }\n    @media screen and (max-width: 900px) {\n        width: 100%;\n    }\n`\n\n// 날짜\nconst TodaysDate = styled.div`\n    margin: 0 auto;\n    height: 2rem;\n    padding-top: 3px;\n    padding-left: 2vw;\n    @media screen and (min-width: 1500px) {\n        width: 90%;\n    }\n    @media screen and (max-width: 1081px) {\n        width: 85%;\n    }\n    @media screen and (max-width: 900px) {\n        width: 100%;\n    }\n`\n\n// 왼쪽 container\nconst LeftContainer1 = styled.div`\n    display: flex;\n    gap: 0.1rem;\n    flex-direction: row;\n    width: 40vw;\n    flex-wrap: wrap;\n    .weatherInfo {\n        text-align: center;\n        line-height: 3rem;\n        li {\n            align-items: center;\n        }\n        img {\n            width: 2rem;\n            height: 2rem;\n            vertical-align: middle;\n        }\n    }\n    .codiInfo {\n        text-align: center;\n    }\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        width: 100%;\n    }\n    @media screen and (max-width: 300px) {\n        img {\n            width: 3rem;\n            height: 3rem;\n        }\n    }\n`\n\n// 00구 주민예보\nconst LeftNav1 = styled.nav`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 30px 5px 5px 5px;\n    padding: 10px;\n    line-height: 3vh;\n    height: 25%;\n    background-color: #ffffff;\n    p {\n        font-size: 1.2rem;\n        margin-bottom: 1vh;\n    }\n    @media screen and (max-width: 1081px) {\n        margin-top: 5px;\n    }\n\n    @media screen and (max-width: 375px) {\n        margin-top: 10px;\n        line-height: 4vh;\n    }\n`\n// 기상청 일기예보\nconst LeftNav2 = styled.div`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 5px;\n    padding: 10px;\n    line-height: 3vh;\n    height: 35%;\n    background-color: #ffffff;\n    p {\n        font-size: 1.2rem;\n        margin-bottom: 1vh;\n    }\n    @media screen and (max-width: 375px) {\n        line-height: 4vh;\n    }\n`\n// 00구 날씨 기반 추천 코디\nconst LeftNav3 = styled.div`\n    text-align: center;\n    flex-basis: 310px;\n    flex-grow: 1;\n    margin: 3px;\n    padding: 10px;\n    background-color: #ffffff;\n    height: 35%;\n    p {\n        font-size: 1.2rem;\n        margin: 2vh 0;\n    }\n    .codiInfo {\n        height: 80%;\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n    }\n    @media screen and (max-width: 1081px) {\n        height: 30vh;\n        flex-basis: 100vh;\n        flex-grow: 2;\n    }\n    @media screen and (max-width: 375px) {\n        p {\n            font-size: 1.2rem;\n            margin: 2vh 0;\n        }\n        .codiInfo {\n            /* border: 1px solid hotpink; */\n            height: 80%;\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n        }\n        @media screen and (max-width: 1081px) {\n            height: 30vh;\n            flex-basis: 100vh;\n            flex-grow: 2;\n        }\n        @media screen and (max-width: 375px) {\n            p {\n                font-size: 1rem;\n                margin: 1vh 0;\n            }\n        }\n    }\n`\n// 코디 이미지\nconst Codi = styled.img`\n    width: 7rem;\n    height: 7rem;\n    border: purple;\n    @media screen and (max-width: 400px) {\n        width: 5rem;\n        height: 5rem;\n    }\n`\n\n// 오른쪽 container\nconst RightContainer = styled.div`\n    display: grid;\n    /* height:100vh; */\n    width: 80vw;\n    grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-area: \"nav nav\" \"main main\" \"main main\";\n    grid-gap: 0.1rem;\n    transition: all 0.01s ease-in-out;\n\n    @media (max-width: 600px) {\n        .userPost:nth-last-child(1) {\n            display: none;\n        }\n        grid-template-rows: 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n        grid-template-columns: 1fr 1fr;\n        grid-template-areas:\n            \"nav\"\n            \"main\";\n    }\n    .userPost {\n        text-align: center;\n        border: 1px solid #aaa;\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        width: 100%;\n    }\n`\n\n// '00구 주민예보글'\nconst RightNav1 = styled.nav`\n    margin-top: 0.8rem;\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \"nav nav\";\n    grid-column: 1 / 4;\n    grid-row: 1 / 2;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1vh 1vh;\n    #location {\n        font-size: 1.5rem;\n        color: #8e8e8e;\n    }\n    #moreView {\n        color: #336fc9;\n    }\n    @media screen and (max-width: 600px) {\n        grid-column: 1 / 3;\n        #location {\n            font-size: 1rem;\n        }\n    }\n`\n\nconst url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Home() {\n    const dispatch = useDispatch()\n    const { item, curLocation } = useSelector((state) => state.itemReducer)\n    console.log(item)\n    console.log(\"카카오 위도 : \", curLocation.lat) // map 페이지 거쳐야함\n    console.log(\"카카오 경도 : \", curLocation.lon)\n\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n\n    const [weatherData, setWeatherData] = useState()\n\n    useEffect(() => {\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                let lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n                console.log(lat, lon) //브라우저에 찍힘\n                axios({\n                    url: url + \"/map\",\n                    method: \"post\",\n                    data: { lat: lat, lon: lon },\n                    withCredentials: true,\n                }).then((res) => {\n                    //console.log(res.data)\n                    //console.log(res.data.item)\n                    setWeatherData(res.data)\n                    dispatch(updateWeatherInfo(res.data))\n                })\n            })\n        }\n    }, [])\n\n    // const { kakao } = window\n    // 최근 게시물(위도, 경도, 지역범위 확인 필요..)\n    const [currentPosts, setcurrentPosts] = useState([])\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                let lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n                // 37.5525698 127.0783197\n                /*\n          소수 7째자리까지 : Math.floor(a * 10000000) /10000000\n\n          남서쪽 위도, 경도는  (37.5262196, 127.0449971)이고\n          북동쪽 위도, 경도는  (37.5684781, 127.1200016)입니다 \n        */\n\n                // left(37.5262196) , right(37.5684781) : 0.0422585(0.04225850000000264), 각 0.02112925\n                // bottom(127.0449971) , top(127.1200016) : 0.0750045(0.07500449999999148), 각 0.03750225\n                // 현재 위도, 경도의 동,서,남,북 범위 설정 (소수 7째자리까지)\n                let right = lat + 0.02112925\n                let left = lat - 0.02112925\n                let top = lon + 0.03750225\n                let bottom = lon - 0.03750225\n\n                console.log(right, left, top, bottom)\n\n                axios({\n                    url: url + \"/home\",\n                    method: \"post\",\n                    data: {\n                        lat: lat,\n                        lon: lon,\n                        right: right,\n                        left: left,\n                        top: top,\n                        bottom: bottom,\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(\"게시글 데이터 : \", res.data)\n                    setcurrentPosts(res.data)\n                    // dispatch(homePost(res.data))\n                })\n            })\n        }\n    }, [])\n\n    // 날짜\n    const [todaysDate, settodaysDate] = useState(\"\")\n    useEffect(() => {\n        let date = new Date()\n        const formatDate = (currentDate) => {\n            let formatted = `${currentDate.getFullYear()}년 ${\n                currentDate.getMonth() + 1\n            }월 ${currentDate.getDate()}일`\n            return formatted\n        }\n        settodaysDate(formatDate(date))\n    })\n\n    // 날씨, 코디 가져오기, 추후 수정\n    let [currentTemp, setcurrentTemp] = useState(\"\")\n    let [currentWind, setcurrentWind] = useState(\"\")\n    let [currentWeather, setcurrentWeather] = useState(\"\")\n    let [currentOuter, setcurrentOuter] = useState(\"\")\n    let [currentTop, setcurrentTop] = useState(\"\")\n    let [currentBottom, setcurrentBottom] = useState(\"\")\n\n    useEffect(() => {\n        let tempArr = [] // 체감온도\n        let windArr = [] // 바람세기\n        let weatherArr = [] // 날씨상태\n        let outerArr = [] // 겉옷\n        let topArr = [] // 상의\n        let bottomArr = [] // 하의\n\n        // 해당 key만 가져오기\n        for (let i = 0; i < currentPosts.length; i++) {\n            tempArr.push(currentPosts[i].temp) // temp키만 가져옴\n            windArr.push(currentPosts[i].wind)\n            weatherArr.push(currentPosts[i].weather)\n\n            outerArr.push(currentPosts[i].outer_id)\n            topArr.push(currentPosts[i].top_id)\n            bottomArr.push(currentPosts[i].bottom_id)\n        }\n\n        // 해당 키의 중복개수세는 함수\n        function getCount(arr) {\n            return arr.reduce((pv, cv) => {\n                pv[cv] = (pv[cv] || 0) + 1\n                return pv\n            }, {})\n        }\n\n        let tempObj = getCount(tempArr) // {hot: 6, cold: 3}\n        let windObj = getCount(windArr)\n        let weatherObj = getCount(weatherArr)\n        let outerObj = getCount(outerArr)\n        let topObj = getCount(topArr)\n        let bottomObj = getCount(bottomArr)\n\n        // 최대값구하기 : 객체 -> 배열\n        let newTempArr = Object.values(tempObj) // [6, 3]\n        let newWindArr = Object.values(windObj)\n        let newWeatherArr = Object.values(weatherObj)\n        let newOuterArr = Object.values(outerObj)\n        let newTopArr = Object.values(topObj)\n        let newBottomArr = Object.values(bottomObj)\n        // 최대값\n        let tempMaxNum = Math.max(...newTempArr) // 6\n        let windMaxNum = Math.max(...newWindArr)\n        let weatherMaxNum = Math.max(...newWeatherArr)\n        let outerMaxNum = Math.max(...newOuterArr)\n        let topMaxNum = Math.max(...newTopArr)\n        let bottomMaxNum = Math.max(...newBottomArr)\n\n        // 최대값과 일치하는 key 추출\n        function matchKey(obj, maxNum) {\n            // 객체, 최대값\n            for (let key in obj) {\n                if (obj[key] === maxNum) {\n                    return key\n                }\n            }\n        }\n\n        // 화면에 나타날 key\n        let maxTemp = matchKey(tempObj, tempMaxNum)\n        let maxWind = matchKey(windObj, windMaxNum)\n        let maxWeather = matchKey(weatherObj, weatherMaxNum)\n        let maxOuter = matchKey(outerObj, outerMaxNum)\n        let maxTop = matchKey(topObj, topMaxNum)\n        let maxBottom = matchKey(bottomObj, bottomMaxNum)\n\n        setcurrentTemp(maxTemp)\n        setcurrentWind(maxWind)\n        setcurrentWeather(maxWeather)\n        setcurrentOuter(maxOuter)\n        setcurrentTop(maxTop)\n        setcurrentBottom(maxBottom)\n\n        console.log(\"currentTemp : \", currentTemp)\n        console.log(\"currentWind : \", currentWind)\n        console.log(\"currentWeather : \", currentWeather)\n    })\n\n    return (\n        <div className=\"homecontainer\">\n            {/* <Loading /> */}\n            <TopButton />\n            <TodaysDate>\n                날짜: {todaysDate} 위치 {}{\" \"}\n            </TodaysDate>\n            <HomeContainer>\n                <LeftContainer1>\n                    <LeftNav1>\n                        <p>{} 주민예보</p>\n                        <div className=\"weatherInfo\">\n                            {currentTemp === undefined &&\n                            currentWind === undefined &&\n                            currentWeather === undefined ? (\n                                <p>현재 날씨 데이터가 없습니다 :(</p>\n                            ) : (\n                                <ul>\n                                    {/* <li>날짜: {todaysDate}</li> */}\n                                    <li>\n                                        <span>현재위치 체감온도 </span>\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${currentTemp}.png`}\n                                            alt=\"온도\"\n                                        />\n                                    </li>\n                                    <li>\n                                        <span>현재위치 바람세기 </span>\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${currentWind}.png`}\n                                            alt=\"바람\"\n                                        />\n                                    </li>\n                                    <li>\n                                        <span>현재위치 날씨상태 </span>\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${currentWeather}.png`}\n                                            alt=\"날씨\"\n                                        />\n                                    </li>\n                                </ul>\n                            )}\n                        </div>\n                    </LeftNav1>\n                    <LeftNav2>\n                        <p>기상청 일기예보</p>\n                        <div className=\"weatherInfo\">\n                            <ul>\n                                {/* {console.log(weatherData.item)}  */}\n                                {/* weatherData -> {item: Array(30)}, weatherData.item -> [ baseDate: '20211106',baseTime: '2130',category: 'T1H', fcstDate: '20211107', fcstTime: '0300', fcstValue: '10', nx: 59, ny: 128, ... ] */}\n                                {/* { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>날짜:{info.baseDate}</li> })[0] } */}\n                                {weatherData &&\n                                    weatherData.item.map((info, idx) => {\n                                        return (\n                                            <li kye={idx}>\n                                                기준 예보시각: {info.baseTime}\n                                            </li>\n                                        )\n                                    })[0]}\n                                {weatherData &&\n                                    weatherData.item.map((info, idx) => {\n                                        return (\n                                            <li kye={idx}>\n                                                현재위치 기온: {info.fcstValue}℃\n                                            </li>\n                                        )\n                                    })[24]}{\" \"}\n                                {/* T1H */}\n                                {weatherData &&\n                                    weatherData.item.map((info, idx) => {\n                                        return (\n                                            <li kye={idx}>\n                                                현재위치 바람세기:{\" \"}\n                                                {info.fcstValue < \"9\"\n                                                    ? \"바람세기 약하거나 약간 강함\"\n                                                    : info.fcstValue < \"14\"\n                                                    ? \"바람세기 강함\"\n                                                    : \"바람세기 매우 강함\"}\n                                            </li>\n                                        )\n                                    })[54]}{\" \"}\n                                {/* WSD */}\n                                {weatherData &&\n                                    weatherData.item.map((info, idx) => {\n                                        return (\n                                            <li kye={idx}>\n                                                현재위치 날씨상태:{\" \"}\n                                                {info.fcstValue === \"0\"\n                                                    ? \"맑음\"\n                                                    : info.fcstValue === \"1\"\n                                                    ? \"비\"\n                                                    : info.fcstValue === \"3\"\n                                                    ? \"눈\"\n                                                    : info.fcstValue === \"5\"\n                                                    ? \"빗방울\"\n                                                    : \"눈날림\"}\n                                            </li>\n                                        )\n                                    })[6]}{\" \"}\n                                {/* PTY */}\n                            </ul>\n                        </div>\n                    </LeftNav2>\n                    <LeftNav3>\n                        <p>날씨 기반 추천 코디</p>\n                        <div className=\"codiInfo\">\n                            {currentOuter === undefined ||\n                            currentTop === undefined ||\n                            currentBottom === undefined ? (\n                                <p>\n                                    현재 위치 데이터가 없습니다. 현재위치의 첫\n                                    게시물을 올려보세요👍\n                                </p>\n                            ) : (\n                                <>\n                                    <Codi\n                                        src={`${process.env.PUBLIC_URL}img/codi/${currentOuter}.png`}\n                                        alt=\"겉옷\"\n                                    ></Codi>\n                                    <Codi\n                                        src={`${process.env.PUBLIC_URL}img/codi/${currentTop}.png`}\n                                        alt=\"상의\"\n                                    ></Codi>\n                                    <Codi\n                                        src={`${process.env.PUBLIC_URL}img/codi/${currentBottom}.png`}\n                                        alt=\"하의\"\n                                    ></Codi>\n                                </>\n                            )}\n                        </div>\n                    </LeftNav3>\n                </LeftContainer1>\n\n                <RightContainer>\n                    <RightNav1>\n                        <span id=\"location\">주민 예보글</span>\n                    </RightNav1>\n                    {currentPosts.map((el) => (\n                        <div className=\"userPost\" key={el.id}>\n                            <img src={el.post_photo} />\n                        </div>\n                    ))}\n                </RightContainer>\n            </HomeContainer>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\"\n//import { updateCurrentPage, updateStartEndPage } from \"../actions/index\"\nimport {\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    userPosts,\n    updatePostId,\n    changeMapPage,\n} from \"../actions/index\"\nimport { useHistory } from \"react-router\"\n\nconst Outer = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: 100vh;\n    padding-top: 100px;\n\n    @media screen and (max-width: 1081px) {\n        padding-top: 3vh;\n    }\n`\n\n// 그리드\nconst Container = styled.div`\n    display: grid;\n    /* height: 83vh; */\n    gap: 3rem;\n    margin-left: 3vw;\n    margin-right: 3vw;\n\n    justify-content: center;\n    align-items: center;\n    grid-template-rows: 3fr 3fr;\n    /* grid-template-columns: 5fr 5fr; */\n    grid-template-areas:\n        \"div div\"\n        \"div div\";\n    /* overflow: auto; */\n    // (max-width: 600px)\n\n    @media (max-width: 1081px) {\n        gap: 2rem;\n        grid-template-rows: 1fr 1fr 1fr 1fr;\n        /* grid-template-columns: 5fr; */\n        grid-template-areas: \"div\";\n    }\n`\n\nconst BookMarkContainer = styled.div`\n    background-color: rgba(255, 255, 255, 0.6);\n    display: flex;\n    gap: 0.1rem;\n    justify-content: space-around;\n    border: 1px solid #dbdbdb;\n    border-radius: 3px;\n`\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n    flex-basis: 30rem;\n    .postPicture {\n        margin: 1rem 2rem 1rem 1rem;\n        padding: 0;\n        /* border: solid 1px black; */\n        height: 25vh;\n        align-items: center;\n    }\n    .postImg {\n        width: 100%;\n        height: 100%;\n    }\n\n    @media screen and (max-width: 1081px) {\n        .postPicture {\n            height: 20vh;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .postPicture {\n            margin: 0;\n        }\n    }\n`\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n    margin: 1rem;\n    line-height: 3rem;\n    flex-direction: column;\n    flex-basis: 15rem;\n    justify-content: flex-start;\n\n    .postTitle {\n        font-weight: bold;\n        font-size: 2rem;\n    }\n    .postDate {\n        font-size: 1.5rem;\n    }\n    .postWeather {\n        /* font-size: 1.5rem; */\n        width: 3rem;\n        height: 3rem;\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n\n    @media (max-width: 1081px) {\n        line-height: 2rem;\n        .postTitle {\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n        .postDate {\n            font-size: 1rem;\n        }\n        .postWeather {\n            font-size: 0.5rem;\n            width: 30px;\n            height: 30px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        margin: 0.1rem 0 0 0.5rem;\n        line-height: 1.4rem;\n        .postTitle {\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n        .postDate {\n            font-size: 1rem;\n        }\n        .postWeather {\n            font-size: 0.5rem;\n            width: 30px;\n            height: 30px;\n        }\n    }\n`\n// 북마크 아이콘\nconst BookMarkIcon = styled.div`\n    flex-direction: column;\n    flex-basis: 10.5rem;\n    text-align: end;\n    margin: 1rem;\n    color: #ed4956;\n\n    @media screen and (max-width: 375px) {\n        margin: 0;\n        padding: 0 0.3rem 0 0;\n        font-size: 10px;\n    }\n`\n\n// 페이지네이션\nconst Pagination = styled.div`\n    background-color: #fafafa;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10vh;\n    /* margin: 2rem; */\n    list-style: none;\n\n    button {\n        font-size: 1.5rem;\n        margin: 0 1vw;\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 2vh;\n    }\n\n    @media screen and (max-width: 375px) {\n        margin-top: 5vh;\n        padding-bottom: 3vh;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\nconst PrevPage = styled.div``\n\nconst PageNumber = styled.div`\n    li {\n        float: left;\n        margin: 1rem;\n    }\n    button {\n        font-size: 1.5rem;\n    }\n    @media screen and (max-width: 375px) {\n        li {\n            margin: 0;\n        }\n        button {\n            margin: 0 2vw;\n            font-size: 1rem;\n        }\n    }\n`\n\nconst NextPage = styled.div``\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function BookMark() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, readPostId } = useSelector((state) => state.itemReducer)\n    const [bookmarkList, setBookmarkList] = useState()\n    console.log(userInfo)\n    console.log(readPostId)\n\n    //bookmark는 유저1이 저장해둔 포스트 목록이 나오게\n    //일단 유저정보를 보내서, 그 유저가 북마크에 저장한 내용 싹 보여주기\n\n    useEffect(() => {\n        axios({\n            url: url + `/bookmarklist?searchPost=${userInfo.user_id}`,\n        }).then((res) => {\n            console.log(res.data)\n            setBookmarkList(res.data)\n        })\n        dispatch(changeMapPage(false))\n    }, [])\n\n    //console.log(bookmarkList)\n\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        return `${dateOnly}`\n    }\n\n    const postClickHandler = (e) => {\n        //\"PostBookMarkList\"\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"myPostList\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n\n    // 페이지네이션\n    const state = useSelector((state) => state.itemReducer)\n    const { start, end, current } = state\n\n    // const updateCurrentPages = dispatch(updateCurrentPage);\n    // const updateStartEndPages = dispatch(updateStartEndPage);\n    const updateCurrentPages = (page) => (dispatchs) => {\n        dispatch({ type: UPDATE_CURRENT_PAGE, payload: page })\n    }\n    const updateStartEndPages = (start, end) => (dispatchs) => {\n        dispatch({ type: UPDATE_START_END_PAGE, payload: { start, end } })\n    }\n\n    const per = 4\n    //테스트중 갯수 20개로 고정\n    const total = Math.ceil(20 / per)\n\n    const arr = []\n    for (let i = 0; i < total; i++) {\n        arr.push(i + 1)\n    }\n    const target = arr.slice(start, end)\n\n    return (\n        <Outer>\n            <Container>\n                <BookMarkContainer className=\"PostBookMarkList\">\n                    <BookMarkPhoto>\n                        <div className=\"postPicture\">\n                            {/* <img className=\"postImg\" src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\" /> */}\n                            {bookmarkList &&\n                                bookmarkList.map((el) => (\n                                    <div\n                                        className={[\"postImg\", \"postItem\"]}\n                                        id={el.id}\n                                        onClick={postClickHandler}\n                                        key={el.id}\n                                    >\n                                        <img src={el.post_photo} alt=\"posts\" />\n                                    </div>\n                                ))}\n                        </div>\n                    </BookMarkPhoto>\n                    <BookMarkList>\n                        {/* <div className=\"postTitle\">\n              00구\n            </div> */}\n                        {/* <div className=\"postDate\">10 / 25</div> */}\n                        {bookmarkList &&\n                            bookmarkList.map((el) => (\n                                <div className=\"postDate\" key={el.id}>\n                                    {formatDate(el.createdAt)}\n                                </div>\n                            ))}\n                        <div className=\"postWeather sky\">\n                            {/* <img src={`${process.env.PUBLIC_URL}img/icons-write/sunny.png`}></img> */}\n                            {bookmarkList &&\n                                bookmarkList.map((el) => (\n                                    <div className=\"postDate\" key={el.id}>\n                                        {el.weather}\n                                    </div>\n                                ))}\n                        </div>\n                        <div className=\"postWeather wind\">\n                            {/* <img src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}></img> */}\n                            {bookmarkList &&\n                                bookmarkList.map((el) => (\n                                    <div className=\"postDate\" key={el.id}>\n                                        {el.wind}\n                                    </div>\n                                ))}\n                        </div>\n                        <div className=\"postWeather temp\">\n                            {/* <img src={`${process.env.PUBLIC_URL}img/icons-write/hot.png`}></img> */}\n                            {bookmarkList &&\n                                bookmarkList.map((el) => (\n                                    <div className=\"postDate\" key={el.id}>\n                                        {el.temp}\n                                    </div>\n                                ))}\n                        </div>\n                    </BookMarkList>\n                    <BookMarkIcon>\n                        {/* 북마크 버튼 렌더링 필요  */}\n                        <FontAwesomeIcon icon={faHeart} size=\"2x\" />\n                    </BookMarkIcon>\n                </BookMarkContainer>\n\n                {/* <Pagenation>\n          <PrevPage>이전</PrevPage>\n          <NextPage>다음</NextPage>\n        </Pagenation> */}\n            </Container>\n\n            <Pagination>\n                <PrevPage>\n                    <li className=\"prevPage\">\n                        <button\n                            className=\"previousPages\"\n                            onClick={() => {\n                                if (current === 1)\n                                    return alert(\"첫번째 페이지입니다\")\n                                if (current % 10 === 1) {\n                                    const s = start - 10\n                                    const e = end - 10\n                                    updateStartEndPages(s, e)\n                                }\n                                updateCurrentPages(current - 1)\n                            }}\n                        >\n                            이전\n                        </button>\n                    </li>\n                </PrevPage>\n\n                <PageNumber>\n                    {target.map((el) => (\n                        <li className=\"pageNum\" key={el}>\n                            <button\n                                className=\"pageNumbers\"\n                                onClick={() => {\n                                    updateCurrentPages(el)\n                                }}\n                            >\n                                {el}\n                            </button>\n                        </li>\n                    ))}\n                </PageNumber>\n\n                <NextPage>\n                    <li className=\"nexPage\">\n                        <button\n                            className=\"nextPages\"\n                            onClick={() => {\n                                if (current % 10 === 1) {\n                                    const s = start - 10\n                                    const e = end - 10\n                                    updateStartEndPages(s, e)\n                                }\n                                updateCurrentPages(current + 1)\n                            }}\n                        >\n                            다음\n                        </button>\n                    </li>\n                </NextPage>\n            </Pagination>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport {\n    changeIsLogin,\n    changeSearchword,\n    changeWeatherFilter,\n} from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100vw;\n    height: 125px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    border-bottom: 0.5px solid #dbdbdb;\n\n    h1 {\n        font-weight: bold;\n        font-size: 2.5rem;\n        margin: 0;\n        padding: 0;\n    }\n\n    @media screen and (min-width: 1081px) {\n        width: 100vw;\n        background-color: white;\n        flex-direction: row;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        /* border: 1px solid red;  // 확인용 */\n    }\n`\n\nconst Wing = styled.div`\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst TitleAndLogo = styled.div`\n    display: ${(props) => (props.isMobileLogo ? \"flex\" : \"none\")};\n    justify-content: center;\n    align-items: center;\n\n    color: #231f20;\n\n    & img {\n        width: 20%;\n        margin-right: 0.5rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst Center = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-width: 350px;\n    justify-content: space-around;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        flex-growth: 2;\n        width: 60vw;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n    position: absolute;\n    top: 50px;\n    border: 1px solid #e0e0e0;\n    @media screen and (max-width: 1081px) {\n        top: 32px;\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    background-color: var(--page-bg-color);\n    border: 0.5px solid #dbdbdb;\n    border-radius: 3px;\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n        height: 30px;\n        font-size: 1rem;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: red;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n`\n// const SearchBarAndDaumPost = styled.div`\n//     // display: flex;\n//     // flex-direction: row;\n//     position: relative;\n//     margin: \"100px solid green\";\n// `\n// const DaumPostcodeWrap = styled.div`\n//     height: 3.5rem;\n//     width: 100%;\n//     // padding-right: 2.5rem;\n// `\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    /* padding: 0.3rem; */\n`\n\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    @media screen and (max-width: 1081px) {\n        padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n    }\n    @media screen and (max-width: 375px) {\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n        padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n        height: 2rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Header({ isInput, isMobileLogo, isText }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, mapPage } = useSelector((state) => state.itemReducer)\n    console.log(mapPage)\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    //검색창에 사용할 포커스변수-hoon\n    const [onFocus, setOnFocus] = useState(false)\n\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n    const [weatherFilter, setweatherFilter] = useState(\"\")\n    useEffect(() => {\n        setweatherFilter(weatherFilter)\n        dispatch(changeWeatherFilter(weatherFilter))\n\n        console.log(weatherFilter)\n    }, [weatherFilter])\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <HeaderOuter className=\"header\">\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n                    src=\"img/img4.png\"\n                    alt=\"logo\"\n                />\n                <h2 onClick={() => history.push(\"/\")}>There Weather</h2>\n            </TitleAndLogo>\n\n            {isInput ? (\n                <Center className=\"headerCenter\">\n                    <InputAndSubmit className=\"inputAndSubmit\">\n                        <Input\n                            // onClick={(e) => console.log(e)}\n                            onChange={(e) => setSearchEvent(e.target.value)}\n                            type=\"text\"\n                            placeholder=\"위치 검색\"\n                            value={searchEvent}\n                            // ref={inputRef}\n                            // onClick={onRest}\n                            onFocus={(e) => setOnFocus(true)}\n                        />\n                        <Buttons2 bgGrey>\n                            {onFocus ? (\n                                <Cancel onClick={() => setOnFocus(false)}>\n                                    Cancel\n                                </Cancel>\n                            ) : (\n                                <FontAwesomeIcon\n                                    onClick={() => {\n                                        dispatch(changeSearchword(searchEvent))\n                                        history.push(\"/map\")\n                                    }}\n                                    icon={faSearch}\n                                />\n                            )}\n                        </Buttons2>\n                        {/* <SearchBarAndDaumPost> */}\n                        {/* <DaumPostcodeWrap> */}\n\n                        {/* </DaumPostcodeWrap> */}\n                        {/* </SearchBarAndDaumPost> */}\n                    </InputAndSubmit>\n                    {onFocus ? (\n                        <StyledPostCode\n                            className=\"daumPostCodeContainer\"\n                            onComplete={handleComplete}\n                        />\n                    ) : (\n                        <></>\n                    )}\n                    {mapPage.mapPage ? (\n                        <Buttons className=\"headerButtons\">\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"sunny\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"sunny\")\n                                }}\n                                isText={\n                                    weatherFilter === \"sunny\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faSun} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"cloudy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"cloudy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"cloudy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faCloud} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"rainy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"rainy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"rainy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faCloudRain} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"snowy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"snowy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"snowy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faSnowflake} />\n                            </Button>\n                        </Buttons>\n                    ) : (\n                        <div></div>\n                    )}\n                </Center>\n            ) : (\n                <Center className=\"headerCenter\" />\n            )}\n\n            {isLogin ? (\n                <Wing className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button className=\"login\" onClick={logoutBtnHandler} isText>\n                        로그아웃\n                    </Button>\n                    <Button\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        마이페이지\n                    </Button>\n                </Wing>\n            ) : (\n                <Wing className=\"loginAndSingupButtons\">\n                    <Button\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        로그인\n                    </Button>\n                    <Button\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        회원가입\n                    </Button>\n                </Wing>\n            )}\n        </HeaderOuter>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faHome,\n    faHeart,\n    faMapMarkerAlt,\n    faPencilAlt,\n    faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\"\nconst Outer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    z-index: 100;\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    @media screen and (min-width: 1081px) {\n        width: 1080px;\n    }\n`\n\nconst Buttons = styled.div`\n    background-color: WHITE;\n    height: 70px;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    z-index: 101;\n    border-top: 1px solid #dbdbdb;\n\n    @media screen and (min-width: 1081px) {\n        position: fixed;\n        background-color: white;\n        border-top: 1px solid #dbdbdb;\n        border-left: 1px solid #dbdbdb;\n        position: fiexd;\n\n        width: 400px;\n    }\n`\n\nconst Button = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n`\n\nexport default function MenuBar() {\n    const history = useHistory()\n    return (\n        <Outer className=\"menuBar\">\n            <Buttons>\n                {/*\n                    <Link to='/mainpage'>\n                    <Button>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Button>\n                    </Link>\n                */}\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/homeorlogin\")}\n                        icon={faHome}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-home-instagram-flatart-icons-outline-flatarticons.png\"\n                        onClick={() => history.push(\"/homeorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                        icon={faHeart}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/ios/45/000000/like--v1.png\"\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/map\")}\n                        icon={faMapMarkerAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n                        onClick={() => history.push(\"/map\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/writeorlogin\")}\n                        icon={faPencilAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n                        onClick={() => history.push(\"/writeorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                        icon={faUserAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                    />\n                </Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n\n    &:nth-child(n+2) {\n        margin-top: 3vh;\n    }\n\n    &:hover {\n        border: 1px solid #262626;\n        p {\n            color: #262626;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n\n                <InfoBox>\n                    <button onClick={() => history.push(\"/messenger\")}>\n                        <p>메신져</p>\n                    </button>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport React, { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { changeMapPage } from \"../actions/index\"\nimport { useDispatch } from \"react-redux\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: calc(100vh - 125px);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    // border: 1px solid #dbdbdb;\n    border: 1px solid black;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        // border: 1px solid #262626;\n        border: 1px solid pink;\n        p {\n            // color: #262626;\n            color: pink;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nexport default function More() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .5rem;\n  font-size: 1.2rem;\n  border-radius: .5rem;\n  background-color: var(--modal-confirm-button-bg);\n\n  &:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Button = styled.button`\n    display: none;\n    \n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        top: 1.5vh;\n        position: fixed;\n        border-radius: 50%;\n        z-index:100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin, userPosts, updatePostId } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\n\nconst Outer = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: calc(100vh - 125px);\n    position: relative;\n    display: flex;\n    padding-bottom: 100px;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        min-height: calc(100vh - 125px - 70px);\n    }\n`\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n    width: 30%;\n    padding: 15vh 1vw 1vh 1vw;\n    text-align: center;\n    button {\n        // 비밀번호 수정, 회원탈퇴\n        color: #336fc9;\n        font-size: 1.5rem;\n        margin-top: 1vh;\n    }\n    .mediaBox {\n        margin-top: 2vh;\n        margin-bottom: 2vh;\n        p {\n            margin-top: 1vh;\n        }\n        #user-name {\n            font-size: 1.5rem;\n            font-weight: bold;\n        }\n        #user-changeInfo {\n            color: #336fc9;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border-bottom: 1px solid #aaa;  // 구분선 추가 */\n        margin: 0 auto;\n        margin-top: 4vh;\n        width: 100%;\n        padding: 0 1vw 3vh 1vw;\n        .mediaBox {\n            width: 40%;\n            display: inline-block;\n            text-align: left;\n            p {\n                margin-top: 2vh;\n                justify-content: center;\n                line-height: 3vh;\n                font-size: 1.2rem;\n            }\n        }\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            font-size: 1rem;\n        }\n        .mediaBox {\n            width: 50%;\n            display: inline-block;\n            padding-bottom: 1vh;\n            p {\n                margin-top: 0;\n                justify-content: center;\n                font-size: 1rem;\n            }\n            #user-name {\n                font-size: 1rem;\n            }\n        }\n    }\n`\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n    width: 200px;\n    height: 200px;\n    padding: 10px 10px;\n    border-radius: 50%;\n    @media screen and (max-width: 1081px) {\n        margin-right: 5vw;\n    }\n    @media screen and (max-width: 375px) {\n        width: 7rem;\n        height: 7rem;\n    }\n`\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-end;\n    text-decoration: none;\n\n    button {\n        font-size: 1.2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 100vw; // 가운데로 맞춤\n        align-items: center;\n        height: 10vh;\n        position: absolute;\n        bottom: 0;\n    }\n    @media screen and (max-width: 375px) {\n        padding: 0 15vw;\n        height: 20vh;\n        justify-content: space-between;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n    width: 100vw;\n    padding: 2vh 3vw 2vh 5vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 200px 1fr 1fr;\n\n    row-gap: 10px; /* row의 간격을 10px로 */\n    column-gap: 20px; /* column의 간격을 20px로 */\n    border-top: 1px solid #aaa; // 구분선 추가\n\n    .item:nth-child(1) {\n        border: none;\n        grid-column: 1 / 4;\n        grid-row: 1 / 2;\n    }\n\n    div {\n        background-color: rgba(255, 255, 255, 0.5); // 추가\n    }\n    div:hover {\n        border: 1px solid var(--page-bg-color);\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n    .more {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n        background-color: transparent;\n    }\n    p {\n        font-size: 2rem;\n        margin: 0 auto;\n        font-weight: bold;\n        color: #8e8e8e;\n    }\n    .moreView {\n        font-size: 1.5rem;\n        color: #336fc9;\n        width: 5vw;\n    }\n\n    @media screen and (max-width: 1380px) {\n        .moreView {\n            font-size: 1.4rem;\n            width: 6vw;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        margin-bottom: 10vh;\n        padding: 0;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 100px 300px 300px;\n        row-gap: 5px;\n        column-gap: 3px;\n\n        p {\n            font-size: 2rem;\n        }\n        .item {\n            margin: 0.5vh;\n        }\n        .moreView {\n            width: 80px;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        padding-left: 2vw;\n        padding-right: 2vw;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 50px 150px 150px 150px;\n        .item:nth-child(1) {\n            border: none;\n            grid-column: 1 / 3;\n            grid-row: 1 / 2;\n        }\n        p {\n            font-size: 1rem;\n        }\n        .moreView {\n            font-size: 1rem;\n            width: 50px;\n            height: 3rem;\n        }\n    }\n`\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space\"\n}\n\nexport default function MyPage() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, userInfo, postInfo, readPostId } = useSelector(\n        (state) => state.itemReducer\n    )\n    console.log(userInfo) //정보잘넘어옴\n    console.log(postInfo.postinfo)\n    console.log(readPostId)\n\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [removeUser, setremoveUser] = useState(false)\n\n    const [currentPosts, setcurrentPosts] = useState([])\n\n    // 게시물 데이터 조회\n    useEffect(() => {\n        axios({\n            url: url + `/mypage?searchID=${userInfo.user_id}`,\n            method: \"get\",\n            withCredentials: true,\n        }).then((res) => {\n            setcurrentPosts(res.data)\n            dispatch(userPosts(res.data))\n        })\n    }, [])\n\n    // 정보수정\n    const changeUserInfo = () => {\n        console.log(\"정보수정 클릭\")\n    }\n\n    const removeUserInfo = () => {\n        setIsModalOpen(true)\n    }\n\n    const modalYesButtonHandlers = () => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .delete(url + \"/removeuser\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `token ${token}`,\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                localStorage.clear(token)\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n        //setIsModalOpen(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n    const modalCloseButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n\n    // 게시물 클릭했을 때\n    const postClickHandler = (e) => {\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"myPagePostList\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n\n    // 더보기\n    const moreViewHandler = () => {\n        history.push(\"/mypost\")\n    }\n\n    return (\n        <Outer>\n            <GoBackButton />\n            <ProfileArea>\n                <ProfileImg src={userInfo.user_Photo} />\n                <div className=\"mediaBox\">\n                    <p id=\"user-name\">{userInfo.user_id}</p>\n                    <p id=\"user-gender\">\n                        {userInfo.gender === 1 ? \"남성\" : \"여성\"}\n                    </p>\n                    <p id=\"user-location\">나의 위치 : {userInfo.location}</p>\n                    <p id=\"user-changeInfo\" onClick={changeUserInfo}>\n                        정보수정\n                    </p>\n                </div>\n                <ButtonArea>\n                    <button onClick={() => history.push(\"/editpassword\")}>\n                        비밀번호 수정\n                    </button>\n                    <button onClick={removeUserInfo}>회원탈퇴</button>\n                    {isModalOpen === false ? null : (\n                        <ModalConfirm\n                            yesHandler={modalYesButtonHandlers}\n                            noHandler={modalNoButtonHandler}\n                            closeHandler={modalCloseButtonHandler}\n                        >\n                            <p>탈퇴하시겠습니까?</p>\n                            <p>이유를 선택해 주세요</p>\n                            <select name=\"pets\" id=\"pet-select\">\n                                <option value=\"\">선택</option>\n                                <option value=\"notUseful\">\n                                    사용을 많이 하지 않음\n                                </option>\n                                <option value=\"inconvenientDesign\">\n                                    디자인이 불편함\n                                </option>\n                                <option value=\"otherOptions\">\n                                    다른 앱을 이용하기 위해\n                                </option>\n                                <option value=\"andSoForth\">기타</option>\n                            </select>\n                        </ModalConfirm>\n                    )}\n                </ButtonArea>\n            </ProfileArea>\n\n            <GridArea className=\"myPagePostList\">\n                <div className=\"item more\">\n                    <p>내가 쓴 예보</p>\n                </div>\n                {currentPosts.map((el) => (\n                    <div\n                        className={[\"item\", \"postItem\"]}\n                        id={el.id}\n                        onClick={postClickHandler}\n                        key={el.id}\n                    >\n                        <img src={el.post_photo} alt=\"posts\" />\n                    </div>\n                ))}\n                <button className=\"moreView\" onClick={moreViewHandler}>\n                    더 보기\n                </button>\n            </GridArea>\n        </Outer>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { changeIsLogin, changeMapPage } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\n\n/*\n  TODO\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우 (버튼과 연결?)\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100vw;\n    min-height: calc(var(--mobile-page-height) - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst LoginInputAndTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: black;\n    background-color: pink;\n    border-radius: 1rem;\n    > span {\n        margin: 0.25rem;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #ea4335;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = \"http://localhost:3000\"\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    if (!url) {\n        url = \"https://thereweather.space\"\n        clientUrl = \"https://there-weather.vercel.app\"\n    }\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] = useState(\"아이디를 입력하세요.\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    useEffect(() => {\n        console.log(\"나는 login.js\")\n        dispatch(changeMapPage(false))\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        {/* <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호\"\n                                    onChange={idOnChangeHanlder(\"pwInput\")}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.pwInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호 확인</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwCheckInput\"\n                                    placeholder=\"비밀번호 확인\"\n                                    onChange={idOnChangeHanlder2}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{pwCheckInputMessage}</li>\n                            </ValidationListBox>\n                        </StyledArticle> */}\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <h2>로그인</h2>\n                    <div className=\"Login--center\">\n                        <LoginStyledArticle className=\"id\">\n                            <LoginInputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <LoginInputText\n                                    type=\"text\"\n                                    name=\"idInput\"\n                                    placeholder=\"아이디를 입력하세요\"\n                                    value={idInput}\n                                    onChange={loginidOnChangeHanlder}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"idValidationList\">\n                                <li>{idInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n\n                        <LoginStyledArticle className=\"password\">\n                            <LoginInputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <LoginInputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                    value={pwInput}\n                                    onChange={pwOnChangeHandler}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"pwValidationList\">\n                                <li>{pwInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n\n                        {/* 소셜로그인 */}\n                        <LoginButton onClick={googleLoginButtonHandler} google>\n                            <FontAwesomeIcon icon={faGoogle} />\n                            <span>구글 로그인</span>\n                        </LoginButton>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport axios from \"axios\";\nimport { changeUserPw } from \"../actions/index\"\n\n/*\n  TODO - 비밀번호 수정 페이지\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [x] 함수로 구현\n      - [x] (둘 다) input이 없는 경우 - li\n      - [x] (새 비밀번호) 조건에 안 맞는 경우 - li\n      - [] (현재 비밀번호) 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n  [] 최종 결과 모아서 악시오스 요청\n*/\n\nconst Outer = styled.section`\n  position: relative;\n  width: 100vw;\n  min-height: calc(100vh - 125px - 70px);\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    text-align: center;\n    font-size: 1.8rem;\n    font-weight: bold;\n    margin-bottom: 2rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    min-height: calc(100vh - 125px);\n\t}\n`;\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst InputAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // margin: .5rem;\n\n  h3 {\n    font-size: 1.3rem;\n    margin: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst InputText = styled.input`\n  min-width: 150px;\n  width: 30vw;\n  font-size: 1.2rem;\n  padding: .5rem;\n`;\n\nconst ValidationListBox = styled.ul`\n  list-style: none;\n  padding: 0 0 1rem 0;\n  font-size: 1rem;\n`;\n\nconst StyledLi = styled.li`\n  height: 1.2rem;\n  padding: .3rem 2rem;\n  font-size: .9rem;\n  // font-weight: bold;\n  color: ${ props => props.valid ? `var(--font-validation-positive)` : `var(--font-validation-negative)` };\n  font-weight: ${ props => props.valid ? `bold` : `null` };\n  `;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem auto;\n`;\n\nconst Button = styled.button`\n  width: 25vw;\n  min-width: 50px;\n  max-width: 200px;\n  margin: .5rem 1rem;\n  padding: .8rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: white;\n  background-color: ${ props => props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)` };\n  border-radius: 1rem;\n`;\n\nconst TextButton = styled.button`\n  // align-self: flex-end;\n  margin: 1rem 3rem;\n  font-size: 1rem;\n  color: grey;\n  text-decoration: underline;\n`;\n\nconst url = process.env.REACT_APP_LOCAL_URL\n\n\nexport default function PasswordEdit() {\n  const { password } = useSelector((state) => state.itemReducer)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n\n  const [ curPwd, setCurPwd ] = useState('');\n  const [ newPwd, setNewPwd ] = useState('');\n  const [ curPwdInputWarning, setCurPwdInputWarning ] = useState('비밀번호를 입력해주세요.');\n  const [ newPwdInputWarning, setNewPwdInputWarning ] = useState({\n    isNoInput: '비밀번호를 입력해주세요.',\n    isTooShort: '6자 이상이어야 합니다.',\n    isWrongType: '숫자와 문자를 포함해야 합니다.'\n  });\n  const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning;\n  const [ isValid, setIsValid ] = useState('');\n\n  const validationReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/g;\n    // 정규식 : 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n\n  const curInputHandler = (e) => {\n    setCurPwd(prev => e.target.value);\n    // console.log(e.target.value)\n    if (e.target.value.length === 0) {\n      setCurPwdInputWarning(prev => '비밀번호를 입력해주세요.');\n    } else {\n      setCurPwdInputWarning(prev => '');\n    }\n  }\n\n  const newInputHandler = (e) => {\n    setNewPwd(prev => e.target.value);\n\n    // 유효성 검사\n    if (e.target.value.length === 0) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: '비밀번호를 입력해주세요.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: ''}\n      });\n    }\n\n    if (!validationReg.test(e.target.value)) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: '문자, 숫자, 특수문자가 모두 포함되어야 합니다.'}\n      });\n      setIsValid(prev => '')\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: ''}\n      });\n      setIsValid(prev => '사용 가능합니다.')\n    }\n\n    if (e.target.value.length < 6) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: '6자 이상이어야 합니다.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: ''}\n      });\n    }\n  }\n\n  // 버튼 클릭 이벤트\n  const editButtonHandler = (e) => {\n    // e.prevntDefault()\n\n    let newPwdValid = validationReg.test(newPwd)\n    console.log('새 비밀번호 유효성 검사 결과', newPwdValid);\n    // TODO\n    // 클라이언트 로컬스토리지에 있는 토큰을 찾아서 \n    // 헤더에 담아서 서버에 전달 \n    // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\")) //문자열벗긴 토큰\n    //console.log(token) //토큰찾음\n     axios({\n       url: url + \"/password\",\n       method: \"put\",\n       data: { password: newPwd },\n       headers: { \n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `token ${token}` },\n        withCredentials: true,\n     })\n     .then((res) => {\n      // console.log(res.data)\n      dispatch(changeUserPw(true))\n      history.push(\"/mypage\")\n     })\n  }\n\n  const cancelButtonHandler = (e) => {\n    console.log('취소 버튼 동작 확인')\n    setCurPwd(prev => '');\n    setNewPwd(prev => '');\n    setIsValid(prev => '');\n    // TODO 이전 페이지로\n    history.push('/home');\n  }\n\n  // 탈퇴 모달에 붙은 함수\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\n  const withdrawButtonHandler = (e) => {\n    console.log('탈퇴 버튼 동작확인');\n    setIsModalOpen(true);\n  }\n\n  const modalSelectList = [\n    [null, \"--탈퇴 이유 선택--\"],\n    [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n    [\"inconvenientDesign\", \"디자인이 불편함\"],\n    [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n    [\"etc\", \"기타\"]\n  ];\n\n  const [ modalSelected, setModalSelected ] = useState(\"\");\n  const handleChangeSelect = (e) => {\n    setModalSelected(prev => e.target.value);\n  }\n\n  const modalCloseButtonHandler = (e) => {\n    console.log('모달 닫기 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n  const modalYesButtonHandler = (e) => {\n    console.log('모달 yes 버튼 동작 확인');\n  }\n\n  const modalNoButtonHandler = (e) => {\n    console.log('모달 no 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n\n  return (\n    <Outer className=\"loginPageComponent\">\n      <h2>비밀번호 변경</h2>\n\n      <div className=\"Login--center\">\n        <StyledArticle className=\"id\">\n          <InputAndTitle className=\"inputCurPwdSection\">\n            <h3>현재 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"curPwd\"\n              placeholder=\"현재 비밀번호를 입력하세요\"\n              onChange={curInputHandler}\n              value={curPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"idValidationList\">\n            <StyledLi>{curPwdInputWarning}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n\n        <StyledArticle className=\"password\">\n          <InputAndTitle className=\"inputNewPwSection\">\n            <h3>새 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"newPwd\"\n              placeholder=\"비밀번호를 입력하세요\"\n              onChange={newInputHandler}\n              value={newPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"pwValidationList\">\n            <StyledLi valid>{isValid}</StyledLi>\n            <StyledLi>{isNoInput}</StyledLi>\n            <StyledLi>{isTooShort}</StyledLi>\n            <StyledLi>{isWrongType}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n      </div>\n\n      <Buttons className=\"login--buttons\">\n        <div>\n          <Button onClick={editButtonHandler} edit>수정</Button>\n          <Button onClick={cancelButtonHandler}>취소</Button>\n        </div>\n      </Buttons>\n\n      <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton>\n\n      {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      }\n    </Outer>\n  );\n}","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n  TODO\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#419300\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n// const url = process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_URL\n\nexport default function SignUp() {\n    const dispatch = useDispatch()\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력해주세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n    })\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst PaginationContainer = styled.div.attrs({\n  className: \"pagination\"\n})`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // width: 50vw;\n  color: #A1A1A1;\n  font-weight: bold;\n`;\n\nconst PageNumbersList = styled.ul.attrs({\n  className: \"pageNumbersList\"\n})`\n  border: 1px solid red;\n  // width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  list-style-type: none;\n  padding: 0 1rem;\n`;\n\nconst ArrowButton = styled.span.attrs({\n  className: \"arrow\"\n})`\n  &:hover {\n    color: black;\n  }\n`;\n\nconst PageNumberItem = styled.li.attrs({\n  className: \"pageNumberItem\"\n})`\n  padding: 0 1rem;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport default function Pagination({dataLength, unit, numberButtonClickHandler}) {\n  const numberOfPages = Math.ceil(dataLength / unit);\n  const numberArr = new Array(numberOfPages).fill(0).map((el, idx) => idx + 1);\n  const [startIdx, setStartIdx] = useState(0);\n  const [lastIdx, setLastIdx] = useState(unit);\n  const cutArrInit = new Array(unit).fill(0).map((el, idx) => idx + 1);\n  const [cutArr, setCutArr] = useState(cutArrInit);\n\n  const prevHandler = () => {\n    if(startIdx === 0) return;\n    console.log('**prev**');\n    setStartIdx(prev => prev - unit);\n    setLastIdx(prev => prev - unit);\n  }\n\n  const nextHandler = () => {\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(lastIdx === tempIdxEnd) return;\n    console.log('**next**');\n    setStartIdx(prev => prev + unit);\n    setLastIdx(prev => prev + unit);\n  }\n\n  useEffect(()=>{\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n\n    if(startIdx >= unit || lastIdx <= tempIdxEnd) {\n      const result = numberArr.slice(startIdx, lastIdx);\n      setCutArr(prev => result);\n    }\n  }, [startIdx, lastIdx])\n\n  return (\n    <PaginationContainer>\n      <ArrowButton className=\"prevButton\" onClick={prevHandler}>\n        ⬅️\n      </ArrowButton>\n      <PageNumbersList>\n        {\n          cutArr.map(number => {\n            return (\n              <PageNumberItem\n                key={number}\n                id={number}\n                onClick={() => {\n                  numberButtonClickHandler(number);\n                }}\n              >\n                {number}\n              </PageNumberItem>\n            );\n          })\n        }\n      </PageNumbersList>\n      <ArrowButton className=\"nextButton\" onClick={nextHandler}>\n        ➡️\n      </ArrowButton>\n    </PaginationContainer>\n  );\n}","import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE, userPosts, updatePostId } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\nimport Pagination from \"../components/Pagination\"\n\n/*\n  [수정]\n  - 레이아웃 고치다가 중단함\n  - 페이지네이션 컴포넌트 추가함\n*/\n\nconst Outer = styled.div`\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  /* height: 100vh; */\n  min-height: 100vh;\n  padding-top: 100px;\n  button{\n    font-size: 1.5rem;\n  }\n\n  @media screen and (min-width: 1500px) {\n    padding-left: 3vh;\n    padding-right: 3vh;\n  }\n  @media screen and (max-width: 375px) {\n    padding-top: 2vh;\n  }\n  @media screen and (max-width: 1081px) {\n    /* height: auto; */\n  }\n`\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 300px 300px ;\n    grid-gap: 1.5rem;\n    height: 70vh;\n    p{\n      font-size: 28px;\n    }\n\n    .postItem {\n      background-color: rgba(255, 255, 255, 0.6);\n      display: flex;\n    }\n    .postItem:hover {\n    }\n    \n    @media screen and (min-width: 2100px) {\n        height: 50vh;\n        width: 300px;\n    }\n    @media screen and (max-width: 1081px) {\n      padding-left: 5vw;\n      padding-right: 5vw;\n      height: auto;\n      grid-template-columns: 1fr 1fr;\n    }\n    @media screen and (max-width: 600px) {\n      padding-left: 2vw;\n      padding-right: 2vw;\n      p{\n        font-size:20px\n      }\n    }\n    @media screen and (max-width: 375px) {\n      height: auto;\n    }\n`\n\n// 게시물 사진\nconst PostImg = styled.img`\n  width: 100%;\n  height: 100%;\n  background-color: #FFFFFF;\n\n  @media screen and (min-width: 2100px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    // 이미지 크기 수정 필요\n  }\n`\n// 게시물 내용\n// const PostInfo = styled.div`\n//   width: 50%;\n//   padding: 3vh 2vw 2vh 2vw;\n//   font-size: 2rem;\n//   align-items: center;\n//   p{\n//     margin-top: 10px;\n//   }\n\n//   @media screen and (max-width: 1081px) {\n//     padding: 1vh 2vw 2vh 2vw;\n//     font-size: 1.5rem;\n//   }\n//   @media screen and (max-width: 375px) {\n//     font-size: 1rem;\n//     padding-left: 3vw;\n//   }\n// `\n\n// 페이지네이션\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    li {\n      /* margin: 3px; */\n      list-style: none;\n      padding: 3px;\n      /* border: 1px solid red; */\n    }\n    button {\n      margin: 0 1vw;\n      padding: 1rem 1.5rem;\n      border-radius: 50%;\n    }\n    button:focus{\n      background-color: var(--modal-bg-color);\n    }\n    #prev,\n    #next{\n      background: none;\n    }\n    @media screen and (max-width: 1081px) {\n      margin-top: 10rem;\n      padding-bottom: 5rem;\n\n    }\n\n    @media screen and (max-width: 375px) {\n      margin-top: 3rem;\n      padding-bottom: 3rem;\n      li {\n        /* margin: 0 1vw; */\n        /* margin: 1vh; */\n        padding: 0;\n\n      }\n      button {\n        /* margin: 0 1.5vw; */\n        font-size: 1.5rem;\n        margin: 0;\n        padding: 1px 7px;\n      }\n    }\n`\nconst url = process.env.REACT_APP_LOCAL_URL\n\nexport default function MyPost() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { start, end, current, isLogin, userInfo, postInfo, readPostId } = useSelector((state) => state.itemReducer)\n  console.log(postInfo)\n  console.log(readPostId)\n \n  const updateCurrPage = page => (dispatchs) => {\n    dispatch({ type : UPDATE_CURRENT_PAGE, payload: page })\n  }\n  const updateStartEndPage = (start, end) => (dispatchs) => {\n    dispatch({type: UPDATE_START_END_PAGE, payload: {start, end}})\n  }\n  const [currentPosts, setcurrentPosts] = useState([])\n\n  useEffect(() => {\n    axios({\n        url: url + `/mypost?searchID=${userInfo.user_id}`,\n        method: \"get\",\n        withCredentials: true,\n    }).then((res) => {\n        //console.log(res.data)\n        setcurrentPosts(res.data)\n        dispatch(userPosts(res.data))\n    }) \n}, [])\n\n// 게시물사진 클릭했을 때\nconst postClickHandler = (e) => {\n  // console.log(e.target.id);\n  // history.push(\"/postread\")\n  // history.push({\n  //     pathname: 'postread',\n  //     search: `?searchID=${userInfo.user_id}`,\n  //     state: {data: postInfo.postinfo}\n  // })\n  // 해당 게시물의 id, user_id\n\n  let elem = e.target;\n  while(!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if(!elem.classList.contains(\"myPostList\")) {\n          break;\n      }\n  }\n\n  dispatch(updatePostId(elem.id));\n  history.push({\n      pathname: '/postread',\n      state: {postId: elem.id}\n  });\n}\n\n\n\n  // 페이지별 담는 글 갯수\n  const per = 4;\n\n  // 총 몇개 페이지가 필요한지?\n  const total = Math.ceil(20 / per);\n  // total의 갯수만큼 각 페이지번호가 있는 박스들을 생성하기 위한 mapping을 위한 배열\n  const array = [];\n  for(let i = 0; i < total; i++){\n    array.push(i + 1);\n  }\n  // 총페이지가 10페이지가 넘을 경우에 10개씩 자른다.\n  const target = array.slice(start, end)\n\n  return (\n    <Outer>\n      <GoBackButton/>\n      <GridArea className=\"myPostList\">\n        {/* <div className=\"item\"> */}\n          {/* <PostImg src={`${process.env.PUBLIC_URL}img/sky.png`} alt=\"weather\"/> */} \n          {currentPosts.map((el) => \n            <div className={[\"postItem\"]} id={el.id} onClick={postClickHandler} key={el.id}>\n              <PostImg src={el.post_photo} alt=\"posts\"/>\n            </div>)}\n          {/* <PostInfo>\n            <p>{'서울시 종로구'}</p>\n            <p>{'10/19'}</p>\n            <p>날씨 : {'맑음'}</p>\n            <p>바람 : {'조금'}</p>\n            <p>온도 : {'따뜻함'}</p>\n          </PostInfo> */}\n        {/* </div> */}\n      </GridArea>\n\n      {/* 페이지네이션 테스트 */}\n      <Pagination\n        dataLength={100}\n        unit={5}\n        // numberButtonClickHandler={}\n      />\n\n      {/* 페이지네이션이나 무한스크롤 */}\n      <Page>\n        <li className=\"page-item\">\n          <button\n            id=\"prev\"\n            className=\"item page-link\"\n            onClick={() => {\n              if(current === 1) return alert('첫번째 페이지 입니다.')\n              if(current % 10 === 1){\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPage(s, e);\n              }\n              updateCurrPage(current - 1);\n            }}\n          >\n            이전\n          </button>\n        </li>\n\n        {target.map(el => (\n          <li className=\"page-item\" key={el}>\n            <button\n              className=\"item page-link\"\n              onClick={() => {\n                updateCurrPage(el)\n              }}\n            >\n              {el}\n            </button>\n          </li>\n        ))}\n\n        \n        <li className=\"page-item\">\n          <button\n            id=\"next\"\n            className=\"item page-link\"\n            onClick={() => {\n              if(current % 10 === 1){\n                const s = start - 10;\n                const e = end - 10;\n                updateStartEndPage(s, e);\n              }\n              updateCurrPage(current + 1);\n            }}\n          >\n            다음\n          </button>\n        </li>\n      </Page>\n    </Outer>\n  )\n}\n\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        //console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        //console.log(userInfo.user_id)\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                // headers: {\n                //     // accept: \"application/json\",\n                // },\n                data: {\n                    user_id: userInfo.user_id,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    user_id: Math.random().toString(36).substr(2, 5),\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: Math.random().toString(36).substr(2, 20),\n                    post_content: Math.random().toString(36).substr(2, 100),\n                    weather: [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","// import { useState, useEffect } from \"react\"\n// import styled from \"styled-components\"\n// import { useDispatch } from \"react-redux\"\n// import { changeBookmark } from \"../actions/index\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\n// 북마크 하트 버튼\n// const Container = styled.img`\n\n// `;\n\nexport const Bookmark = ({ like, bookmarkHandler, color })  => {\n\n  return(\n    <button className=\"bookmarkContainer\" onClick={bookmarkHandler}>\n      <FontAwesomeIcon\n        icon={faHeart}\n        className=\"heart\"\n        size=\"3x\"\n        color={color}\n      />\n    </button>\n  )\n}\n\n// 사용 예시\n// const [bookmarked, setBookmarked] = useState(false);\n// const bookmarkHandler = (e) => {\n//   setBookmarked(prev => !prev);\n// }\n// <Bookmark bookmarkHandler={bookmarkHandler} color={bookmarked ? '#eb425b' : '#aaa'}/>","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Bookmark } from \"../components/Heart\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from  \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\nimport TopButton from \"../components/TopButton\";\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n  width: 100vw;\n  background-color: var(--page-bg-color);\n\n  // 오늘의 코디\n  .todayCodi{\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    color: #2E2E2E;\n    padding-top: 2vh;\n    border-top: 1px solid #aaa;\n  }\n\n  h2.warning--nodata {\n    color: #c60239;\n    font-size: 3rem;\n    margin: 0 1rem;\n  }\n\n  @media screen and (max-width: 1081px){\n    .todayCodi{\n      margin-top: 2vh;\n      font-weight: bold;\n    }\n  }\n  @media screen and (max-width: 375px) {\n  }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 960px;\n  text-align: center;\n  margin: 0 auto;\n\n  span{\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    span{\n      font-size: 1.2rem;\n    }\n  }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n  float: right;\n\n  & .heart{\n    cursor: pointer;\n    color: #aaa;\n  }\n`\n\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex; \n  justify-content: space-between;\n  flex-flow: wrap;\n\n  .profileInfo{\n    display: flex; \n    align-items: center;\n    /* margin-left: 1vh; */\n  }\n  .location{\n    font-size: 1.2rem;\n  }\n  span{\n    margin-left: 1vh;\n  }\n  span.date {\n    font-size: .8rem;\n    color: #707B7C;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 594px) {\n    .location{\n      margin-top: 1.2vh;\n      font-size: 1.2rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span{\n      font-size: 0.5rem;\n    }\n    .location{\n      font-size: 0.5rem;\n    }\n  }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  // 이미지 사이즈(1000*750) \n  // 다시 확인필요\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: 30rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: 18rem;\n  }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  width: 330px;\n  margin-top: 4vh;\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n    justify-content: space-around;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    margin-bottom: 3vh;\n  }\n`\n\nconst Icon = styled.img`\n  @media screen and (max-width: 1081px) {\n    width: 4rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 3rem;\n  }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  width: 20%;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items:center;\n  margin: auto;\n  margin-top: 3vh;\n  margin-bottom: 3vh;\n  .warning{\n    display: none;\n  }\n  & p.warning {\n    font-size: .9rem;\n    width: 6rem;\n    height: 6rem;\n    text-align: center;\n  }\n\n  img {\n    width: 4rem;\n    height: auto;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 50%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50vw;\n  }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n\n  p{\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p{\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n  width: 15rem;\n  margin: 0 auto;\n  padding-bottom: 10vh;\n\n  .button{\n    width: 5rem;\n    height: 3rem;\n    border-radius: 5px;\n    background-color: var(--button-bg-normal);\n    font-size: 1.2rem;\n  }\n  .button2{\n    margin-left: 5rem;\n  }\n  .button:before{\n    height: 0%;\n    width: 2px;\n  }\n  .button:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n\n  @media screen and (max-width: 1081px) {\n    .button2{\n      margin-left: 80px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    .button{\n      width: 3rem;\n      height: 2rem;\n      font-size: 1rem;\n    }\n    .button2{\n      margin-left: 0;\n    }\n  }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function PostRead(){\n  const history = useHistory()\n  const { readPostId, userInfo, postInfo } = useSelector(state => state.itemReducer);\n  // console.log(userInfo.id)\n  // console.log(readPostId)\n  // console.log(postInfo)\n  const postId = Number(readPostId)\n  //console.log(postId) \n\n  // postData state 변수\n  const [postData, setPostData] = useState({\n    id: null,\n    post_title: '',\n    user_id: '',\n    createdAt: '',\n    updatedAt: '',\n    xLocation: '',\n    yLocation: '',\n    post_photo: '',\n    weather: '',\n    wind: '',\n    temp: '',\n    top_id: '',\n    bottom_id: '',\n    post_content: '',\n    address: ''\n  });\n  const [ noIdWarning, setNoIdWarning ] = useState('');\n\n  // 날짜 처리\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    let hourAndMin = dateObject.toLocaleTimeString('en-US', { hour12: false });\n    hourAndMin = hourAndMin.slice(0, -3);\n\n    return `${dateOnly} ${hourAndMin}`\n  }\n\n  // 글 불러오기\n  useEffect(() => {\n    function getOnePost(postId) {\n      axios.get(`${url}/readpost`, {\n        headers: { \"Content-Type\": \"application/json\" },\n        params: { id: postId },\n        withCredentials: true\n      })\n      .then (res => {\n        console.log(res.data);\n        return setPostData(prev => res.data);\n        // return res.data;\n      })\n      .catch (err => console.log(err));\n    };\n\n    let id;\n    if (history.location.state) {\n      id = history.location.state.postId;\n    } else {\n      id = readPostId;\n    }\n\n    if (!id) {\n      console.log('**postread: id가 없습니다**');\n      setNoIdWarning(prev => '잘못된 접근입니다.');\n    } else {\n      getOnePost(id);\n    }\n  }, [])\n\n  // 북마크 상태\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  // 게시물 수정\n  const [edit, setEdit] = useState(false)\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false)\n\n  // 게시물 수정\n  const editPost = () => {\n    console.log('수정버튼동작확인');\n    setEdit(true);\n  }\n\n  // 게시물 삭제\n  const deletePost = (e) => {\n    console.log('삭제버튼동작확인');\n    setRemovePost(true);\n  }\n\n  const editModalYes = () => {\n    setEdit(false);\n    history.push(\"/editpost\");\n    // 여기서 회원인지 아닌지 확인을 한 뒤에 postEdit으로 넘겨야\n    // postEdit.js에 redux로 글 내용을 보내야 하는 건가?\n    // 아이디로 악시오스 요청? 어차피 똑같은 내용인데?\n  }\n\n  //삭제버튼 \n  const removeModalYes = () => {\n    // console.log('삭제완료')\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n    axios({\n      url:  url + \"/deletepost\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      withCredentials: true\n    })\n    .then(() => {\n      alert(\"삭제 완료\")\n      history.push(\"/mypage\")\n    })\n    setRemovePost(false)\n    // 'a페이지' -> 글 읽기 -> 삭제\n      // a페이지로 redirect\n  }\n\n  const modalNoButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const bookmarkHandler = (e) => {\n    console.log('글 읽기 - 북마크 버튼 동작 확인');\n    //눌렀을 때 북마크에 저장\n    //다시 누르면 해제\n      axios({\n        url: url + '/bookmark',\n        method: \"post\",\n        data: { user_id: userInfo.id, post_id: postId },\n        headers: {  \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n    .then((res) => {\n      console.log(res.data)\n      setBookmarked(prev => !prev);\n      history.push(\"/bookmark\")    \n    })  \n  // console.log(e.currentTarget);\n  }\n\n  return (\n    <Outer>\n      {\n        noIdWarning.length !== 0?\n          <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n        :\n          ''\n      }\n      <TopButton/>\n      <GoBackButton/>\n      <PostHeader className=\"postHeader\">\n        <Title className=\"title\">\n          <span>{postData.post_title}</span>\n          <BookmarkIcon\n            bookmarkHandler={bookmarkHandler}\n            color={bookmarked ? '#ED4956' : '#aaa'}\n          />\n        </Title>\n\n        <Profile className=\"userProfile\">\n          <div className=\"profileInfo\">\n            {/* <ProfileImg src={\"img/user-img.png\"}/> */}\n            <ProfileImg src={postData.user_Photo}/>\n            {/* <span className=\"nickName\">{'김코딩'}</span> */}\n            <span className=\"nickName\">{postData.nickName}</span>\n            <span className=\"date\">\n              {formatDate(postData.updatedAt)}\n            </span>\n          </div>\n          <div>\n            <p className=\"location\">{postData.address}</p>\n            {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n          </div>\n        </Profile>\n      </PostHeader>\n      <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n      <WeatherInfo>\n          {\n            !postData.weather?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`} alt=\"날씨아이콘\"/>\n          }\n          {\n            !postData.wind?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`} alt=\"바람아이콘\"/>\n          }\n          {\n            !postData.temp?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`} alt=\"날씨아이콘\"/>\n          }\n      </WeatherInfo>\n\n      {/* 코디가 있을 때, 없을 때 */}\n      {\n        // 코디 3개 없을때\n        (!postData.outer_id || postData.outer_id === 'default') && (!postData.top_id || postData.top_id === 'default') && (!postData.bottom_id || postData.top_id === 'default') ?\n          null\n        :\n          <>\n          <h2 className=\"todayCodi\">오늘의 코디</h2>\n          <TodayCodi>\n            {\n              !postData.outer_id || postData.outer_id === 'default' ?\n              <p className=\"warning\">겉옷 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`} alt=\"겉옷\" />\n            }\n            {\n              !postData.top_id || postData.top_id === 'default' ?\n                <p className=\"warning\">상의 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`} alt=\"상의\" />\n            }\n            {\n              !postData.bottom_id || postData.top_id === 'default' ?\n                <p className=\"warning\">하의 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`} alt=\"하의\" />\n            }\n          </TodayCodi>\n          </>\n      }\n\n      <Post>\n        <p>\n          {postData.post_content}\n        </p>\n      </Post>\n\n      <Buttons>\n        <button className=\"button button1\" value=\"delete\" onClick={deletePost}>삭제</button>\n        {removePost === false ? null : (\n          <ModalConfirm\n            yesHandler={removeModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >삭제하시겠습니까?</ModalConfirm>\n          )}\n        <button className=\"button button2\" onClick={editPost}>수정</button>\n        {edit === false ? null : (\n          <ModalConfirm\n            yesHandler={editModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >수정하시겠습니까?</ModalConfirm>\n        )}\n      </Buttons>\n    </Outer>\n  )\n}","import styled from \"styled-components\"\nimport React,{ useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\n//import { changeIsLogin, userPosts, updatePostId } from \"../actions/index\"\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : \".5rem\")};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: .5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation, postInfo, readPostId } = useSelector((state) => state.itemReducer)\n    console.log(userInfo)\n    console.log(postInfo)\n    console.log(readPostId)\n  \n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [postId, setPostId] = useState(readPostId)\n    // const [uploadedImg, setUploadedImg] = useState({\n    //     fileName: \"blankPost.png\",\n    //     filePath: `${url}/img/blankPost.png`,\n    // })\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: null,\n        filePath: null,\n    })\n    \n  \n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n      console.log(userInfo.user_id)\n      // setTitle()\n\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n        breezy: false,\n        windy: false,\n        strong: false,\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    // 상의 더미데이터\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"tshirts\", \"티셔츠\"],\n        [\"shirts\", \"셔츠\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"shorts\", \"반바지\"],\n        [\"pants\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        //console.log(userInfo.user_id)\n        axios({\n            url: url + \"/editpost\",\n            method: \"put\",\n            data: {\n                user_id: userInfo.user_id,\n                post_id: postId, //추가 \n                post_photo: uploadedImg.filePath,\n                post_title: title,\n                post_content: postText,\n                weather: selectWeather,\n                wind: selectWind,\n                temp: selectTemp,\n                top_id: selectValueTop,\n                bottom_id: selectValueBottom,\n                xLocation: curLocation.lat,\n                yLocation: curLocation.lon,\n            },\n            withCredentials: true,\n        })\n        .then((res) => {\n            console.log(res.data)\n            alert(\"수정 완료\")\n            //setTitle(res.dat)\n            history.push(\"/mypage\")\n        })\n        .catch((err) => console.log(err))\n    }\n\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        if (\n            select === \"sunny\" ||\n            select === \"cloudy\" ||\n            select === \"rainy\" ||\n            select === \"snowy\"\n        ) {\n            setSelectWeather(select)\n        } else if (\n            select === \"breezy\" ||\n            select === \"windy\" ||\n            select === \"strong\"\n        ) {\n            setSelectWind(select)\n        } else if (select === \"cold\" || select === \"hot\") {\n            setSelectTemp(select)\n        }\n    }\n\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons\n                            className=\"filteringButtons\"\n                            onClick={weatherBtnHandler}\n                        >\n                            {weathers.map((weather, idx) => {\n                                return (\n                                    <FilteringBtn\n                                        key={idx}\n                                        name={weather}\n                                        className=\"weatherButton\"\n                                        type=\"button\"\n                                        active={isFilteringBtnActive[weather]}\n                                        onClick={() => weatherFunc(weather)}\n                                    >\n                                        <img\n                                            src={`${process.env.PUBLIC_URL}img/icons-write/${weather}.png`}\n                                        />\n                                    </FilteringBtn>\n                                )\n                            })}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        수정\n                    </Button>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\";\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n  }\n`;\n\nexport const HalfPage = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n  & img {\n    margin: 2rem;\n    width: 50vw;\n    height: auto;\n  }\n\n  & p {\n    font-size: 1.5rem;\n    margin: 1rem;\n    line-height: 150%;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: var(--desktop-page-height);\n    & img {\n      margin: 2rem;\n      width: 95%;\n      height: auto;\n    }\n\n    & p {\n      margin: 2rem;\n      width: 35vw;\n      height: auto;\n    }\n  }\n`;\n\nexport const AnimatedP = styled.p`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '1.5s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport const AnimatedImg = styled.img`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.5s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function One({ delayOne, delayTwo }) {\n  return (\n    <Contents className={[\"landingPagePart\", \"one\"]}>\n      <HalfPage className=\"half-page\">\n        <AnimatedP className=\"desc\">\n          일기 예보가 <br/>\n          믿음직스럽지 못하시다구요?<br/>\n        </AnimatedP>\n        <div className=\"picture-png left\">\n          <AnimatedImg\n            src=\"img/firstpage/phone-and-human.png\"\n            alt=\"human with phone\"\n          />\n        </div>\n      </HalfPage>\n\n      <HalfPage className=\"half-page\">\n        <AnimatedP className=\"desc\" delay={delayOne}>\n          동네 주민이 올린 하늘의 사진을 <br/>\n          실시간으로 확인할 수 있어요.<br/>\n        </AnimatedP>\n        <AnimatedP className=\"desc\" delay={delayOne}>\n          여러분도 하늘사진을 공유하고 <br/>\n          동네 날씨예보관이 되어 보세요!\n        </AnimatedP>\n        <div className=\"picture-png right\">\n          <AnimatedImg\n            src=\"img/firstpage/town.png\"\n            alt=\"street\"\n            delay={delayTwo}\n          />\n        </div>\n      </HalfPage>\n    </Contents>\n  );\n}","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40vw;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\nimport { TwoPictures } from \"./Three\";\n\nexport default function Four ({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n      <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n          <ContentsUnderTitle className=\"contents\">\n            <HalfPage className=\"half-page\">\n              <AnimatedP className=\"desc\" delay={delayTwo}>\n                날씨에 따라 코디를 <br/>\n                추천하거나 <br/>\n                코디를 추천 받으세요.\n              </AnimatedP>\n              <div className=\"picture-png left\">\n                <AnimatedImg\n                  src=\"img/firstpage/destination.png\"\n                  alt=\"reading mobile phone map\"\n                  delay={delayThree}\n                />\n              </div>\n            </HalfPage>\n            <HalfPage className=\"half-page\">\n              <TwoPictures className=\"picture-png right\">\n                <AnimatedImg\n                  src=\"img/firstpage/publish_post.png\"\n                  alt=\"publishing post\"\n                  delay={delayFour}\n                />\n                <AnimatedImg\n                  src=\"img/firstpage/among_nature.png\"\n                  alt=\"watching tree\"\n                  delay={delayFour}\n                />\n              </TwoPictures>\n              <AnimatedP className=\"desc\" delay={delayFive}>\n                날씨에 따라 코디를 추천받거나, <br/>\n                예보글을 작성하여 <br/>\n                적절한 코디를 추천할 수 있어요.\n              </AnimatedP>\n            </HalfPage>\n          </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport One from \"../components/FirstPage/One\"\nimport Two from \"../components/FirstPage/Two\"\nimport Three from \"../components/FirstPage/Three\"\nimport Four from \"../components/FirstPage/Four\"\nimport { changeMapPage } from \"../actions/index\"\nimport React, { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\n\nconst FirstPageContainer = styled.div`\n    background: linear-gradient(#fff, #fef9ef, #fff5dc, #d7f9ff, #aaf2ff);\n`\n\nexport default function FirstPage() {\n    const dispatch = useDispatch()\n    // let assignedHeight = window.innerHeight * 0.95;\n    // const [ locationY, setLocationY ] = useState(0);\n    // console.log('[스크롤 위치]', Math.floor(locationY));\n    // const scrollHandler = () => {\n    //   setLocationY(window.pageYOffset);\n    // }\n\n    // useEffect(()=>{\n    //   window.addEventListener('scroll', scrollHandler);\n    //   return () => {\n    //     window.removeEventListener('scroll', scrollHandler);\n    //   }\n    // }, []);\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    return (\n        <FirstPageContainer className=\"firstPageWhole\">\n            <One delayOne={\"1s\"} delayTwo={\"1.2s\"} />\n            <Two\n                delayOne={\"2.2s\"}\n                delayTwo={\"2.5s\"}\n                delayThree={\"2.6s\"}\n                delayFour={\"2.7s\"}\n                delayFive={\"2.8s\"}\n            />\n            <Three\n                delayOne={\"4.0s\"}\n                delayTwo={\"4.3s\"}\n                delayThree={\"4.4s\"}\n                delayFour={\"4.5s\"}\n                delayFive={\"4.6s\"}\n            />\n            <Four\n                delayOne={\"5.5s\"}\n                delayTwo={\"5.8s\"}\n                delayThree={\"5.9s\"}\n                delayFour={\"6.0s\"}\n                delayFive={\"6.1s\"}\n            />\n        </FirstPageContainer>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\nconst socket = io.connect(url)\n\nexport default function Messenger() {\n    // const dispatch = useDispatch()\n    const [prevmsg, setprevmsg] = useState([])\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)-hoon\n    const [msgevent, setmsgevent] = useState(\"\")\n    //메시지의 총 집합-hoon\n    const [newMsgSection, setNewMsgSection] = useState([])\n    //방을 새로 개설할때 쓰인다-hoon\n    const [receiver_id, setreceiver_id] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방-hoon\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트-hoon\n    const [joinedRoom, setjoinedRoom] = useState([\"\"])\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    const [recievemessage, setrecievemessage] = useState([])\n    console.log(recievemessage)\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)-hoon\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setreceiver_id(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.-hoon\n        const user_id_sort = [userInfo.user_id, receiver_id].sort()\n        // socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n        // setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        //룸네임이 만들어지면 axios로 접속된 목록을 추가하여 데이터 베이스에 저장해주자-hoon\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: receiver_id,\n                roomName: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }\n    //처음에 가지고 있는 참여된 방이 있는지 조회-hoon\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }, [])\n    /////////////메시지를 받았을때/////\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n        socket.on(\"sendmsg\", (msgobj) =>\n            setNewMsgSection([...newMsgSection, msgobj])\n        )\n    }, [])\n\n    useState(() => {\n        setNewMsgSection([...newMsgSection])\n        setprevmsg([...prevmsg])\n        console.log(newMsgSection)\n    }, [roomInOut, prevmsg, newMsgSection])\n\n    //방을 클릭했을때 방을 입장하게 할 함수-hoon\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        //현재 방입장-hoon\n        console.log(clickRoomName)\n        setcurRoom(clickRoomName)\n        // socket.emit(\"enter_room\", clickRoomName)\n        //방입장시 렌더링 할 메시지를 가져와야한다.\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n    }\n    //채팅방 메시지 글작성 이벤트타겟용 함수\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        }).then((res) =>\n            socket.emit(\"message\", {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                chatcontent: msgevent,\n            })\n        )\n        setmsgevent(\"\")\n    }\n\n    // socket.on(\"newMsg\", (msg2) => {\n    //     // console.log(\"메시지 적용되야됨\")\n    //     //총 메시지리스트를 여기서 업데이트하고있다\n    //     setprevmsg([...msg, msg2])\n    // })\n    // useEffect(() => {\n    //     axios({\n    //         url: url + \"/chat/messagelist\",\n    //         method: \"post\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         data: {\n    //             roomName: curRoom,\n    //             chatcontent: JSON.stringify(msg),\n    //         },\n    //         withCredentials: true,\n    //     }).then((res) => {})\n    //     // .then((res) => console.log(\"글 업데이트 완료\"))\n    // }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n\n    const MeDiv = styled.div`\n        // border-bottom: 1px solid green;\n        // margin-bottom: 1rem;\n        // margin-top: 1rem;\n        // padding-bottom: 0.5rem;\n        // vertical-align: center;\n        // align-self: center;\n        text-align: right;\n\n        overflow: auto;\n    `\n    const YouDiv = styled.div`\n        // border-bottom: 1px solid black;\n        // margin-bottom: 1rem;\n        // margin-top: 1rem;\n        // padding-bottom: 0.5rem;\n        // vertical-align: center;\n        // align-self: center;\n        text-align: left;\n\n        overflow: auto;\n    `\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el\n                                    .replace(\"_\", \"\")\n                                    .replace(`${userInfo.user_id}`, \"\")}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {prevmsg.map((el) => {\n                            if (userInfo.user_id === el.user_id) {\n                                return <MeDiv>{el.chatcontent}</MeDiv>\n                            } else {\n                                return <YouDiv>{el.chatcontent}</YouDiv>\n                            }\n                        })}\n                        {newMsgSection.map((el) => {\n                            if (userInfo.user_id === el.user_id) {\n                                return <MeDiv>{el.chatcontent}</MeDiv>\n                            } else {\n                                return <YouDiv>{el.chatcontent}</YouDiv>\n                            }\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                        value={msgevent}\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space\"\n}\nconst socket = io.connect(url)\n\nexport default function Messenger2() {\n    // const dispatch = useDispatch()\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n    //방을 새로 개설할때 쓰인다\n    const [roomName, setroomName] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방\n    //메시지의 총 집합\n    const [msg, setmsg] = useState([\"\"])\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)\n    const [msgevent, setmsgevent] = useState(\"\")\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트\n    const [joinedRoom, setjoinedRoom] = useState([])\n    const history = useHistory()\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setroomName(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.\n        const user_id_sort = [userInfo.user_id, roomName].sort()\n        socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n        //axios로 접속된 목록을 추가하여 데이터 베이스에 저장하는데, 유즈이펙트로, 변화가 있을때만 저장한다.\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                opponent: roomName,\n                roomlist: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setjoinedRoom(res.data)\n        })\n    }\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => setjoinedRoom(res.data))\n    }, [])\n\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        socket.emit(\"enter_room\", clickRoomName)\n        setcurRoom(clickRoomName)\n\n        axios({\n            url: url + `/chat/messagelist?roomlist=${clickRoomName}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setmsg(res.data)\n        })\n    }\n\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    function msgSubmit() {\n        socket.emit(\n            \"newMsg\",\n            `${userInfo.user_id} : ` + msgevent,\n            curRoom,\n            () => {\n                // console.log(\"메시지추가 찍혀라\")\n                setmsg([...msg, `${userInfo.user_id} : ` + msgevent])\n            }\n        )\n    }\n    // socket.on(\"newMsg\", setmsg([msg, ...msg]))\n\n    // socket.on(\"welcome\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 방에 들어왔습니다\", ...msg])\n    // })\n    // socket.on(\"bye\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 나갔습니다\", ...msg])\n    // })\n    socket.on(\"newMsg\", (msg2) => {\n        // console.log(\"메시지 적용되야됨\")\n        //총 메시지리스트를 여기서 업데이트하고있다\n        setmsg([...msg, msg2])\n    })\n    useEffect(() => {\n        axios({\n            url: url + \"/chat/messagelist\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                roomlist: curRoom,\n                chatcontent: JSON.stringify(msg),\n            },\n            withCredentials: true,\n        }).then((res) => {})\n        // .then((res) => console.log(\"글 업데이트 완료\"))\n    }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el.split(\"_\").indexOf(userInfo.user_id) === 0\n                                    ? el.split(\"_\")[1]\n                                    : el.split(\"_\")[0]}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {msg.map((el) => {\n                            return <div>{el}</div>\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { changeUser } from \"../actions/index\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\n\n// 부모요소에 postion: relative 필요함\n// props\n\t// duration : 따옴표 안에 s(초) 단위로 지정\n\t\t// ex) duration={'3s'}\n\t\t// 지정하지 않은 경우 기본값 2s\n\t\t// 숫자가 작을수록 빨리 돌아간다\n\t// size : 따옴표 안에 px 단위로 지정\n\t\t// ex) size={'30px'}\n\t\t// 지정하지 않은 경우 기본값 (가로 === 세로)\n\t\t\t// 모바일 50px\n\t\t\t// 데스크탑 100px\n\t// hide\n\t\t// true -> display: none;\n\t\t// false(지정하지 않은 경우 포함) -> display: flex;\n\nconst LoadingContainer = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tdisplay: ${props => props.hide ? 'none' : 'flex'};\n\tjustify-content: center;\n\twidth: 100vw;\n\tmin-height: 100vh;\n\tbackground-color: rgba(253, 254, 254, 0.5);\n\t\t// 밝은 회색, opacity 0.3\n\tz-index: 300;\n\n\t& > img {\n\t\tmargin-top: calc(var(--mobile-header-height) + 10vh);\n\n\t\t@media screen and (min-width: 1081px) {\n\t\t\tmargin-top: calc(var(--desktop-header-height) + 10vh);\n\t\t}\n\t}\n`\n\nexport default function Loading({ size, duration, hide }) {\n\t// const dispatch = useDispatch()\n\t// const { userInfo } = useSelector((state) => state.itemReducer)\n\t// dispatch(changeUser(axiosData))\n\n\treturn (\n\t\t<LoadingContainer className=\"loadingContainer\" hide={hide}>\n\t\t\t<LoadingSpinner size={size} duration={duration} />\n\t\t</LoadingContainer>\n\t)\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box;   \n}\n\nbody { \n  font-family: 'IBM Plex Sans KR', sans-serif;\n  }\n  \n`\n\nexport default GlobalStyle\n","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport Messenger from \"./pages/Messenger\"\nimport Messenger2 from \"./pages/Messenger2\"\nimport Loading from \"./pages/Loading\"\nimport { changeIsLogin, changeUser } from \"./actions/index\"\n\nimport styled from \"styled-components\"\nimport GlobalStyle from \"./components/GlobalStyle\"\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\n// const url = \"https://thereweather.space\"\n\nexport default function App() {\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const isInput = true\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <GlobalStyle />\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/postread\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/postedit\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/Messenger\">\n                    <Messenger />\n                </Route>\n                <Route exact path=\"/Messenger2\">\n                    <Messenger2 />\n                </Route>\n                <Route exact path=\"/loading\">\n                    <Loading />\n                </Route>\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/first\" />\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n    //만드신 변수는 어떤 변수인지 설명 부탁드려요-hoon\n    isLogin: false, //로그인상태 -hoon\n    genderToggle: 1, //기본값 1, 회원가입시에 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n    curLocation: { lat: \"\", lon: \"\" }, //현재 위치 변수-hoon\n    userInfo: {}, //회원 로그인시 정보 저장할 변수-hoon\n    weatherFilter: \"\", //헤더에서 날씨 필터에서 선택된 날씨-hoon\n    mapPage: false, //헤더에서 날씨필터 없애기용 변수-hoon\n    searchWord: \"\",\n    selectWord: \"\",\n    editPassword: false,\n    start: 0, //북마크 페이지네이션\n    end: 10,\n    current: 1,\n    item: [], //기상청 데이터\n    postInfo: {}, //post 정보\n    readPostId: \"\", // 북마크나 지도 모달에서 클릭한 게시물의 아이디\n    homePost: [], // Home의 최근 게시물\n}\n","import {\n    CHANGE_SEARCH_WORD,\n    CHANGE_SELECT_WORD,\n    CHANGE_USER_INFO,\n    CHANGE_USER_GENDER,\n    CHANGE_IS_LOGIN,\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    CHANGE_USER_PW,\n    CHANGE_CUR_LOCATION,\n    UPDATE_WEATHERINFO,\n    UPDATE_USER_POST,\n    UPDATE_POST_ID,\n    CHANGE_WHEATER_FILTER,\n    CHANGE_MAP_PAGE,\n} from \"../actions/index\"\nimport { initialState } from \"./initialState\"\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload,\n            }\n        // 새로운기능은 위의 양식으로 아래쪽에 만들어서 쓸수있다.-hoon\n\n        case CHANGE_USER_GENDER:\n            return {\n                ...state,\n                genderToggle: action.payload,\n            }\n\n        case UPDATE_CURRENT_PAGE:\n            return {\n                ...state,\n                current: action.payload,\n            }\n\n        case UPDATE_START_END_PAGE:\n            return {\n                ...state,\n                start: action.payload.start,\n                end: action.payload.end,\n            }\n\n        case CHANGE_IS_LOGIN:\n            return {\n                ...state,\n                isLogin: action.payload,\n            }\n\n        case CHANGE_USER_PW:\n            return {\n                ...state,\n                editPassword: action.payload,\n            }\n\n        case CHANGE_SEARCH_WORD:\n            return {\n                ...state,\n                searchWord: action.payload,\n            }\n\n        case CHANGE_SELECT_WORD:\n            return {\n                ...state,\n                selectWord: action.payload,\n            }\n\n        case CHANGE_CUR_LOCATION:\n            return {\n                ...state,\n                curLocation: action.payload,\n            }\n        case UPDATE_WEATHERINFO:\n            return {\n                ...state,\n                item: action.payload,\n            }\n\n        case UPDATE_USER_POST:\n            return {\n                ...state,\n                postInfo: action.payload,\n            }\n\n        case UPDATE_POST_ID:\n            return {\n                ...state,\n                readPostId: action.payload,\n            }\n        case CHANGE_WHEATER_FILTER:\n            return {\n                ...state,\n                weatherFilter: action.payload,\n            }\n        case CHANGE_MAP_PAGE:\n            return {\n                ...state,\n                mapPage: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default itemReducer\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n\r\nexport default store\r\n","/* eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}