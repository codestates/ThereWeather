{"version":3,"sources":["actions/index.js","components/LoadingSpinner.js","components/MapBox.js","pages/Map.js","components/TopButton.js","components/OneChoiceModal.js","components/Footer.js","pages/Home.js","components/BookMarks.js","components/Pagination.js","pages/BookMark.js","components/MenuBarPC.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","LoginIcon/kakaoIcon.png","LoginIcon/googleIcon.png","pages/Login.js","pages/PasswordEdit.js","pages/SignUp.js","pages/MyPost.js","pages/Write.js","components/PostRead-comment.js","pages/PostRead.js","pages/ReadBookMarkPost.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/Loading.js","pages/FirstPage.js","pages/Messenger.js","pages/Messenger2.js","pages/EditUserInfo.js","pages/ChatRoom.js","components/FindAccountModal.js","pages/FindAccount.js","components/FindPwModal.js","pages/FindPassword.js","components/GlobalStyle.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","UPDATE_WEATHERINFO","UPDATE_USER_POST","UPDATE_POST_ID","CHANGE_WHEATER_FILTER","CHANGE_MAP_PAGE","CHANGE_CURROOM","CHANGE_NEWMSGSECTION","CURPAGE","changeUser","userinfo","type","payload","changeSearchword","searchWord","changeIsLogin","trueOrFalse","userPosts","postinfo","updatePostId","pageId","changeMapPage","mapPage","curPageAction","curPage","Spinner","styled","img","props","size","duration","LoadingSpinner","src","ImgContainer","div","PostListModal","SlideModal","bottom","GraphModal","GraphTitle","GraphTitleDiv","GraphTitleDiv2","BarGraphFlex","BarGraphchild","Location","console","log","useSelector","state","itemReducer","weatherFilter","useState","isLoading","setisLoading","history","useHistory","dispatch","useDispatch","kakao","window","sunny","cloudy","rainy","snowy","weatherCount","setWeatherCount","weatherApi","setweatherApi","bottom_id","createdAt","id","post_content","post_photo","post_title","temp","top_id","updatedAt","user_id","weather","wind","xLocation","yLocation","postList","setPostList","url","process","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","LEFT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","timer","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","markers","positions","i","n","idx","outer_id","infowindow","addMarkers","clearTimeout","setTimeout","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","toString","axios","La","Ma","method","headers","withCredentials","then","res","length","getCenter","fcstValue","Box","Box2","EmoticonBox","PostTitle","PostContent","PostBox","PostImg","IconImg","LoadingBoxDiv","Button","button","bgGrey","isText","labels","datasets","backgroundColor","hoverBackgroundColor","data2","label","borderColor","borderWidth","hoverBorderColor","isOnOff","setisOnOff","postBoxHandler","e","elem","target","classList","contains","parentNode","push","pathname","postId","onClick","icon","faChevronDown","faChevronUp","className","post","Container","TopButton","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","alt","scrollTo","top","behavior","True","False","BackgroundView","FlexArea","FlexArea2","FlexArea3","DivTag1","BtnTag1","OneChoiceModal","boolean","yesMessage","alertFunc","faExclamationCircle","Outer","GifTag","IconTag","FlexRow1","FlexRow2","FlexColumn1","FlexColumn2","FlexColumn3","FlexColumn4","FlexCenter1","Footer","alertState","setalertState","alertState2","setalertState2","href","rel","alert","HomeContainer","FooterDiv","TodaysDate","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","Codi","RightContainer","RightNav1","Home","curLocation","item","weatherData","setWeatherData","a","curAddress","setcurAddress","currentPosts","setcurrentPosts","right","left","address","curtPost","todaysDate","settodaysDate","currentDate","date","Date","getFullYear","getMonth","getDate","currentTemp","setcurrentTemp","currentWind","setcurrentWind","currentWeather","setcurrentWeather","currentOuter","setcurrentOuter","currentTop","setcurrentTop","currentBottom","setcurrentBottom","tempArr","windArr","weatherArr","outerArr","topArr","bottomArr","getCount","arr","reduce","pv","cv","tempObj","windObj","weatherObj","outerObj","topObj","bottomObj","newTempArr","Object","values","newWindArr","newWeatherArr","newOuterArr","newTopArr","newBottomArr","tempMaxNum","Math","max","windMaxNum","weatherMaxNum","outerMaxNum","topMaxNum","bottomMaxNum","matchKey","obj","maxNum","key","maxTemp","maxWind","maxWeather","maxOuter","maxTop","maxBottom","photoClickHandler","undefined","info","baseTime","substring","nanoid","el","Bookmark","like","bookmarkHandler","color","faBookmark","PaginationContainer","attrs","PageNumbersList","ul","ArrowButton","span","PageNumberItem","li","Pagination","unit","dataLength","itemsPerPage","numberButtonClickHandler","numberOfPages","ceil","numberArr","Array","fill","startIdx","setStartIdx","lastIdx","setLastIdx","cutArrInit","cutArr","setCutArr","tempIdxEnd","slice","prev","number","BookMarkPhoto","BookMarkList","Img1","Div1","BookMark","userInfo","readPostId","postInfo","bookmarkList","setBookmarkList","Number","post_id","post_info","formatDate","dateString","dateOnly","toLocaleDateString","postClickHandler","setCurrentPage","Buttons","Button1","Button2","Button3","Button4","Button5","MenuBarPC","url1","HeaderOuter","TitleAndLogo","isMobileLogo","Center","InputAndSubmit","StyledPostCode","DaumPostcode","Input","input","Buttons3","Cancel","Buttons2","Header","isInput","isLogin","searchEvent","setSearchEvent","onFocus","setOnFocus","setweatherFilter","changeWeatherFilter","onChange","value","placeholder","faSearch","onComplete","roadAddress","token","JSON","parse","localStorage","getItem","Authorization","clear","MenuBar","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faChevronLeft","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","isModalOpen","setIsModalOpen","user_Photo","gender","location","delete","name","ToggleContainer","Desc","Toggle","isOn","setisOn","Kakao","LoginOuter","LoginStyledArticle","article","FindBtn","LoginInputAndTitle","LoginInputText","LoginValidationListBox","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","google","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","accessToken","split","authorization","accept","email","verified_email","res2","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","password","nickName","user_photo","guestuserInfo","complevent","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","prevInput","prevText","assign","googleIcon","Auth","login","scope","success","response","API","request","kakao_account","profile","access_token","nickname","profile_image_url","fail","kakaoIcon","StyledLi","valid","edit","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","test","newPwdValid","SignUp","emailInput","emailVaildCode","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","codeOn","setCodeOn","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","indexOf","temporary_id","code","PhotoArea","FSArea","CurPage","MyPost","start","end","current","listLength","setListLength","dividNum","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Secret","Write","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","isFilteringBtnActive","setIsFilteringBtnActive","breezy","windy","strong","isFilteringBtnActive2","setIsFilteringBtnActive2","cold","hot","isFilteringBtnActive3","setIsFilteringBtnActive3","selectValueOuter","setSelectValueOuter","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","weatherFunc","select","weatherFunc2","weatherFunc3","random","min","parseFloat","toFixed","getRandomIntInclusive","floor","sFunc","LeftDiv","RightDiv","DeleteBtn","LikeBtn","Comment","commentDelete","click","setClick","comment_user_id","comment_content","comment_id","faHeart","PostHeader","Title","IconDiv","BookmarkIcon","KakaoBtn","Profile","WeatherInfo","Icon","TodayCodi","Post","CommentSection","PostComment","CommentList","PostRead","postIds","postData","setPostData","noIdWarning","setNoIdWarning","currentPostId","setBookmarked","bookmarked","params","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","getCommentList","commentMsg","setCommentMsg","commentList","setCommentList","commentId","replace","Link","sendDefault","objectType","description","imageUrl","link","mobileWebUrl","androidExecutionParams","buttons","dateObject","hourAndMin","toLocaleTimeString","hour12","substr","Contents","HalfPage","AnimatedP","p","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","LoadingContainer","hide","Loading","FirstPageContainer","FirstPage","ProfileName","UserPhotoDiv","UserPhotoImg","RoomChatDiv","RoomList","FriendInput","FriendInputAndBtn","FriendListDiv","io","connect","Messenger","prevmsg","setprevmsg","newMsgSection","setNewMsgSection","receiver_id","setreceiver_id","joinedRoom","setjoinedRoom","roomInOut","recievemessage","roomListClick","clickRoomName","room","joinRoom","Set","roomNamefunc","required","user_id_sort","sort","roomName","faPlusSquare","ChatList","socket","Messenger2","setroomName","curRoom","setcurRoom","msg","setmsg","msgevent","setmsgevent","setRoomInOut","on","msg2","roomlist","chatcontent","msgfunc","emit","faPaperPlane","opponent","MeDiv","YouDiv","ChatRoom","msgobj","newmsg","Div2","Div3","FindAccountModal","closeBtn","loginBtn","userId","userNickName","Form","FindAccount","findNickName","authEmail","authCode","inputFindInfo","setInputFindInfo","isOpen","setIsOpen","userData","setUserData","ChangeHanlder","Div4","ValidationMsg","FindPwModal","userEmail","newPw","againPw","inputNewPw","setInputNewPw","again","ChangeHanlderPw","newPwMsg","FindPassword","findId","GlobalStyle","createGlobalStyle","App","exact","path","to","initialState","selectWord","editPassword","homePost","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d40d909d.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\";\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\";\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\";\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\";\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\";\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\";\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\";\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\";\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\";\n\nexport const UPDATE_WEATHERINFO = \"UPDATE_WEATHERINFO\";\nexport const UPDATE_USER_POST = \"UPDATE_USER_POST\";\nexport const UPDATE_POST_ID = \"UPDATE_POST_ID\";\nexport const UPDATE_HOME_POST = \"UPDATE_HOME_POST\";\n\nexport const CHANGE_WHEATER_FILTER = \"CHANGE_WHEATER_FILTER\";\nexport const CHANGE_MAP_PAGE = \"CHANGE_MAP_PAGE\";\nexport const CHANGE_CURROOM = \"CHANGE_CURROOM\";\nexport const CHANGE_NEWMSGSECTION = \"CHANGE_NEWMSGSECTION\";\nexport const CURPAGE = \"CURPAGE\";\n\n// actions creator functions\n\nexport const changeNewMsgSection = (newmsg) => {\n  return {\n    type: CHANGE_NEWMSGSECTION,\n    payload: {\n      newmsg,\n    },\n  };\n};\nexport const changeCurRoom = (room) => {\n  return {\n    type: CHANGE_CURROOM,\n    payload: {\n      room,\n    },\n  };\n};\nexport const changeUser = (userinfo) => {\n  return {\n    type: CHANGE_USER_INFO,\n    payload: {\n      ...userinfo,\n    },\n  };\n};\nexport const updateCurrentPage = (current) => {\n  return {\n    type: UPDATE_CURRENT_PAGE,\n    payload: {\n      current,\n    },\n  };\n};\nexport const updateStartEndPage = (start, end) => {\n  return {\n    type: UPDATE_START_END_PAGE,\n    payload: {\n      start,\n      end,\n    },\n  };\n};\n\nexport const changeGender = (usergender) => {\n  return {\n    type: CHANGE_USER_GENDER,\n    payload: usergender,\n  };\n};\nexport const changeSearchword = (searchWord) => {\n  return {\n    type: CHANGE_SEARCH_WORD,\n    payload: searchWord,\n  };\n};\nexport const changeSelectword = (selectWord) => {\n  return {\n    type: CHANGE_SELECT_WORD,\n    payload: selectWord,\n  };\n};\nexport const changeIsLogin = (trueOrFalse) => {\n  return {\n    type: CHANGE_IS_LOGIN,\n    payload: trueOrFalse,\n  };\n};\n\nexport const changeUserPw = (pw) => {\n  return {\n    type: CHANGE_USER_PW,\n    payload: pw,\n  };\n};\n\nexport const changeCurLocation = (lat, lon) => {\n  return {\n    type: CHANGE_CUR_LOCATION,\n    payload: { lat: lat, lon: lon },\n  };\n};\n\nexport const updateWeatherInfo = (data) => {\n  return {\n    type: UPDATE_WEATHERINFO,\n    payload: {\n      data: data,\n    },\n  };\n};\n\nexport const userPosts = (postinfo) => {\n  return {\n    type: UPDATE_USER_POST,\n    payload: {\n      postinfo: postinfo,\n    },\n  };\n};\n\nexport const updatePostId = (pageId) => {\n  return {\n    type: UPDATE_POST_ID,\n    payload: pageId,\n  };\n};\n\nexport const homePost = (homePost) => {\n  return {\n    type: UPDATE_HOME_POST,\n    payload: {\n      homePost: homePost,\n    },\n  };\n};\nexport const changeWeatherFilter = (weatherFilter) => {\n  return {\n    type: CHANGE_WHEATER_FILTER,\n    payload: {\n      weatherFilter: weatherFilter,\n    },\n  };\n};\n\nexport const changeMapPage = (mapPage) => {\n  return {\n    type: CHANGE_MAP_PAGE,\n    payload: {\n      mapPage: mapPage,\n    },\n  };\n};\n\nexport const curPageAction = (curPage) => {\n  return {\n    type: CURPAGE,\n    payload: {\n      curPage: curPage,\n    },\n  };\n};\n","import styled from \"styled-components\";\n\nconst Spinner = styled.img`\n  width: ${(props) => props.size || \"50px\"};\n  height: ${(props) => props.size || \"50px\"};\n  animation: add-spin linear infinite reverse;\n  animation-duration: ${(props) => props.duration || \"2s\"};\n  opacity: 0.7;\n\n  position: relative;\n\n  left: 42.5%;\n\n  @media screen and (min-width: 1081px) {\n    width: ${(props) => props.size || \"100px\"};\n    height: ${(props) => props.size || \"100px\"};\n\n    position: relative;\n    left: 42.5%;\n  }\n`;\n\nexport default function LoadingSpinner({ size, duration }) {\n  return <Spinner src=\"img/spinner.png\" size={size} duration={duration} />;\n}\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  changeSearchword,\n  changeCurLocation,\n  updatePostId,\n} from \"../actions/index\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ImgContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: var(--mobile-page-height);\n\n  @media screen and (min-width: 1081px) {\n    height: var(--desktop-page-height);\n  }\n`;\nconst PostListModal = styled.div`\n  // border: 1px solid black;\n  // position: relative;\n  background-color: white;\n  z-index: 999;\n  // position: absolute;\n  position: fixed;\n  right: 0;\n  // bottom: 115px;\n  bottom: 110px;\n  width: 100%;\n  height: 50%;\n  overflow: auto;\n  padding: 0.5rem;\n  @media screen and (min-width: 1081px) {\n    background-color: white;\n    z-index: 999;\n    position: absolute;\n    right: 0;\n    bottom: 30px;\n    width: 35.3%;\n    height: 75%;\n    overflow: auto;\n  }\n`;\nconst SlideModal = styled.div`\n  // border: 1px solid black;\n  background-color: white;\n  z-index: 9999;\n  // position: absolute;\n  position: fixed;\n  right: 0;\n  // top: 0px;\n  bottom: 70px;\n  // bottom: 130%;\n  // bottom: ${(props) => props.bottom || \"52.9%\"};\n  width: 100%;\n  height: 40px;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1081px) {\n    background-color: white;\n    z-index: 9999;\n    position: absolute;\n    // position: fixed;\n    // right: 1%;\n\n    bottom: 0px;\n    // bottom: ${(props) => props.bottom || \"52.9%\"};\n    width: 35.3%;\n    height: 8%;\n    overflow: auto;\n    display: flex;\n    justify-content: center;\n  }\n`;\nconst GraphModal = styled.div`\n  // border: 1px solid black;\n  width: 50%;\n  display: flex;\n\n  @media screen and (min-width: 1081px) {\n    // border: 1px solid pink;\n  }\n`;\n\nconst GraphTitle = styled.div`\n  // border: 1px solid black;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  font-weight: bold;\n\n  @media screen and (min-width: 1081px) {\n  }\n`;\nconst GraphTitleDiv = styled.div`\n  // border: 1px solid black;\n  // margin: 1px;\n  // margin-top: 0.5rem;\n  // margin-bottom: 0.5rem;\n  width: 100%;\n  text-align: center;\n  // font-size: 0.8rem;\n  background-color: pink;\n\n  @media screen and (min-width: 1081px) {\n    // border: 1px solid pink;\n  }\n`;\nconst GraphTitleDiv2 = styled.div`\n  // border: 1px solid black;\n  // margin: 1px;\n  width: 100%;\n  text-align: center;\n  font-size: 0.8rem;\n\n  @media screen and (min-width: 1081px) {\n    // border: 1px solid pink;\n  }\n`;\nconst BarGraphFlex = styled.div`\n  // border: 1px solid black;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  // @media screen and (min-width: 1081px) {\n  //     border: 1px solid pink;\n  // }\n`;\nconst BarGraphchild = styled.div`\n  // border: 1px solid black;\n  width: 100%;\n\n  // @media screen and (min-width: 1081px) {\n  //     border: 1px solid pink;\n  // }\n`;\n\nexport default function Location({ bottom }) {\n  console.log(\"mapbox임\");\n  const { searchWord, weatherFilter } = useSelector(\n    (state) => state.itemReducer\n  );\n\n  const [isLoading, setisLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { kakao } = window;\n  const [weatherCount, setWeatherCount] = useState({\n    sunny: 0,\n    cloudy: 0,\n    rainy: 0,\n    snowy: 0,\n  }); //그래프 통계용\n  const [weatherApi, setweatherApi] = useState(0);\n  console.log(kakao);\n  const [postList, setPostList] = useState([\n    {\n      bottom_id: \"\",\n      createdAt: \"Z\",\n      id: null,\n      post_content: \"\",\n      post_photo: \"\",\n      post_title: \"예보가 없는 지역 입니다.\",\n      temp: \"\",\n      top_id: \"\",\n      updatedAt: \"\",\n      user_id: \"\",\n      weather: \"\",\n      wind: \"\",\n      xLocation: null,\n      yLocation: null,\n    },\n  ]);\n  console.log(weatherFilter);\n  let url = process.env.REACT_APP_LOCAL_URL || \"https://thereweather.space/api\";\n\n  //---------------\n  useEffect(() => {\n    var container = document.getElementById(\"map\");\n    var options = {\n      center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n      level: 3,\n    };\n    var map = new kakao.maps.Map(container, options); //지도를 생성\n    var zoomControl = new kakao.maps.ZoomControl(); //줌컨트롤 생성\n    map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT); //줌컨트롤 위치 조정\n    // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n\n        var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n          message = '<div style=\"font-align:center;\"> 현재 나의 위치</div>'; // 인포윈도우에 표시될 내용입니다\n\n        // 마커와 인포윈도우를 표시합니다\n        displayMarker(locPosition, message);\n        console.log(locPosition);\n\n        console.log(lat); //위도\n        console.log(lon); //경도\n        dispatch(changeCurLocation(lat, lon));\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n      var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n        message = \"geolocation을 사용할수 없어요..\";\n\n      displayMarker(locPosition, message);\n    }\n    // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n\n    function displayMarker(locPosition, message) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition,\n      });\n\n      var iwContent = message, // 인포윈도우에 표시할 내용\n        iwRemoveable = true;\n\n      // 인포윈도우를 생성합니다\n      var infowindow = new kakao.maps.InfoWindow({\n        content: iwContent,\n        removable: iwRemoveable,\n      });\n\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n\n      // 지도 중심좌표를 접속위치로 변경합니다\n      map.setCenter(locPosition);\n    }\n\n    // 주소-좌표 변환 객체를 생성합니다\n    var geocoder = new kakao.maps.services.Geocoder();\n\n    // 주소로 좌표를 검색합니다\n    geocoder.addressSearch(searchWord, function (result, status) {\n      // 정상적으로 검색이 완료됐으면\n      if (status === kakao.maps.services.Status.OK) {\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n        // 결과값으로 받은 위치를 마커로 표시합니다\n        // var marker = new kakao.maps.Marker({\n        //     map: map,\n        //     position: coords,\n        // })\n        // console.log(arguments)\n        // 인포윈도우로 장소에 대한 설명을 표시합니다\n        // var infowindow = new kakao.maps.InfoWindow({\n        //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n        // })\n        // infowindow.open(map, marker)\n\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n        dispatch(changeSearchword(searchWord));\n        map.setCenter(coords);\n      }\n    });\n\n    //클릭이벤트 함수\n    kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      var latlng = mouseEvent.latLng;\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      // marker.setPosition(latlng)\n      //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n      var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \";\n      message += \"경도는 \" + latlng.getLng() + \" 입니다\";\n      console.log(message);\n    });\n    //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n    var clusterer = new kakao.maps.MarkerClusterer({\n      map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n      averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n      minLevel: 9, // 클러스터 할 최소 지도 레벨\n    });\n\n    // 데이터를 가져오기 위해 jQuery를 사용합니다\n    // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n    $.get(\n      url + `/post/location?weather=${weatherFilter.weatherFilter}`,\n      function (data) {\n        // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n        // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n        // console.log(data)\n        // console.log($(data.positions))\n        // console.log($(data.positions[0]))\n\n        var markers = $(data.positions).map(function (i, position) {\n          return new kakao.maps.Marker({\n            position: new kakao.maps.LatLng(\n              position.xLocation,\n              position.yLocation\n            ),\n          });\n        });\n\n        console.log(markers);\n        console.log($(data.positions)[0]);\n        $(data.positions).map((n, idx) => {\n          console.log($(data.positions));\n          // $(data.positions).map((el) => {\n          //     console.log(el)\n          //     if ($(data.positions)[el].weather === \"sunny\") {\n          //         setWeatherCount({\n          //             ...weatherCount,\n          //             sunny: weatherCount.sunny + 1,\n          //         })\n          //     } else if ($(data.positions)[el].weather === \"cloudy\") {\n          //         setWeatherCount({\n          //             ...weatherCount,\n          //             cloudy: weatherCount.cloudy + 1,\n          //         })\n          //     } else if ($(data.positions)[el].weather === \"rainy\") {\n          //         setWeatherCount({\n          //             ...weatherCount,\n          //             rainy: weatherCount.rainy + 1,\n          //         })\n          //     } else if ($(data.positions)[el].weather === \"snowy\") {\n          //         setWeatherCount({\n          //             ...weatherCount,\n          //             snowy: weatherCount.snowy + 1,\n          //         })\n          //     }\n          // })\n\n          var iwContent = `\n                <container style=\"border:3px solid pink; padding:5px; height:20rem; width:15rem; display:flex; flex-direction: row; overflow: auto;\">\n                    <box style=\"\">\n                        <h3>${$(data.positions)[n].post_title}</h3>\n                            <box style=\"display:flex; flex-direction: row;\">\n                            \n                        ${\n                          $(data.positions)[n].weather === \"sunny\"\n                            ? \"<img src='img/icons-write/sunny.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].weather === \"cloudy\"\n                            ? \"<img src='img/icons-write/cloudy.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].weather === \"rainy\"\n                            ? \"<img src='img/icons-write/rainy.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].weather === \"snowy\"\n                            ? \"<img src='img/icons-write/snowy.png' style='width:2rem;'/>\"\n                            : null\n                        }\n                        ${\n                          $(data.positions)[n].wind === \"breezy\"\n                            ? \"<img src='img/icons-write/breezy.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].wind === \"windy\"\n                            ? \"<img src='img/icons-write/windy.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].wind === \"strong\"\n                            ? \"<img src='img/icons-write/strong.png' style='width:2rem;'/>\"\n                            : null\n                        }\n                        ${\n                          $(data.positions)[n].temp === \"cold\"\n                            ? \"<img src='img/icons-write/cold.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].temp === \"hot\"\n                            ? \"<img src='img/icons-write/hot.png' style='width:2rem;'/>\"\n                            : null\n                        }\n                        ${\n                          $(data.positions)[n].outer_id === \"가디건\"\n                            ? \"<img src='img/codi/가디건.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].outer_id === \"자켓\"\n                            ? \"<img src='img/codi/자켓.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].outer_id === \"얇은코트\"\n                            ? \"<img src='img/codi/얇은코트.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].outer_id === \"두꺼운코트\"\n                            ? \"<img src='img/codi/두꺼운코트.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].outer_id === \"패딩\"\n                            ? \"<img src='img/codi/패딩.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].outer_id === \"default\"\n                            ? \"<img src='img/codi/default.png' style='width:2rem;'/>\"\n                            : null\n                        }\n                        ${\n                          $(data.positions)[n].top_id === \"반팔\"\n                            ? \"<img src='img/codi/반팔.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].top_id === \"셔츠\"\n                            ? \"<img src='img/codi/셔츠.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].top_id === \"민소매\"\n                            ? \"<img src='img/codi/민소매.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].top_id === \"긴팔\"\n                            ? \"<img src='img/codi/긴팔.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].top_id === \"니트\"\n                            ? \"<img src='img/codi/니트.png' style='width:2rem;'/>\"\n                            : null\n                        }\n                        ${\n                          $(data.positions)[n].bottom_id === \"반바지\"\n                            ? \"<img src='img/codi/반바지.png' style='width:2rem;'/>\"\n                            : $(data.positions)[n].bottom_id === \"긴바지\"\n                            ? \"<img src='img/codi/긴바지.png' style='width:2rem;'/>\"\n                            : null\n                        }\n                        </box>\n                        <img src=${\n                          $(data.positions)[n].post_photo\n                        } style=\"padding:5px; max-height:100%; max-width:100%;\"></img>\n                        <div>${$(data.positions)[n].post_content}</div>\n                    </box>\n                </container>\n\n\n                             `, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n            iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n          // 인포윈도우를 생성합니다\n          var infowindow = new kakao.maps.InfoWindow({\n            content: iwContent,\n            removable: iwRemoveable,\n          });\n          kakao.maps.event.addListener(markers[n], \"click\", function () {\n            // 마커 위에 인포윈도우를 표시합니다\n            infowindow.open(map, markers[n]);\n          });\n        });\n\n        clusterer.addMarkers(markers);\n      }\n    );\n\n    let timer;\n    // 지도가 이동, 확대, 축소로 인해 지도영역이 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n    kakao.maps.event.addListener(map, \"idle\", function () {\n      setisLoading(false);\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(function () {\n        console.log(\"지도 위치가 변경 될 때마다 API요청\");\n        // setWeatherCount({\n        //     sunny: 0,\n        //     cloudy: 0,\n        //     rainy: 0,\n        //     snowy: 0,\n        // })\n        // 지도 영역정보를 얻어옵니다\n        var bounds = map.getBounds();\n\n        // 영역정보의 남서쪽 정보를 얻어옵니다\n        var swLatlng = bounds.getSouthWest();\n\n        // 영역정보의 북동쪽 정보를 얻어옵니다\n        var neLatlng = bounds.getNorthEast();\n\n        var message =\n          \"영역좌표는 남서쪽 위도, 경도는  \" + swLatlng.toString() + \"이고\";\n        message += \"북동쪽 위도, 경도는  \" + neLatlng.toString() + \"입니다 \";\n\n        // setTimeout(() => {\n        console.log(message);\n        console.log(swLatlng);\n        console.log(neLatlng);\n        axios({\n          url:\n            url +\n            `/post/list?top=${neLatlng.La}&bottom=${swLatlng.La}&left=${swLatlng.Ma}&right=${neLatlng.Ma}`,\n          // url: url + \"/signup\",\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // \"Content-Type\": \"text/plain\",\n          },\n          withCredentials: true,\n        }).then((res) => {\n          console.log(res.data);\n          setPostList(res.data);\n          console.log(postList);\n          let sunny = 0;\n          let cloudy = 0;\n          let rainy = 0;\n          let snowy = 0;\n          for (let n = 0; n < res.data.length; n++) {\n            if (res.data[n].weather === \"sunny\") {\n              sunny = sunny + 1;\n            } else if (res.data[n].weather === \"cloudy\") {\n              cloudy++;\n            } else if (res.data[n].weather === \"rainy\") {\n              rainy++;\n            } else if (res.data[n].weather === \"snowy\") {\n              snowy++;\n            }\n          }\n          setWeatherCount({\n            sunny: sunny,\n            cloudy: cloudy,\n            rainy: rainy,\n            snowy: snowy,\n          });\n        });\n\n        //지도중심좌표 기준으로 기상청 데이터를 받아올예정 -hoon\n        var latlng = map.getCenter();\n\n        axios({\n          url: url + `/map2?lat=${latlng.Ma}&lon=${latlng.La}`,\n          // url: url + \"/signup\",\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // \"Content-Type\": \"text/plain\",\n          },\n          withCredentials: true,\n        }).then((res) => {\n          console.log(res.data);\n          setweatherApi(res.data.fcstValue);\n        });\n      }, 1000);\n      setisLoading(true);\n    });\n  }, [\n    kakao.maps.LatLng,\n    kakao.maps.Marker,\n    kakao.maps.event,\n    kakao.maps.Map,\n    searchWord,\n    weatherFilter,\n  ]);\n\n  const Box = styled.div`\n    // display: flex;\n    // flex-direction: row;\n    width: 50%;\n    // height: 50%;\n    // border: 1px solid black;\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const Box2 = styled.div`\n    // display: flex;\n    // flex-direction: row;\n    // width: 10000px;\n\n    width: 50%;\n\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const EmoticonBox = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const PostTitle = styled.div`\n    // display: flex;\n    // flex-direction: row;\n\n    // border: 1px solid black;\n    text-align: center;\n    background-color: pink;\n    border-radius: 10%;\n\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const PostContent = styled.div`\n    // display: flex;\n    // flex-direction: row;\n\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const PostBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n\n    padding: 0.5rem;\n\n    &:hover {\n      background-color: #f5f5f5;\n    }\n\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const PostImg = styled.img`\n    width: 100%;\n    border-radius: 20%;\n\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const IconImg = styled.img`\n    width: 20%;\n    cursor: pointer;\n    @media screen and (min-width: 1081px) {\n    }\n  `;\n  const LoadingBoxDiv = styled.div`\n    position: relative;\n    transform: translate(-0%, -50%);\n    top: 50%;\n\n    @media screen and (min-width: 1081px) {\n      position: relative;\n      transform: translate(-0%, -50%);\n      top: 50%;\n    }\n  `;\n  const Button = styled.button`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    margin: 0.1rem;\n    // border: 1px solid black;\n  `;\n  console.log(weatherCount);\n  const data = {\n    labels: [\"맑음\", \"구름\", \"비\", \"눈\"],\n    datasets: [\n      {\n        data: [\n          weatherCount.sunny,\n          weatherCount.cloudy,\n          weatherCount.rainy,\n          weatherCount.snowy,\n        ],\n        backgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"silver\"],\n        hoverBackgroundColor: [\"yellow\", \"black\", \"blue\", \"#d9d9d9\"],\n      },\n    ],\n  };\n  const data2 = {\n    labels: [\"동네 예보\", \"기상청\"],\n    datasets: [\n      {\n        label: \"강수 확률\",\n        backgroundColor: \"#697cfa\",\n        borderColor: \"#0022ff\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\",\n        data: [\n          ((weatherCount.rainy + weatherCount.snowy) /\n            (weatherCount.sunny +\n              weatherCount.cloudy +\n              weatherCount.rainy +\n              weatherCount.snowy)) *\n            100,\n          weatherApi,\n        ],\n      },\n    ],\n  };\n\n  const [isOnOff, setisOnOff] = useState(true);\n\n  // postbox를 클릭하면 postread로 연결됩니다\n  const postBoxHandler = (e) => {\n    let elem = e.target;\n\n    while (!elem.classList.contains(\"postbox\")) {\n      elem = elem.parentNode;\n      if (elem.classList.contains(\"mapModal\")) {\n        elem = null;\n        return;\n      }\n    }\n\n    // console.log('**mapbox click id**',elem.id);\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n  // postbox를 클릭하면 postread로 연결됩니다\n\n  return (\n    <>\n      <ImgContainer id=\"map\"></ImgContainer>\n      {isOnOff ? (\n        <SlideModal>\n          <Button>\n            <FontAwesomeIcon\n              onClick={() => setisOnOff(false)}\n              icon={faChevronDown}\n            />\n          </Button>\n        </SlideModal>\n      ) : (\n        <SlideModal bottom={\"70px;\"}>\n          <Button>\n            <FontAwesomeIcon\n              onClick={() => setisOnOff(true)}\n              icon={faChevronUp}\n            />\n          </Button>\n        </SlideModal>\n      )}\n      {isOnOff ? (\n        <PostListModal>\n          {!isLoading ? (\n            <>\n              <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n              <GraphTitle>\n                <GraphTitleDiv2>동네 예보 날씨 비율</GraphTitleDiv2>\n                <GraphTitleDiv2>동네 예보 vs 기상청예보</GraphTitleDiv2>\n              </GraphTitle>\n              <LoadingBoxDiv>\n                <LoadingSpinner size={\"15%;\"} />\n              </LoadingBoxDiv>\n            </>\n          ) : (\n            <div className=\"mapModal\">\n              <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n              <GraphTitle>\n                <GraphTitleDiv2>동네 예보 날씨 비율</GraphTitleDiv2>\n                <GraphTitleDiv2>동네 예보 vs 기상청예보</GraphTitleDiv2>\n              </GraphTitle>\n              <GraphModal>\n                <Doughnut data={data} />\n                <BarGraphFlex>\n                  <BarGraphchild>\n                    <Bar data={data2} />\n                  </BarGraphchild>\n                </BarGraphFlex>\n              </GraphModal>\n              <GraphTitleDiv>동네 예보</GraphTitleDiv>\n              {postList.map((post) => {\n                return (\n                  // <PostBox onClick={() => console.log(post)}>\n                  <PostBox\n                    className=\"postbox\"\n                    onClick={postBoxHandler}\n                    key={post.id}\n                    id={post.id}\n                  >\n                    <Box className=\"box\">\n                      <PostImg\n                        className=\"postImage\"\n                        src={`${post.post_photo}`}\n                      />\n                      <EmoticonBox>\n                        <IconImg src={`/img/icons-write/${post.weather}.png`} />\n                        <IconImg src={`/img/icons-write/${post.wind}.png`} />\n                        <IconImg src={`/img/icons-write/${post.temp}.png`} />\n                        <IconImg src={`/img/codi/${post.outer_id}.png`} />\n                        <IconImg src={`/img/codi/${post.top_id}.png`} />\n                        <IconImg src={`/img/codi/${post.bottom_id}.png`} />\n                      </EmoticonBox>\n                    </Box>\n                    <Box2>\n                      <PostTitle>{`${post.post_title}`}</PostTitle>\n                      <PostContent>{`${post.post_content}`}</PostContent>\n                    </Box2>\n                  </PostBox>\n                );\n              })}\n            </div>\n          )}\n        </PostListModal>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport { changeMapPage } from \"../actions/index\"\n\nconst Container = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100%;\n\n    position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // max-width: 100%;\n        width: 100%;\n        position: relative;\n    }\n`\n\nexport default function Map() {\n    const dispatch = useDispatch()\n    console.log(\"map임\")\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    useEffect(() => {\n        dispatch(changeMapPage(true))\n    }, [])\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","// 스크롤 탑 버튼\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst Button = styled.div`\n  /* width: 100%; */\n  height: 200px;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: flex-end;\n  right: 0;\n  bottom: 0;\n  transition: all 0.3s;\n  display: none;\n  img{\n    width: 5rem;\n    height: 5rem;\n    margin-right: 2vh;\n    opacity: 0.7;\n    background-color: #FFFFFF;\n    border-radius: 50%;\n  }\n\n  @media screen and (max-width: 1081px) {\n    display: block;\n    height: 170px;\n    img{\n      width: 4rem;\n      height: 4rem;\n      margin-right: 3vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 130px;\n    img{\n      width: 3rem;\n      height: 3rem;\n      margin-right: 2vh;\n    }\n  }\n`\n\nexport default function TopButton() {\n  // top button\n  const [ScrollY, setScrollY] = useState(0);\n  const [btnStatus, setBtnStatus] = useState(false);  // 버튼 상태\n\n  // console.log(window.pageYOffset)\n  // console.log(btnStatus)\n\n  const handleFollow = () => {\n    setScrollY(window.scrollY)\n    if(ScrollY > 200){  // 200 이상이면 버튼이 보임\n      setBtnStatus(true)\n    }else{  // 200 이하일때 버튼이 사라짐\n      setBtnStatus(false)\n    }\n  }\n\n  // 클릭시 위로 올라감\n  const scrollToTop = () => {\n    // e.preventDefault() // 새로고침 방지\n    window.scrollTo({top: 0, behavior: 'smooth'}) // 위로 올라감\n    setScrollY(0);  // 올라가면 다시 0으로 초기화\n    setBtnStatus(false); // 버튼 다시 사라짐\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleFollow)\n    return () => {\n      window.removeEventListener('scroll', handleFollow)\n    }\n  })\n\n  return(\n    <Button>\n      {\n        btnStatus?\n        <img\n          src={`${process.env.PUBLIC_URL}img/scroll-up.png`} alt=\"top\"\n          onClick={scrollToTop}\n        /> : null\n      }\n    </Button>\n  )\n}","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; //리액트에서 사용가능하게 해줌\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\"; //내가 사용할 아이콘을 불러오기\n\nconst True = styled.div`\n  border-radius: 20px;\n  display: block;\n  background-color: pink;\n  width: 500px;\n  height: 100px;\n  z-index: 999999;\n  position: fixed;\n  transform: translate(-50%, -50%);\n\n  left: 50%;\n  top: 50%;\n`;\nconst False = styled.div`\n  display: none;\n`;\nconst BackgroundView = styled.div`\n  // background-color: black;\n  width: 100vw;\n  height: 100vh;\n  z-index: 199;\n  position: fixed;\n  transform: translate(-50%, -50%);\n  // opacity: 0.8;\n  left: 50%;\n  top: 50%;\n`;\nconst FlexArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\nconst FlexArea2 = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst FlexArea3 = styled.div`\n  margin-top: 35px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst DivTag1 = styled.div`\n  font-size: 20px;\n`;\n\nconst BtnTag1 = styled.button`\n  font-size: 20px;\n\n  &:hover {\n    background-color: blue;\n    color: red;\n  }\n`;\n\nexport default function OneChoiceModal({\n  boolean,\n  message,\n  yesMessage,\n  alertFunc,\n}) {\n  console.log(boolean);\n  console.log(yesMessage);\n\n  return (\n    <>\n      {boolean ? (\n        <BackgroundView>\n          <True>\n            <FlexArea3>\n              <FlexArea>\n                <FlexArea2>\n                  <FontAwesomeIcon\n                    icon={faExclamationCircle}\n                    className=\"mr-3\"\n                    size=\"2x\"\n                  />\n                  <DivTag1>{message}</DivTag1>\n                </FlexArea2>\n                <BtnTag1 onClick={alertFunc}>{yesMessage}</BtnTag1>\n              </FlexArea>\n            </FlexArea3>\n          </True>\n        </BackgroundView>\n      ) : (\n        <False>안보임</False>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport OneChoiceModal from \"./OneChoiceModal\";\n\nconst Outer = styled.div`\n  /* margin: 1.5rem; */\n  margin: 0 auto;\n  font-family: \"IBM Plex Sans KR\", sans-serif;\n\n  background-color: #ffffff;\n\n  height: 150px;\n\n  background-color: white;\n  /* display: flex; */\n  /* align-items: center; */\n\n  //모바일\n  @media screen and (max-width: 1080px) {\n    // background-color: red;\n    // margin-bottom: 2rem;\n    width: 100%;\n  }\n  @media screen and (max-width: 511px) {\n    // background-color: red;\n    // margin-bottom: 2rem;\n    width: 100%;\n  }\n`;\n\nconst GifTag = styled.img`\n  // width: 100%;\n  // margin-bottom: 5px;\n  // margin-left: -21px;\n  @media screen and (max-width: 1080px) {\n    display: none;\n  }\n`;\nconst ImgTag = styled.img`\n  width: 63px;\n  margin-bottom: 5px;\n  margin-left: -21px;\n  @media screen and (max-width: 1080px) {\n    display: none;\n  }\n`;\nconst IconTag = styled.img`\n  width: 20px;\n  margin-bottom: -2px;\n`;\nconst FlexRow1 = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 0 auto;\n  padding-top: 50px; // 수직 가운데추가\n`;\nconst FlexRow2 = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 7px;\n\n  & button {\n    font-weight: bold;\n    background-color: transparent;\n    color: black;\n\n    &:hover {\n      background-color: #fedcaa;\n    }\n  }\n`;\nconst DivTag1 = styled.div`\n  color: black;\n  font-weight: bold;\n  font-size: 14px;\n`;\nconst FlexColumn1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 1080px) {\n    margin-top: 1.5rem;\n    // display: none;\n  }\n`;\nconst FlexColumn2 = styled.div`\n  // display: flex;\n  // flex-direction: column;\n  @media screen and (max-width: 1080px) {\n    display: none;\n  }\n`;\nconst FlexColumn3 = styled.div`\n  // display: flex;\n  // flex-direction: column;\n  @media screen and (max-width: 1080px) {\n    display: none;\n  }\n`;\nconst FlexColumn4 = styled.div`\n  display: none;\n  // display: flex;\n  // flex-direction: column;\n  @media screen and (max-width: 1080px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst FlexCenter1 = styled.div`\n  display: flex;\n  // flex-direction: row;\n  justify-content: center;\n`;\n\nexport default function Footer(props) {\n  const [alertState, setalertState] = useState(false);\n  const [alertState2, setalertState2] = useState(false);\n  return (\n    <Outer className=\"footerComponent\">\n      <FlexRow1>\n        <FlexColumn2>\n          <GifTag src={\"../img/footerGif.gif\"} alt={\"\"} />\n          {/* <imgTag src={\"../img/footerGif.gif\"} alt={\"\"} /> */}\n\n          {/* <ImgTag src={\"../img/image3.png\"} alt={\"\"} /> */}\n        </FlexColumn2>\n        <FlexColumn3>\n          <FlexRow2>\n            <button\n              onClick={() => setalertState(true)}\n            >{`개인정보처리방침 `}</button>\n            <OneChoiceModal\n              boolean={alertState}\n              message={\"개인정보처리방침은 준비중입니다\"}\n              yesMessage={\"확인\"}\n              alertFunc={() => setalertState(false)}\n            ></OneChoiceModal>\n            <div>&nbsp;</div>\n            <DivTag1>{\"|\"}</DivTag1>\n            <div>&nbsp;</div>\n            <button onClick={() => setalertState2(true)}> 이용약관</button>\n            <OneChoiceModal\n              boolean={alertState2}\n              message={\"이용약관은 준비중입니다\"}\n              yesMessage={\"확인\"}\n              alertFunc={() => setalertState2(false)}\n            ></OneChoiceModal>\n          </FlexRow2>\n          <FlexCenter1>\n            <DivTag1>Copyright © For Real. All Rights Reserved.</DivTag1>\n          </FlexCenter1>\n        </FlexColumn3>\n        <FlexColumn1>\n          <DivTag1>\n            박경훈&nbsp;\n            <IconTag src={\"../img/git.png\"} alt={\"\"} />\n            <a\n              href=\"https://github.com/kingshuny\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Git\n            </a>{\" \"}\n            |&nbsp;\n            <IconTag src={\"../img/blog.png\"} alt={\"\"} />\n            <a\n              href=\"https://smartstyle.tistory.com\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Blog{\" \"}\n            </a>\n            |&nbsp;\n            <IconTag src={\"../img/email.png\"} alt={\"\"} />\n            nicecap77@gmail.com\n          </DivTag1>\n          <DivTag1>\n            오선화&nbsp;\n            <IconTag src={\"../img/git.png\"} alt={\"\"} />\n            <a\n              href=\"https://github.com/xuanhee16\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Git\n            </a>{\" \"}\n            |&nbsp;\n            <IconTag src={\"../img/blog.png\"} alt={\"\"} />\n            <a\n              href=\"https://xuanhee16.github.io\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Blog{\" \"}\n            </a>\n            |&nbsp;\n            <IconTag src={\"../img/email.png\"} alt={\"\"} />\n            xuanhee16@gmail.com\n          </DivTag1>\n          <DivTag1>\n            홍현정&nbsp;\n            <IconTag src={\"../img/git.png\"} alt={\"\"} />\n            <a\n              href=\"https://github.com/emily-hong\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Git\n            </a>{\" \"}\n            |&nbsp;\n            <IconTag src={\"../img/blog.png\"} alt={\"\"} rel=\"noreferrer\" />\n            <a\n              href=\"https://emilyhong4659.notion.site/emilyhong4659/Today-I-Learned-9f74900b637947199c72d1220cc3451d\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Blog{\" \"}\n            </a>\n            |&nbsp;\n            <IconTag src={\"../img/email.png\"} alt={\"\"} />\n            emilyhong4659@gmail.com\n          </DivTag1>\n        </FlexColumn1>\n      </FlexRow1>\n      <FlexColumn4>\n        <FlexRow2>\n          <button\n            onClick={() => alert(\"준비중 입니다.\")}\n          >{`개인정보처리방침 `}</button>\n          <div>&nbsp;</div>\n          <DivTag1>{\"|\"}</DivTag1>\n          <div>&nbsp;</div>\n          <button onClick={() => alert(\"준비중 입니다.\")}> 이용약관</button>\n        </FlexRow2>\n        <FlexCenter1>\n          <DivTag1>Copyright © For Real. All Rights Reserved.</DivTag1>\n        </FlexCenter1>\n      </FlexColumn4>\n    </Outer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateWeatherInfo, updatePostId } from \"../actions/index\";\nimport TopButton from \"../components/TopButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\n// import Loading from \"./Loading\";\nimport Footer from \"../components/Footer\";\nimport { compose } from \"redux\";\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  // height: 100vh;\n  // padding-right: 5vh;\n  background-color: var(--page-bg-color);\n  ul {\n    list-style: none;\n  }\n\n  @media screen and (min-width: 3000px) {\n    width: 80%;\n  }\n\n  @media screen and (min-width: 1500px) {\n    margin: 0 auto;\n    width: 90%;\n    border: 1px solid #aaa;\n  }\n  @media screen and (max-width: 1081px) {\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0 2vw;\n    border: 1px solid #aaa;\n    width: 85%;\n    height: 100%;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n  }\n`;\n\nconst FooterDiv = styled.div`\n  //모바일\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    //pc\n    display: block;\n  }\n`;\n\n// 날짜\nconst TodaysDate = styled.div`\n  background-color: var(--page-bg-color);\n  margin: 0 auto;\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #curDate {\n    padding-left: 2vw;\n  }\n  #curLocation {\n    padding-right: 2vw;\n  }\n\n  @media screen and (min-width: 1500px) {\n    width: 90%;\n    #curDate {\n      padding-left: 0;\n    }\n    #curLocation {\n      padding-right: 0;\n    }\n  }\n  @media screen and (max-width: 1081px) {\n    width: 85%;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n  }\n  @media screen and (max-width: 500px) {\n    font-size: 15px;\n  }\n  @media screen and (max-width: 375px) {\n    font-size: 12px;\n  }\n`;\n\n// 왼쪽 container\nconst LeftContainer1 = styled.div`\n  display: flex;\n  gap: 0.1rem;\n  // flex-direction: column;\n  flex-direction: row;\n  // justify-content: center;\n\n  // width: 80vw;\n  flex-wrap: wrap;\n  .weatherInfo {\n    text-align: center;\n    line-height: 3rem;\n    li {\n      align-items: center;\n    }\n    img {\n      width: 2rem;\n      height: 2rem;\n      vertical-align: middle;\n    }\n  }\n  .codiInfo {\n    text-align: center;\n  }\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n  @media screen and (max-width: 300px) {\n    img {\n      width: 3rem;\n      height: 3rem;\n    }\n  }\n`;\n\n// 00구 주민예보\nconst LeftNav1 = styled.nav`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 30px 5px 5px 5px;\n  padding: 10px;\n  line-height: 3vh;\n  height: 25%;\n  background-color: var(--page-bg-color);\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 1vh;\n  }\n  @media screen and (max-width: 1081px) {\n    margin-top: 5px;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 10px;\n    line-height: 4vh;\n    border-bottom: 1px solid #8e8e8e;\n  }\n`;\n// 기상청 일기예보\nconst LeftNav2 = styled.div`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 5px;\n  padding: 10px;\n  line-height: 3vh;\n  height: 35%;\n  background-color: var(--page-bg-color);\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 1vh;\n  }\n  @media screen and (max-width: 375px) {\n    line-height: 4vh;\n    border-bottom: 1px solid #8e8e8e;\n  }\n`;\n// 00구 날씨 기반 추천 코디\nconst LeftNav3 = styled.div`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 3px;\n  padding: 10px;\n  background-color: var(--page-bg-color);\n  height: 35%;\n  p {\n    font-size: 1.2rem;\n    margin: 2vh 0;\n  }\n  .codiInfo {\n    height: 80%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n  @media screen and (max-width: 1081px) {\n    height: 30vh;\n    flex-basis: 100vh;\n    flex-grow: 2;\n  }\n  @media screen and (max-width: 375px) {\n    p {\n      font-size: 1.2rem;\n      margin: 2vh 0;\n    }\n    .codiInfo {\n      /* border: 1px solid hotpink; */\n      height: 80%;\n      display: flex;\n      justify-content: space-around;\n      align-items: center;\n    }\n    @media screen and (max-width: 1081px) {\n      height: 30vh;\n      flex-basis: 100vh;\n      flex-grow: 2;\n    }\n    @media screen and (max-width: 375px) {\n      border-bottom: 1px solid #8e8e8e;\n      p {\n        font-size: 1rem;\n        margin: 1vh 0;\n      }\n    }\n  }\n`;\n// 코디 이미지\nconst Codi = styled.img`\n  width: 7rem;\n  height: 7rem;\n  border: purple;\n  @media screen and (max-width: 400px) {\n    width: 5rem;\n    height: 5rem;\n  }\n`;\n\n// 오른쪽 container\nconst RightContainer = styled.div`\n  display: grid;\n  /* height:100vh; */\n  width: 80vw;\n  grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-area: \"nav nav\" \"main main\" \"main main\";\n  grid-gap: 0.1rem;\n  transition: all 0.01s ease-in-out;\n  margin: 0 auto;\n\n  .userPost {\n    &:hover {\n      border-bottom: 1px solid #fafafa;\n    }\n  }\n\n  @media (max-width: 600px) {\n    .userPost:nth-last-child(1) {\n      display: none;\n    }\n    grid-template-rows: 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      \"nav\"\n      \"main\";\n  }\n  .userPost {\n    text-align: center;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\n// '00구 주민예보글'\nconst RightNav1 = styled.nav`\n  margin-top: 0.8rem;\n  text-align: center;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas: \"nav nav\";\n  grid-column: 1 / 4;\n  grid-row: 1 / 2;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1vh 1vh;\n  #location {\n    font-size: 1.5rem;\n    color: #8e8e8e;\n  }\n  #moreView {\n    color: #336fc9;\n  }\n  @media screen and (max-width: 600px) {\n    grid-column: 1 / 3;\n    #location {\n      font-size: 1rem;\n    }\n  }\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { item, curLocation } = useSelector((state) => state.itemReducer);\n  console.log(curLocation);\n  console.log(\"카카오 위도 : \", curLocation.lat); // map 페이지 거쳐야함\n  console.log(\"카카오 경도 : \", curLocation.lon);\n\n  // const { userInfo } = useSelector((state) => state.itemReducer)\n  // dispatch(changeUser(axiosData))\n\n  const [weatherData, setWeatherData] = useState();\n\n  useEffect(async () => {\n    console.log(curLocation);\n    if (curLocation.lat.length === 0) {\n      await history.push(\"/map\");\n      history.push(\"/home\");\n    }\n  }, []);\n\n  useEffect(async () => {\n    // await history.push(\"/map\");\n    // history.push(\"/home\");\n    // history.goBack();\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n        console.log(lat, lon); //브라우저에 찍힘\n        axios({\n          url: url + \"/map\",\n          method: \"post\",\n          data: { lat: lat, lon: lon },\n          withCredentials: true,\n        }).then((res) => {\n          //console.log(res.data)\n          //console.log(res.data.item)\n          setWeatherData(res.data);\n          dispatch(updateWeatherInfo(res.data));\n        });\n      });\n    }\n  }, []);\n\n  // 현재 위치 주소\n  const [curAddress, setcurAddress] = useState(\"\");\n  // 최근 게시물(위도, 경도, 지역범위 확인)\n  const [currentPosts, setcurrentPosts] = useState([]);\n  useEffect(() => {\n    console.log(navigator.geolocation);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = curLocation.lat, // 위도\n          lon = curLocation.lon; // 경도\n        // let lat = 37.3915567; // 위도\n        // lon = 126.7398173; // 경도\n        // 37.5525698 127.0783197\n        /*\n          소수 7째자리까지 : Math.floor(a * 10000000) /10000000\n\n          남서쪽 위도, 경도는  (37.5262196, 127.0449971)이고\n          북동쪽 위도, 경도는  (37.5684781, 127.1200016)입니다 \n        */\n\n        // left(37.5262196) , right(37.5684781) : 0.0422585(0.04225850000000264), 각 0.02112925\n        // bottom(127.0449971) , top(127.1200016) : 0.0750045(0.07500449999999148), 각 0.03750225\n        // 현재 위도, 경도의 동,서,남,북 범위 설정 (소수 7째자리까지)\n        let right = lat + 0.02112925;\n        let left = lat - 0.02112925;\n        let top = lon + 0.03750225;\n        let bottom = lon - 0.03750225;\n\n        console.log(right, left, top, bottom);\n\n        axios({\n          url: url + \"/home\",\n          method: \"post\",\n          data: {\n            lat: lat,\n            lon: lon,\n            right: right,\n            left: left,\n            top: top,\n            bottom: bottom,\n          },\n          withCredentials: true,\n        }).then((res) => {\n          // console.log('res : ', res.data.address);\n          console.log(\"address : \", res.data.address);\n          console.log(\"게시글 데이터 : \", res.data.curtPost);\n          setcurrentPosts(res.data.curtPost); // 주민예보글 렌더링 부분\n          setcurAddress(res.data.address);\n\n          // dispatch(homePost(res.data))\n        });\n      });\n    }\n  }, []);\n\n  // 날짜\n  const [todaysDate, settodaysDate] = useState(\"\");\n  useEffect(() => {\n    let date = new Date();\n    const formatDate = (currentDate) => {\n      let formatted = `${currentDate.getFullYear()}년 ${\n        currentDate.getMonth() + 1\n      }월 ${currentDate.getDate()}일`;\n      return formatted;\n    };\n    settodaysDate(formatDate(date));\n  });\n\n  // 날씨, 코디 가져오기, 추후 수정\n  let [currentTemp, setcurrentTemp] = useState(\"\");\n  let [currentWind, setcurrentWind] = useState(\"\");\n  let [currentWeather, setcurrentWeather] = useState(\"\");\n  let [currentOuter, setcurrentOuter] = useState(\"\");\n  let [currentTop, setcurrentTop] = useState(\"\");\n  let [currentBottom, setcurrentBottom] = useState(\"\");\n\n  useEffect(() => {\n    let tempArr = []; // 체감온도\n    let windArr = []; // 바람세기\n    let weatherArr = []; // 날씨상태\n    let outerArr = []; // 겉옷\n    let topArr = []; // 상의\n    let bottomArr = []; // 하의\n\n    // 해당 key만 가져오기\n    for (let i = 0; i < currentPosts.length; i++) {\n      tempArr.push(currentPosts[i].temp); // temp키만 가져옴\n      windArr.push(currentPosts[i].wind);\n      weatherArr.push(currentPosts[i].weather);\n\n      outerArr.push(currentPosts[i].outer_id);\n      topArr.push(currentPosts[i].top_id);\n      bottomArr.push(currentPosts[i].bottom_id);\n    }\n\n    // 해당 키의 중복개수세는 함수\n    function getCount(arr) {\n      return arr.reduce((pv, cv) => {\n        pv[cv] = (pv[cv] || 0) + 1;\n        return pv;\n      }, {});\n    }\n\n    let tempObj = getCount(tempArr); // {hot: 6, cold: 3}\n    let windObj = getCount(windArr);\n    let weatherObj = getCount(weatherArr);\n    let outerObj = getCount(outerArr);\n    let topObj = getCount(topArr);\n    let bottomObj = getCount(bottomArr);\n\n    // 최대값구하기 : 객체 -> 배열\n    let newTempArr = Object.values(tempObj); // [6, 3]\n    let newWindArr = Object.values(windObj);\n    let newWeatherArr = Object.values(weatherObj);\n    let newOuterArr = Object.values(outerObj);\n    let newTopArr = Object.values(topObj);\n    let newBottomArr = Object.values(bottomObj);\n    // 최대값\n    let tempMaxNum = Math.max(...newTempArr); // 6\n    let windMaxNum = Math.max(...newWindArr);\n    let weatherMaxNum = Math.max(...newWeatherArr);\n    let outerMaxNum = Math.max(...newOuterArr);\n    let topMaxNum = Math.max(...newTopArr);\n    let bottomMaxNum = Math.max(...newBottomArr);\n\n    // 최대값과 일치하는 key 추출\n    function matchKey(obj, maxNum) {\n      // 객체, 최대값\n      for (let key in obj) {\n        if (obj[key] === maxNum) {\n          return key;\n        }\n      }\n    }\n\n    // 화면에 나타날 key\n    let maxTemp = matchKey(tempObj, tempMaxNum);\n    let maxWind = matchKey(windObj, windMaxNum);\n    let maxWeather = matchKey(weatherObj, weatherMaxNum);\n    let maxOuter = matchKey(outerObj, outerMaxNum);\n    let maxTop = matchKey(topObj, topMaxNum);\n    let maxBottom = matchKey(bottomObj, bottomMaxNum);\n\n    setcurrentTemp(maxTemp);\n    setcurrentWind(maxWind);\n    setcurrentWeather(maxWeather);\n    setcurrentOuter(maxOuter);\n    setcurrentTop(maxTop);\n    setcurrentBottom(maxBottom);\n\n    console.log(\"currentTemp : \", currentTemp);\n    console.log(\"currentWind : \", currentWind);\n    console.log(\"currentWeather : \", currentWeather);\n    console.log(\"outer : \", currentOuter); // 안나옴\n  });\n\n  // 게시물 사진 클릭\n  const photoClickHandler = (e) => {\n    // console.log(e.target.id); // 게시물id 전달\n    let elem = e.target;\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  return (\n    <div className=\"homecontainer\">\n      {/* <Loading /> */}\n      <TopButton />\n      <TodaysDate>\n        <p id=\"curDate\">날짜 : {todaysDate}</p>\n        <p id=\"curLocation\">위치 : {curAddress}</p>\n      </TodaysDate>\n      <HomeContainer>\n        <LeftContainer1 className=\"LeftContainer1\">\n          <LeftNav1>\n            <p>주민예보</p>\n            <div className=\"weatherInfo\">\n              {currentTemp === undefined &&\n              currentWind === undefined &&\n              currentWeather === undefined ? (\n                <p>현재 날씨 데이터가 없습니다 :(</p>\n              ) : (\n                <ul>\n                  <li>\n                    <span>체감온도 </span>\n                    <img\n                      src={`${process.env.PUBLIC_URL}img/icons-write/${currentTemp}.png`}\n                      alt=\"온도\"\n                    />\n                  </li>\n                  <li>\n                    <span>체감바람 </span>\n                    <img\n                      src={`${process.env.PUBLIC_URL}img/icons-write/${currentWind}.png`}\n                      alt=\"바람\"\n                    />\n                  </li>\n                  <li>\n                    <span>날씨 </span>\n                    <img\n                      src={`${process.env.PUBLIC_URL}img/icons-write/${currentWeather}.png`}\n                      alt=\"날씨\"\n                    />\n                  </li>\n                </ul>\n              )}\n            </div>\n          </LeftNav1>\n          <LeftNav2>\n            {/* <p>기상청 일기예보</p>\n                      { weatherData && weatherData.item.map((info, index) => {\n                        return (\n                          <div className=\"weatherInfo\" key={index}>\n                           <ul>\n                            <li className=\"weathers date\">날짜: {info.baseDate[0]}</li> \n                            <li className=\"weathers time\">기준 예보시각: {info.baseTime[0]}</li> \n                           </ul>\n                          </div>\n\n                        )\n                      })} */}\n            <p>기상청 예보</p>\n            <div className=\"weatherInfo\">\n              <ul>\n                {/* {console.log(weatherData.item)}  */}\n                {/* weatherData -> {item: Array(30)}, weatherData.item -> [ baseDate: '20211106',baseTime: '2130',category: 'T1H', fcstDate: '20211107', fcstTime: '0300', fcstValue: '10', nx: 59, ny: 128, ... ] */}\n                {/* { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>날짜:{info.baseDate}</li> })[0] }\n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>기준 예보시각: {info.baseTime}</li> })[0] }\n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 기온: {info.fcstValue}℃</li> })[24] } \n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 바람세기: {info.fcstValue  < \"9\" ? \"바람세기 약하거나 약간 강함\" : info.fcstValue  < \"14\" ? \"바람세기 강함\" : \"바람세기 매우 강함\" }</li> })[54] } \n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 날씨상태: {info.fcstValue === \"0\" ? \"맑음\" : info.fcstValue === \"1\" ? \"비\" : info.fcstValue === \"3\" ? \"눈\" : info.fcstValue === \"5\" ? \"빗방울\" : \"눈날림\" }</li> })[6] }  */}\n\n                {/* {weatherData &&\n                  weatherData.item.map((info) => {\n                    return <li key={nanoid()}>날짜:{info.baseDate}</li>;\n                  })[0]} */}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return (\n                      <li key={nanoid()}>\n                        예보시각: {info.baseTime.substring(0, 2)}시\n                        {info.baseTime.substring(2)}분\n                      </li>\n                    );\n                  })[0]}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return <li key={nanoid()}>기온: {info.fcstValue}℃</li>;\n                  })[24]}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return (\n                      <li key={nanoid()}>\n                        바람:{\" \"}\n                        {info.fcstValue < \"9\" ? (\n                          <img\n                            src={`${process.env.PUBLIC_URL}img/icons-write/breezy.png`}\n                            alt=\"온도\"\n                          />\n                        ) : info.fcstValue < \"14\" ? (\n                          <img\n                            src={`${process.env.PUBLIC_URL}img/icons-write/windy.png`}\n                            alt=\"온도\"\n                          />\n                        ) : (\n                          <img\n                            src={`${process.env.PUBLIC_URL}img/icons-write/strong.png`}\n                            alt=\"온도\"\n                          />\n                        )}\n                      </li>\n                    );\n                  })[54]}\n                {weatherData &&\n                  weatherData.item.map((info) => {\n                    return (\n                      <li key={nanoid()}>\n                        날씨:{\" \"}\n                        {info.fcstValue === \"0\"\n                          ? \"맑음\"\n                          : info.fcstValue === \"1\"\n                          ? \"비\"\n                          : info.fcstValue === \"3\"\n                          ? \"눈\"\n                          : info.fcstValue === \"5\"\n                          ? \"빗방울\"\n                          : \"눈날림\"}\n                      </li>\n                    );\n                  })[6]}\n              </ul>\n            </div>\n          </LeftNav2>\n          <LeftNav3>\n            <p>날씨 기반 추천 코디</p>\n            <div className=\"codiInfo\">\n              {currentOuter === undefined ||\n              currentTop === undefined ||\n              currentBottom === undefined ? (\n                <p>\n                  현재 위치 데이터가 없습니다. 현재위치의 첫 게시물을\n                  올려보세요👍\n                </p>\n              ) : (\n                <>\n                  <Codi\n                    src={`${process.env.PUBLIC_URL}img/codi/${currentOuter}.png`}\n                    alt=\"겉옷\"\n                  ></Codi>\n                  <Codi\n                    src={`${process.env.PUBLIC_URL}img/codi/${currentTop}.png`}\n                    alt=\"상의\"\n                  ></Codi>\n                  <Codi\n                    src={`${process.env.PUBLIC_URL}img/codi/${currentBottom}.png`}\n                    alt=\"하의\"\n                  ></Codi>\n                </>\n              )}\n            </div>\n          </LeftNav3>\n        </LeftContainer1>\n        <RightContainer>\n          <RightNav1>\n            <span id=\"location\">주민 예보글</span>\n          </RightNav1>\n          {currentPosts.map((el) => (\n            <div className=\"userPost\" key={el.id}>\n              <img src={el.post_photo} id={el.id} onClick={photoClickHandler} />\n            </div>\n          ))}\n        </RightContainer>\n      </HomeContainer>\n      <FooterDiv>\n        <Footer></Footer>\n      </FooterDiv>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\"\n\nexport const Bookmark = ({ like, bookmarkHandler, color }) => {\n    return (\n        <button className=\"bookmarkContainer\" onClick={bookmarkHandler}>\n            <FontAwesomeIcon\n                icon={faBookmark}\n                className=\"bookmark\"\n                size=\"3x\"\n                color={color}\n            />\n        </button>\n    )\n}\n\n// 사용 예시\n// const [bookmarked, setBookmarked] = useState(false);\n// const bookmarkHandler = (e) => {\n//   setBookmarked(prev => !prev);\n// }\n// <Bookmark bookmarkHandler={bookmarkHandler} color={bookmarked ? '#eb425b' : '#aaa'}/>\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst PaginationContainer = styled.div.attrs({\n  className: \"pagination\"\n})`\n  margin-bottom: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #A1A1A1;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst PageNumbersList = styled.ul.attrs({\n  className: \"pageNumbersList\"\n})`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  list-style-type: none;\n  padding: 0 1rem;\n`;\n\nconst ArrowButton = styled.span.attrs({\n  className: \"arrow\"\n})`\n  &:hover {\n    color: black;\n  }\n`;\n\nconst PageNumberItem = styled.li.attrs({\n  className: \"pageNumberItem\"\n})`\n  padding: 0 1rem;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport default function Pagination({dataLength, itemsPerPage, numberButtonClickHandler}) {\n  const numberOfPages = Math.ceil(dataLength / itemsPerPage); // 총 페이지 수\n  const numberArr = new Array(numberOfPages).fill(0).map((el, idx) => idx + 1); // 1~총페이지 수로 채워진 배열\n  let unit;\n  if (numberOfPages < 5) {\n    unit = numberOfPages+1;\n  } else {\n    unit = 5;\n  }\n  const [startIdx, setStartIdx] = useState(0);\n  const [lastIdx, setLastIdx] = useState(unit);\n  const cutArrInit = new Array(unit).fill(0).map((el, idx) => idx + 1);\n  const [cutArr, setCutArr] = useState(cutArrInit);\n\n  const prevHandler = () => {\n    if(startIdx === 0) return;\n    setStartIdx(prev => prev - unit);\n    setLastIdx(prev => prev - unit);\n  }\n\n  const nextHandler = () => {\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(lastIdx === tempIdxEnd) return;\n    setStartIdx(prev => prev + unit);\n    setLastIdx(prev => prev + unit);\n  }\n\n  useEffect(()=>{\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(startIdx >= itemsPerPage || lastIdx <= tempIdxEnd) {\n      const result = numberArr.slice(startIdx, lastIdx);\n      setCutArr(prev => result);\n    }\n  }, [startIdx, lastIdx])\n\n  return (\n    <PaginationContainer>\n      <ArrowButton className=\"prevButton\" onClick={prevHandler}>\n        ⬅️\n      </ArrowButton>\n      <PageNumbersList>\n        {\n          cutArr.map(number => {\n            return (\n              <PageNumberItem\n                key={number}\n                id={number}\n                onClick={() => {\n                  numberButtonClickHandler(number);\n                }}\n              >\n                {number}\n              </PageNumberItem>\n            );\n          })\n        }\n      </PageNumbersList>\n      <ArrowButton className=\"nextButton\" onClick={nextHandler}>\n        ➡️\n      </ArrowButton>\n    </PaginationContainer>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { Bookmark } from \"../components/BookMarks\";\nimport { updatePostId } from \"../actions/index\";\nimport { useHistory } from \"react-router\";\nimport { default as PaginationWithArrow } from \"../components/Pagination\";\nimport Footer from \"../components/Footer\";\n/*\n  [수정]\n  - 페이지네이션\n  - 주석 정리\n  - 레이아웃 정리\n  - 클릭이벤트\n  - import 주석 정리\n*/\n\nconst Outer = styled.div`\n  // 데스크탑\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  min-height: 100vh;\n  // padding-top: 100px;\n\n  @media screen and (max-width: 1081px) {\n    // 1081 이하일 때 // 모바일\n    // padding-top: 3vh;\n  }\n`;\nconst FooterDiv = styled.div`\n  //모바일\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    //pc\n    display: block;\n  }\n`;\n\n// 그리드\nconst Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n  grid-template-columns: repeat(2, 40vw);\n  margin: 5rem;\n  // grid-template-rows: 3fr 3fr;\n  // grid-template-columns: 1fr 1fr;\n  // grid-template-areas:\n  // \"div div\"\n  // \"div div\";\n  /* height: 83vh; */\n  // (max-width: 600px)\n  // margin-left: 3vw;\n  // margin-right: 3vw;\n  /* overflow: auto; */\n\n  .BookMarkContainer {\n    gap: 0.2rem;\n    background-color: rgba(255, 255, 255, 0.6);\n    display: flex;\n    justify-content: space-around;\n    border: 1px solid #dbdbdb;\n    border-radius: 3px;\n  }\n\n  @media (max-width: 1081px) {\n    margin: 3rem 2rem;\n    gap: 2rem;\n    grid-template-columns: 80vw;\n    // grid-template-rows: 1fr 1fr 1fr 1fr;\n    // grid-template-columns: 1fr;\n    grid-template-areas: \"div\";\n  }\n\n  @media (max-width: 400px) {\n    margin: 1rem;\n    grid-auto-rows: 500px;\n    gap: 0;\n    .BookMarkContainer {\n      height: 80%;\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`;\n\n// const BookMarkContainer = styled.div`\n//   background-color: rgba(255, 255, 255, 0.6);\n//   display: flex;\n//   gap: 0.1rem;\n//   justify-content: space-around;\n//   border: 1px solid #dbdbdb;\n//   border-radius: 3px;\n// `;\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n  // flex-basis: 30rem;\n  .postItem {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .postPicture {\n    margin: 1rem 2rem 1rem 1rem;\n    padding: 0;\n    height: 25vh;\n    align-items: center;\n  }\n  .postImg {\n    margin: 0.5rem;\n    width: 250px;\n    height: 250px;\n  }\n  .postImg:hover {\n    transform: scale(1.05);\n    transition: 0.5s ease-in-out;\n  }\n  @media screen and (max-width: 1081px) {\n    .postPicture {\n      height: 20vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    .postPicture {\n      margin: 0;\n    }\n  }\n`;\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n  margin: 1rem;\n  line-height: 3rem;\n  flex-direction: column;\n  flex-basis: 15rem;\n  justify-content: flex-start;\n  .postTitle {\n    font-weight: bold;\n    font-size: 2rem;\n  }\n  .postDate {\n    font-size: 1.5rem;\n  }\n  .postWeather {\n    /* font-size: 1.5rem; */\n    width: 3rem;\n    height: 3rem;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 1081px) {\n    line-height: 2rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    margin: 0.1rem 0 0 0.5rem;\n    line-height: 1.4rem;\n    .postTitle {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n    .postDate {\n      font-size: 1rem;\n    }\n    .postWeather {\n      font-size: 0.5rem;\n      width: 30px;\n      height: 30px;\n    }\n  }\n`;\n\nconst BookMarkIcon = styled(Bookmark)`\n  float: right;\n\n  & .heart {\n    cursor: pointer;\n    color: #aaa;\n  }\n`;\n\n//북마크가 없습니다.\nconst Waring = styled.div`\n  font-weight: bold;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\n// 페이지네이션\nconst Pagination = styled.div`\n  background-color: #fafafa;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10vh;\n  /* margin: 2rem; */\n  list-style: none;\n\n  button {\n    font-size: 1.5rem;\n    margin: 0 1vw;\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 2vh;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 5vh;\n    padding-bottom: 3vh;\n    button {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst PrevPage = styled.div``;\n\nconst PageNumber = styled.div`\n  li {\n    float: left;\n    margin: 1rem;\n  }\n  button {\n    font-size: 1.5rem;\n  }\n  @media screen and (max-width: 375px) {\n    li {\n      margin: 0;\n    }\n    button {\n      margin: 0 2vw;\n      font-size: 1rem;\n    }\n  }\n`;\nconst Img1 = styled.img`\n  max-width: 500px;\n`;\nconst Div1 = styled.div`\n  font-size: 30px;\n`;\n\nconst NextPage = styled.div``;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function BookMark() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { userInfo, readPostId, postInfo } = useSelector(\n    (state) => state.itemReducer\n  );\n  const [bookmarkList, setBookmarkList] = useState([]);\n\n  // console.log(userInfo)\n  // console.log(readPostId)\n  // console.log(postInfo)\n  const postId = Number(readPostId);\n  //console.log(postId)\n\n  useEffect(() => {\n    axios({\n      // url: url + `/bookmarklist?searchID=${userInfo.user_id}&&searchPost=${postId}`,\n      // url: url + `/bookmarklist?searchID=${userInfo.user_id}`,\n      // method: \"get\",\n      url: url + \"/bookmarklist\",\n      method: \"post\",\n      data: {\n        user_id: userInfo.id,\n        post_id: postId,\n        post_info: postInfo,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    }).then((res) => {\n      // console.log(\"**res.data bookmarkList**\", res.data)\n      setBookmarkList(res.data);\n    });\n  }, [userInfo]);\n\n  //console.log(bookmarkList)\n\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    return `${dateOnly}`;\n  };\n\n  const postClickHandler = (e) => {\n    //\"PostBookMarkList\"\n    let elem = e.target;\n    while (!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if (!elem.classList.contains(\"BookMarkContainer\")) {\n        break;\n      }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      // pathname: '/postread',\n      pathname: \"/bookmarkpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  // 시작 - 페이지네이션 변수들\n  const [currentPage, setCurrentPage] = useState(1);\n  // 1페이지로 시작\n  const itemsPerPage = 6;\n  // 한 페이지에 8개씩 보여준다\n  const lastIdx = currentPage * itemsPerPage;\n  const firstIdx = lastIdx - itemsPerPage;\n  const slicedData = (dataArr) => {\n    return dataArr.slice(firstIdx, lastIdx);\n  };\n  // 끝 - 페이지네이션 변수들\n  // const target = arr.slice(start, end)\n  console.log(bookmarkList);\n  return (\n    <Outer>\n      {/* {bookmarkList === [] ?\n      <Waring>\"북마크가 없습니다.\"</Waring> : */}\n      {bookmarkList.length === 0 ? (\n        <>\n          <Img1 src=\"img/bookmarkdefault.png\" alt=\"logo\" />\n          <Div1>북마크가 없어요</Div1>\n        </>\n      ) : (\n        <Container>\n          {bookmarkList &&\n            bookmarkList.map((el) => {\n              {\n                /* {bookmarkList && slicedData(bookmarkList).map((el) => { */\n              }\n              return (\n                <div className=\"BookMarkContainer\" key={el.id}>\n                  <BookMarkPhoto>\n                    <div\n                      className={[\"postItem\"]}\n                      id={el.id}\n                      onClick={postClickHandler}\n                      key={el.id}\n                    >\n                      <img\n                        className=\"postImg\"\n                        key={el.id}\n                        src={el.post_photo}\n                        alt=\"posts\"\n                      />\n                    </div>\n                  </BookMarkPhoto>\n                  <BookMarkList>\n                    <div className=\"test\" key={el.id}>\n                      <p className=\"postDate\">{formatDate(el.createdAt)}</p>\n                      <p className=\"postWeather sky\"> {el.weather} </p>\n                      <p className=\"postWeather wind\">{el.wind} </p>\n                      <p className=\"postWeather temp\">{el.temp} </p>\n                    </div>\n                  </BookMarkList>\n                </div>\n              );\n            })}\n        </Container>\n      )}\n\n      {/* : <Waring>\"북마크가 없습니다.\"</Waring>} */}\n\n      {/* 시작 - 페이지네이션 새로 추가 */}\n      <PaginationWithArrow\n        // dataLength={bookmarkList.length} // 본래\n        dataLength={6} // 테스트용\n        itemsPerPage={8}\n        numberButtonClickHandler={setCurrentPage}\n      />\n      {/* 끝 - 페이지네이션 새로 추가 */}\n      <FooterDiv>\n        <Footer></Footer>\n      </FooterDiv>\n    </Outer>\n  );\n}\n","import react, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faHeart,\n  faMapMarkerAlt,\n  faPencilAlt,\n  faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\";\nconst Outer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  z-index: 100;\n  /* position: sticky; */\n  // position: fixed;\n  left: ;\n  right: 0;\n  bottom: 0;\n\n  display: none;\n  @media screen and (min-width: 1081px) {\n    width: 1080px;\n    display: block;\n  }\n`;\n\nconst Buttons = styled.div`\n  background-color: WHITE;\n  height: 70px;\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 101;\n  // border-top: 1px solid #dbdbdb;\n\n  @media screen and (min-width: 1081px) {\n    // position: fixed;\n    background-color: white;\n    // border-top: 1px solid #dbdbdb;\n    // border-left: 1px solid #dbdbdb;\n    // position: fiexd;\n    width: 400px;\n    margin-left: 20px;\n    // display: none;\n  }\n`;\n\nconst Button1 = styled.button`\n  padding: 0.5rem;\n  // margin: 0.5rem;\n  margin: 1rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/home.png\");\n  }\n`;\nconst Button2 = styled.button`\n  padding: 0.5rem;\n  // margin: 0.5rem;\n  margin: 1rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/bookmark.png\");\n  }\n`;\nconst Button3 = styled.button`\n  padding: 0.5rem;\n  // margin: 0.5rem;\n  margin: 1rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/location.png\");\n  }\n`;\nconst Button4 = styled.button`\n  padding: 0.5rem;\n  // margin: 0.5rem;\n  margin: 1rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/pencil.png\");\n  }\n`;\nconst Button5 = styled.button`\n  padding: 0.5rem;\n  // margin: 0.5rem;\n  margin: 1rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/setting.png\");\n  }\n`;\nexport default function MenuBarPC() {\n  const [url1, setUrl1] = useState(\"img/home0.png\");\n  const [curClick, setCurClick] = useState(\"\");\n  const history = useHistory();\n  const [selectBtn, setSelectBtn] = useState(\"\");\n  return (\n    <Outer className=\"menuBar\">\n      <Buttons>\n        {/*\n                    <Link to='/mainpage'>\n                    <Button>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Button>\n                    </Link>\n                */}\n        <Button1>\n          {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/homeorlogin\")}\n                        icon={faHome}\n                    /> */}\n          <img src={url1} onClick={() => history.push(\"/homeorlogin\")} />\n        </Button1>\n        <Button2>\n          {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                        icon={faHeart}\n                    /> */}\n          <img\n            src=\"https://img.icons8.com/ios/45/000000/bookmark-ribbon--v1.png\"\n            onClick={() => history.push(\"/bookmarkorlogin\")}\n          />\n        </Button2>\n        <Button3>\n          {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/map\")}\n                        icon={faMapMarkerAlt}\n                    /> */}\n          <img\n            src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n            onClick={() => history.push(\"/map\")}\n          />\n        </Button3>\n        <Button4>\n          {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/writeorlogin\")}\n                        icon={faPencilAlt}\n                    /> */}\n          <img\n            src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n            onClick={() => history.push(\"/writeorlogin\")}\n          />\n        </Button4>\n        <Button5>\n          {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                        icon={faUserAlt}\n                    /> */}\n          <img\n            src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n            onClick={() => history.push(\"/moreoruserinfo\")}\n          />\n        </Button5>\n      </Buttons>\n    </Outer>\n  );\n}\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSun,\n  faCloud,\n  faCloudRain,\n  faPooStorm,\n  faSnowflake,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  changeIsLogin,\n  changeSearchword,\n  changeWeatherFilter,\n} from \"../actions/index\";\nimport React, { useState, useEffect } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport MenuBarPC from \"../components/MenuBarPC\";\n\nconst HeaderOuter = styled.div`\n  width: 100vw;\n  height: 125px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  padding: 1rem;\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  border-bottom: 0.5px solid #dbdbdb;\n\n  h1 {\n    font-weight: bold;\n    font-size: 2.5rem;\n    margin: 0;\n    padding: 0;\n  }\n\n  @media screen and (min-width: 1081px) {\n    width: 100vw;\n    background-color: white;\n    flex-direction: row;\n    justify-content: space-around;\n  }\n  @media screen and (max-width: 375px) {\n    /* border: 1px solid red;  // 확인용 */\n  }\n`;\n\nconst Wing = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    display: flex;\n    flex-growth: 1;\n    align-items: center;\n    justify-content: center;\n    width: 20vw;\n  }\n`;\n\nconst TitleAndLogo = styled.div`\n  display: ${(props) => (props.isMobileLogo ? \"flex\" : \"none\")};\n  justify-content: center;\n  align-items: center;\n  color: #231f20;\n\n  & img {\n    width: 20%;\n    margin-right: 0.5rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    display: flex;\n    flex-growth: 1;\n    align-items: center;\n    justify-content: center;\n    width: 20vw;\n  }\n`;\n\nconst Center = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-width: 350px;\n  justify-content: space-around;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    flex-growth: 2;\n    width: 60vw;\n  }\n`;\n\nconst InputAndSubmit = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    margin: auto 1rem;\n  }\n  @media screen and (max-width: 1081px) {\n    div {\n      margin: 0;\n    }\n  }\n`;\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n  position: absolute;\n  top: 50px;\n  border: 1px solid #e0e0e0;\n  @media screen and (max-width: 1081px) {\n    top: 32px;\n  }\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem;\n  font-size: 1.2rem;\n  text-align: center;\n  background-color: var(--page-bg-color);\n  border: 0.5px solid #dbdbdb;\n  border-radius: 3px;\n\n  @media screen and (min-width: 1081px) {\n    width: 300px;\n  }\n  @media screen and (max-width: 375px) {\n    width: 220px;\n    height: 30px;\n    font-size: 1rem;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg:hover {\n    color: red;\n  }\n\n  @media screen and (max-width: 375px) {\n    button {\n      width: 35px;\n      height: 35px;\n      font-size: 20px;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\n  color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n  font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n  padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n  margin: 0.5rem;\n  border-radius: 10%;\n`;\n\nconst Button3 = styled.button`\n  // width: 140px;\n  // height: 45px;\n  // font-size: 11px;\n  font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n  font-family: \"IBM Plex Sans KR\", sans-serif;\n\n  padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n  margin: 0.5rem;\n  border-radius: 10%;\n  color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n  background-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\n  text-transform: uppercase;\n  letter-spacing: 2.5px;\n  font-weight: 500;\n  color: #000;\n  background-color: #fff;\n  // border:3px solid pink;\n  // border: none;\n  border-radius: 45px;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\n    transform: translateY(-4px);\n\n    @media screen and (max-width: 1081px) {\n      // 임시 추가\n      display: none;\n    }\n  }\n`;\nconst Buttons3 = styled.button`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 1081px) {\n    // 임시 추가\n    display: none;\n  }\n`;\n// const SearchBarAndDaumPost = styled.div`\n//     // display: flex;\n//     // flex-direction: row;\n//     position: relative;\n//     margin: \"100px solid green\";\n// `\n// const DaumPostcodeWrap = styled.div`\n//     height: 3.5rem;\n//     width: 100%;\n//     // padding-right: 2.5rem;\n// `\nconst Cancel = styled.button`\n  // height: 3.5rem;\n  // width: 100%;\n  // padding-right: 2.5rem;\n  margin-bottom: 0.5rem;\n  font-size: 0.8rem;\n  /* padding: 0.3rem; */\n`;\n\nconst Buttons2 = styled.div`\n  background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n  color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n  font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n  padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n  margin: 0.5rem;\n  border-radius: 10%;\n  @media screen and (max-width: 1081px) {\n    padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n  }\n  @media screen and (max-width: 375px) {\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n    height: 2rem;\n  }\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function Header({ isInput, isMobileLogo, isText }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { isLogin, mapPage } = useSelector((state) => state.itemReducer);\n  //console.log(mapPage);\n  const [searchEvent, setSearchEvent] = useState(\"\");\n  //검색창에 사용할 포커스변수-hoon\n  const [onFocus, setOnFocus] = useState(false);\n  //console.log(\"헤더는 찍히나?\");\n  // const [postOnFocus, setOnFocus] = useState(false)\n\n  // isInput : Map 페이지 사용시 true\n  // isMobileLogo : Map 페이지 사용시 false\n  function handleComplete(e) {\n    console.log(e);\n    setSearchEvent(e.roadAddress);\n    setOnFocus(false);\n  }\n  const [weatherFilter, setweatherFilter] = useState(\"\");\n  useEffect(() => {\n    setweatherFilter(weatherFilter);\n    dispatch(changeWeatherFilter(weatherFilter));\n\n    console.log(weatherFilter);\n  }, [weatherFilter]);\n\n  const logoutBtnHandler = (e) => {\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    axios\n      .post(\n        url + \"/signout\",\n        { data: null },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `token ${token}`,\n          },\n          withCredentials: true,\n        }\n      )\n      .then((res) => {\n        localStorage.clear();\n        dispatch(changeIsLogin(false));\n        history.push(\"/\");\n      });\n  };\n\n  return (\n    <HeaderOuter className=\"header\">\n      {/* <MenuBar></MenuBar> */}\n\n      <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n        <img onClick={() => history.push(\"/\")} src=\"img/img6.png\" alt=\"logo\" />\n        <h2 onClick={() => history.push(\"/\")}>There Weather</h2>\n      </TitleAndLogo>\n      {isInput ? (\n        <Center className=\"headerCenter\">\n          <InputAndSubmit className=\"inputAndSubmit\">\n            <Input\n              // onClick={(e) => console.log(e)}\n              onChange={(e) => setSearchEvent(e.target.value)}\n              type=\"text\"\n              placeholder=\"위치 검색\"\n              value={searchEvent}\n              // ref={inputRef}\n              // onClick={onRest}\n              onFocus={(e) => setOnFocus(true)}\n            />\n            <Buttons2 bgGrey>\n              {onFocus ? (\n                <Cancel onClick={() => setOnFocus(false)}>Cancel</Cancel>\n              ) : (\n                <FontAwesomeIcon\n                  onClick={() => {\n                    dispatch(changeSearchword(searchEvent));\n                    history.push(\"/map\");\n                  }}\n                  icon={faSearch}\n                />\n              )}\n            </Buttons2>\n            {/* <SearchBarAndDaumPost> */}\n            {/* <DaumPostcodeWrap> */}\n\n            {/* </DaumPostcodeWrap> */}\n            {/* </SearchBarAndDaumPost> */}\n          </InputAndSubmit>\n          {onFocus ? (\n            <StyledPostCode\n              className=\"daumPostCodeContainer\"\n              onComplete={handleComplete}\n            />\n          ) : (\n            <></>\n          )}\n          {mapPage.mapPage ? (\n            // <Buttons className=\"headerButtons\">\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"sunny\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"sunny\");\n            //     }}\n            //     isText={weatherFilter === \"sunny\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faSun} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"cloudy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"cloudy\");\n            //     }}\n            //     isText={weatherFilter === \"cloudy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faCloud} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"rainy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"rainy\");\n            //     }}\n            //     isText={weatherFilter === \"rainy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faCloudRain} />\n            //   </Button>\n            //   <Button\n            //     onClick={() => {\n            //       if (weatherFilter === \"snowy\") {\n            //         return setweatherFilter(\"\");\n            //       }\n            //       return setweatherFilter(\"snowy\");\n            //     }}\n            //     isText={weatherFilter === \"snowy\" ? true : false}\n            //   >\n            //     <FontAwesomeIcon icon={faSnowflake} />\n            //   </Button>\n            // </Buttons>\n            <div></div>\n          ) : (\n            <>\n              <div></div>\n            </>\n          )}\n        </Center>\n      ) : (\n        <Center className=\"headerCenter\" />\n      )}\n      <MenuBarPC></MenuBarPC>\n      {isLogin ? (\n        <Buttons3 className=\"loginAndSingupButtons\">\n          {/* className=\"login\" isText */}\n          <Button3 className=\"login\" onClick={logoutBtnHandler} isText>\n            logOut\n          </Button3>\n          <Button3\n            onClick={() => history.push(\"/mypage\")}\n            className=\"signup\"\n            isText\n          >\n            mypage\n          </Button3>\n        </Buttons3>\n      ) : (\n        <Buttons3 className=\"loginAndSingupButtons\">\n          <Button3\n            onClick={() => history.push(\"/login\")}\n            className=\"login\"\n            isText\n          >\n            logIn\n          </Button3>\n          <Button3\n            onClick={() => history.push(\"/signup\")}\n            className=\"signup\"\n            isText\n          >\n            signUp\n          </Button3>\n        </Buttons3>\n      )}\n    </HeaderOuter>\n  );\n}\n","import react, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faHeart,\n  faMapMarkerAlt,\n  faPencilAlt,\n  faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\";\nconst Outer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  z-index: 100;\n  /* position: sticky; */\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  @media screen and (min-width: 1081px) {\n    width: 1080px;\n  }\n`;\n\nconst Buttons = styled.div`\n  background-color: WHITE;\n  height: 70px;\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 101;\n  border-top: 1px solid #dbdbdb;\n\n  @media screen and (min-width: 1081px) {\n    // position: fixed;\n    // background-color: white;\n    // border-top: 1px solid #dbdbdb;\n    // border-left: 1px solid #dbdbdb;\n    // position: fiexd;\n    // width: 400px;\n    display: none;\n  }\n`;\n\nconst Button1 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/home.png\");\n  }\n`;\nconst Button2 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/bookmark.png\");\n  }\n`;\nconst Button3 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/location.png\");\n  }\n`;\nconst Button4 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/pencil.png\");\n  }\n`;\nconst Button5 = styled.button`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  font-size: 2rem;\n  img:hover {\n    filter: opacity(0.2) drop-shadow(0 0 0 red);\n    background: url(\"img/setting.png\");\n  }\n`;\nexport default function MenuBar() {\n  const [url1, setUrl1] = useState(\"img/home0.png\");\n  const [curClick, setCurClick] = useState(\"\");\n  const history = useHistory();\n  const [selectBtn, setSelectBtn] = useState(\"\");\n  return (\n    <Outer className=\"menuBar\">\n      <Buttons>\n        <Button1>\n          <img src={url1} onClick={() => history.push(\"/homeorlogin\")} />\n        </Button1>\n        <Button2>\n          <img\n            src=\"https://img.icons8.com/ios/45/000000/bookmark-ribbon--v1.png\"\n            onClick={() => history.push(\"/bookmarkorlogin\")}\n          />\n        </Button2>\n        <Button3>\n          <img\n            src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n            onClick={() => history.push(\"/map\")}\n          />\n        </Button3>\n        <Button4>\n          <img\n            src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n            onClick={() => history.push(\"/writeorlogin\")}\n          />\n        </Button4>\n        <Button5>\n          <img\n            src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n            onClick={() => history.push(\"/moreoruserinfo\")}\n          />\n        </Button5>\n      </Buttons>\n    </Outer>\n  );\n}\n","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n\n    &:hover {\n        border: 1px solid #fec0cb;\n        p {\n            color: #fec0cb;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n\n                <InfoBox>\n                    <button onClick={() => history.push(\"/messenger\")}>\n                        <p>메신져</p>\n                    </button>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport React, { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { changeMapPage } from \"../actions/index\"\nimport { useDispatch } from \"react-redux\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: calc(100vh - 125px);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    // border: 1px solid #dbdbdb;\n    border: 1px solid black;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        // border: 1px solid #262626;\n        border: 1px solid pink;\n        p {\n            // color: #262626;\n            color: pink;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nexport default function More() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .5rem;\n  font-size: 1.2rem;\n  border-radius: .5rem;\n  background-color: var(--modal-confirm-button-bg);\n\n  &:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\n/*\n    [수정]\n    - 위치 잡는 코드가 약간 바뀌었어요... (position, display)\n*/\n\nconst Button = styled.button`\n    /* top: 90vh; */\n    top: 1.5vh;\n    left: 0;\n    position: fixed;\n    z-index:100;\n    // border-radius: 50%;\n    display: none;\n    padding: 1rem 1rem 1rem .3rem;\n\n    .fa-fw {\n        font-size: 50px;\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { changeIsLogin, userPosts, updatePostId } from \"../actions/index\";\nimport GoBackButton from \"../components/GoBackButton\";\nimport Footer from \"../components/Footer\";\n/*\n    [수정]\n    - 페이지네이션 추가\n    - 주석, console.log 정리\n*/\n\nconst Outer = styled.div`\n  background-color: var(--page-bg-color);\n  width: 100vw;\n  min-height: calc(100vh - 125px);\n  position: relative;\n  display: flex;\n  padding-bottom: 100px;\n\n  @media screen and (max-width: 1081px) {\n    flex-direction: column;\n    min-height: calc(100vh - 125px - 70px);\n  }\n`;\nconst FooterDiv = styled.div`\n  //모바일\n  display: none;\n\n  @media screen and (min-width: 1081px) {\n    //pc\n    display: block;\n  }\n`;\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n  width: 30%;\n  padding: 15vh 1vw 1vh 1vw;\n  text-align: center;\n  button {\n    // 비밀번호 수정, 회원탈퇴\n    color: #336fc9;\n    font-size: 1.5rem;\n    margin-top: 1vh;\n  }\n  .mediaBox {\n    margin-top: 2vh;\n    margin-bottom: 2vh;\n    p {\n      margin-top: 1vh;\n    }\n    #user-name {\n      font-size: 1.5rem;\n      font-weight: bold;\n    }\n    #user-changeInfo {\n      color: #336fc9;\n    }\n  }\n\n  @media screen and (max-width: 1081px) {\n    /* border-bottom: 1px solid #aaa;  // 구분선 추가 */\n    margin: 0 auto;\n    margin-top: 4vh;\n    width: 100%;\n    padding: 0 1vw 3vh 1vw;\n    .mediaBox {\n      width: 40%;\n      display: inline-block;\n      text-align: left;\n      p {\n        margin-top: 2vh;\n        justify-content: center;\n        line-height: 3vh;\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 375px) {\n    button {\n      font-size: 1rem;\n    }\n    .mediaBox {\n      width: 50%;\n      display: inline-block;\n      padding-bottom: 1vh;\n      p {\n        margin-top: 0;\n        justify-content: center;\n        font-size: 1rem;\n      }\n      #user-name {\n        font-size: 1rem;\n      }\n    }\n  }\n`;\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n  width: 200px;\n  height: 200px;\n  padding: 10px 10px;\n  border-radius: 50%;\n  @media screen and (max-width: 1081px) {\n    margin-right: 5vw;\n  }\n  @media screen and (max-width: 375px) {\n    width: 7rem;\n    height: 7rem;\n  }\n`;\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n  height: 10vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-end;\n  text-decoration: none;\n\n  button {\n    font-size: 1.2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 100vw; // 가운데로 맞춤\n    align-items: center;\n    height: 10vh;\n    position: absolute;\n    bottom: 0;\n  }\n  @media screen and (max-width: 375px) {\n    padding: 0 15vw;\n    height: 20vh;\n    justify-content: space-between;\n    button {\n      font-size: 1rem;\n    }\n  }\n`;\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n  width: 100vw;\n  padding: 2vh 3vw 2vh 5vw;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 200px 1fr 1fr;\n\n  row-gap: 10px; /* row의 간격을 10px로 */\n  column-gap: 20px; /* column의 간격을 20px로 */\n  // border-top: 1px solid #aaa; // 구분선 추가 // header와 외곽선이 겹쳐서 주석처리합니다 ㅜㅜ\n\n  .item:nth-child(1) {\n    border: none;\n    grid-column: 1 / 4;\n    grid-row: 1 / 2;\n  }\n\n  div {\n    background-color: rgba(255, 255, 255, 0.5); // 추가\n  }\n  div:hover {\n    border: 1px solid var(--page-bg-color);\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  .more {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    background-color: transparent;\n  }\n  p {\n    font-size: 2rem;\n    margin: 0 auto;\n    font-weight: bold;\n    color: #8e8e8e;\n  }\n  .moreView {\n    font-size: 1.5rem;\n    color: #336fc9;\n    width: 5vw;\n  }\n\n  @media screen and (max-width: 1380px) {\n    .moreView {\n      font-size: 1.4rem;\n      width: 6vw;\n    }\n  }\n\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    margin-bottom: 10vh;\n    padding: 0;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 100px 300px 300px;\n    row-gap: 5px;\n    column-gap: 3px;\n\n    p {\n      font-size: 2rem;\n    }\n    .item {\n      margin: 0.5vh;\n    }\n    .moreView {\n      width: 80px;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    padding-left: 2vw;\n    padding-right: 2vw;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 50px 150px 150px 150px;\n    .item:nth-child(1) {\n      border: none;\n      grid-column: 1 / 3;\n      grid-row: 1 / 2;\n    }\n    p {\n      font-size: 1rem;\n    }\n    .moreView {\n      font-size: 1rem;\n      width: 50px;\n      height: 3rem;\n    }\n  }\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) {\n  url = \"https://thereweather.space/api\";\n}\n\nexport default function MyPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { isLogin, userInfo, postInfo, readPostId } = useSelector(\n    (state) => state.itemReducer\n  );\n  console.log(userInfo); //정보잘넘어옴\n  console.log(postInfo.postinfo);\n  console.log(readPostId);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [removeUser, setremoveUser] = useState(false);\n\n  const [currentPosts, setcurrentPosts] = useState([]);\n  console.log(currentPosts);\n\n  const [noIdWarning, setNoIdWarning] = useState(\"\");\n  //   useEffect(async () => {\n  //     console.log(postInfo.postinfo);\n  //     if (postInfo.postinfo === undefined) {\n  //       await history.push(\"/userinfo\");\n  //       history.push(\"/mypage\");\n  //     }\n  //   }, []);\n  // 게시물 데이터 조회\n  useEffect(() => {\n    axios({\n      url: url + `/mypage?searchID=${userInfo.user_id}`,\n      method: \"get\",\n      withCredentials: true,\n    }).then((res) => {\n      setcurrentPosts(res.data);\n      dispatch(userPosts(res.data));\n    });\n    // setcurrentPosts(postInfo.postinfo);\n  }, [userInfo]);\n\n  // 정보수정\n  const changeUserInfo = () => {\n    //console.log(\"정보수정 클릭\")\n    history.push(\"/edituserinfo\");\n  };\n\n  const removeUserInfo = () => {\n    setIsModalOpen(true);\n  };\n\n  const modalYesButtonHandlers = () => {\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    axios\n      .delete(url + \"/removeuser\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `token ${token}`,\n        },\n        withCredentials: true,\n      })\n      .then((res) => {\n        localStorage.clear(token);\n        dispatch(changeIsLogin(false));\n        history.push(\"/\");\n      });\n    //setIsModalOpen(false)\n  };\n\n  const modalNoButtonHandler = () => {\n    setIsModalOpen(false);\n  };\n  const modalCloseButtonHandler = () => {\n    setIsModalOpen(false);\n  };\n\n  // 게시물 클릭했을 때\n  const postClickHandler = (e) => {\n    let elem = e.target;\n    while (!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if (!elem.classList.contains(\"myPagePostList\")) {\n        break;\n      }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  // 더보기\n  const moreViewHandler = () => {\n    history.push(\"/mypost\");\n  };\n\n  return (\n    <>\n      <Outer>\n        <GoBackButton />\n        <ProfileArea>\n          <ProfileImg src={userInfo.user_Photo} />\n          <div className=\"mediaBox\">\n            <p id=\"user-name\">{userInfo.user_id}</p>\n            <p id=\"user-gender\">{userInfo.gender === 1 ? \"남성\" : \"여성\"}</p>\n            <p id=\"user-location\">나의 위치 : {userInfo.location}</p>\n            <p id=\"user-changeInfo\" onClick={changeUserInfo}>\n              정보수정\n            </p>\n          </div>\n          <ButtonArea>\n            <button onClick={() => history.push(\"/editpassword\")}>\n              비밀번호 수정\n            </button>\n            <button onClick={removeUserInfo}>회원탈퇴</button>\n            {isModalOpen === false ? null : (\n              <ModalConfirm\n                yesHandler={modalYesButtonHandlers}\n                noHandler={modalNoButtonHandler}\n                closeHandler={modalCloseButtonHandler}\n              >\n                <p>탈퇴하시겠습니까?</p>\n                <p>이유를 선택해 주세요</p>\n                <select name=\"pets\" id=\"pet-select\">\n                  <option value=\"\">선택</option>\n                  <option value=\"notUseful\">사용을 많이 하지 않음</option>\n                  <option value=\"inconvenientDesign\">디자인이 불편함</option>\n                  <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n                  <option value=\"andSoForth\">기타</option>\n                </select>\n              </ModalConfirm>\n            )}\n          </ButtonArea>\n        </ProfileArea>\n\n        <GridArea className=\"myPagePostList\">\n          <div className=\"item more\">\n            <p>내가 쓴 예보</p>\n          </div>\n          {currentPosts.map((el) => (\n            <div\n              className={[\"item\", \"postItem\"]}\n              id={el.id}\n              onClick={postClickHandler}\n              key={el.id}\n            >\n              <img src={el.post_photo} alt=\"posts\" />\n            </div>\n          ))}\n          <button className=\"moreView\" onClick={moreViewHandler}>\n            더 보기\n          </button>\n        </GridArea>\n      </Outer>\n      <FooterDiv>\n        <Footer></Footer>\n      </FooterDiv>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/kakaoIcon.6af80cbc.png\";","export default __webpack_public_path__ + \"static/media/googleIcon.cadee8cd.png\";","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { changeIsLogin, changeMapPage } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport kakaoIcon from \"../../src/LoginIcon/kakaoIcon.png\"\nimport googleIcon from \"../../src/LoginIcon/googleIcon.png\"\nconst { Kakao } = window\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100%;\n    min-height: calc(var(--mobile-page-height) - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n\n    @media screen and (max-width: 711px) {\n        .Login--center {\n            width: 70%;\n        }\n        h2 {\n            font-size: 1.5rem;\n            margin: 1rem auto;\n        }\n    }\n    @media screen and (max-width: 711px) {\n        .Login--center {\n            width: 100%;\n        }\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst FindBtn = styled.button`\n    font-size: 1rem;\n    margin: 3rem 14.5rem 0 14.5rem;\n\n    @media screen and (max-width: 711px) {\n        margin: 3rem 0 0 0;\n        span {\n            display: block;\n            margin: 0.5rem;\n        }\n    }\n`\n\nconst LoginInputAndTitle = styled.div`\n    margin: 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 70%;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n\n        @media screen and (max-width: 711px) {\n            font-size: 1rem;\n        }\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 70%;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    li {\n        text-align: center;\n        &:nth-child(3) {\n            margin-top: 1rem;\n        }\n\n        p {\n            margin: 0 auto;\n            padding-left: 1rem;\n            color: var(--font-validation-negative);\n            width: 70%;\n            text-align: left;\n        }\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n    img {\n        margin: 1rem;\n        width: 3.5rem;\n        height: 3.5rem;\n    }\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: black;\n    background-color: pink;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n        color: white;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n\n    @media screen and (max-width: 711px) {\n        margin: 0 0 1rem 0;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #ea4335;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = process.env.REACT_APP_CLIENTURL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n    clientUrl = \"https://thereweather.space\"\n}\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    // console.log(url)\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] =\n        useState(\"아이디를 입력하세요..\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    //console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                //console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                //console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n\n    function kakaoLoginHandler() {\n        alert(\n            \"카카오 로그인시 원활한 접속을 위해 전체수신 동의 부탁드립니다:) \"\n        )\n        const scope = \"profile_image, gender, profile_nickname, account_email\"\n        Kakao.Auth.login({\n            scope,\n            success: function (response) {\n                //console.log(response);\n                //Kakao.Auth.setAccessToken(response.access_token)\n                //console.log(`get accesstoken: ${Kakao.Auth.getAccessToken()}`)\n                //let ACCESS_TOKEN = Kakao.Auth.getAccessToken();\n                //사용자 정보가져오기\n                Kakao.API.request({\n                    url: \"/v2/user/me\",\n                    success: function ({ kakao_account }) {\n                        //console.log(kakao_account)\n                        const { email, profile } = kakao_account\n                        let gender = kakao_account.gender !== \"female\" ? 1 : 2\n                        //console.log(gender)\n                        axios({\n                            url: url + \"/kakaologin\",\n                            method: \"post\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                authorization: response.access_token,\n                            },\n                            data: {\n                                user_id: email,\n                                nickName: profile.nickname,\n                                gender: gender,\n                                user_Photo: profile.profile_image_url,\n                            },\n                        })\n                            .then((res) => {\n                                // console.log(res)\n                                localStorage.setItem(\n                                    \"ATOKEN\",\n                                    JSON.stringify(res.data.data.accessToken)\n                                )\n                                dispatch(changeIsLogin(true))\n                                alert(\"환영합니다\")\n                                history.push(\"/\")\n                            })\n                            .catch((err) => {\n                                console.log(err)\n                                alert(\"카카오 로그인 에러\")\n                            })\n                    },\n                })\n            },\n            fail: function (error) {\n                console.log(error)\n            },\n        })\n    }\n\n    //아이디 찾기\n    function findIdBtn() {\n        //   console.log(\"아이디 찾기 버튼\")\n        history.push(\"/findaccount\")\n    }\n\n    //비밀번호 찾기\n    function findPwBtn() {\n        console.log(\"비밀번호 찾기 버튼\")\n        history.push(\"/findpassword\")\n    }\n\n    //회원가입 바로가기\n    function signupShortcut() {\n        history.push(\"/signup\")\n    }\n\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        //console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        //console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        //console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n    const [guestuserInfo, setGuestUserInfo] = useState({\n        user_id: \"guest\",\n        password: \"!23qwe\",\n        nickName: \"게스트\",\n        gender: \"1\",\n        location: \"제주특별자치도 서귀포시 가가로 14\",\n        user_photo: `${url.slice(0, -3)}/image/blankProfile.png`,\n        email: \"guestmail@naver.com\",\n    })\n    function guestloginButtonHandler() {\n        axios({\n            url: url + \"/users/signup\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: guestuserInfo,\n            \"Content-Type\": \"application/json\",\n            withCredentials: true,\n        }).then((res) => {\n            axios({\n                url: url + \"/login\",\n                method: \"post\",\n                data: {\n                    user_id: guestuserInfo.user_id,\n                    password: guestuserInfo.password,\n                },\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n                .then((res) => {\n                    //console.log(res.data.data)\n                    localStorage.setItem(\n                        \"ATOKEN\",\n                        JSON.stringify(res.data.data.accessToken)\n                    )\n                    dispatch(changeIsLogin(true))\n                    alert(\"환영합니다\")\n                    history.push(\"/\")\n                })\n                .catch((err) => {\n                    // setErrMessage(\"아이디 또는 비밀번호를 확인하세요\")\n                })\n        })\n    }\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <div className=\"Login--center\">\n                        <LoginValidationListBox>\n                            <li>\n                                <h2>로그인</h2>\n                                <LoginStyledArticle className=\"id\">\n                                    <LoginInputAndTitle className=\"inputIdSection\">\n                                        <h3>아이디</h3>\n                                        <LoginInputText\n                                            type=\"text\"\n                                            name=\"idInput\"\n                                            placeholder=\"아이디를 입력하세요\"\n                                            value={idInput}\n                                            onChange={loginidOnChangeHanlder}\n                                        />\n                                    </LoginInputAndTitle>\n                                </LoginStyledArticle>\n                            </li>\n                            <li>\n                                <p>{idInputMessage}</p>\n                            </li>\n\n                            <li>\n                                <LoginStyledArticle className=\"password\">\n                                    <LoginInputAndTitle className=\"inputPwSection\">\n                                        <h3>비밀번호</h3>\n                                        <LoginInputText\n                                            type=\"password\"\n                                            name=\"pwInput\"\n                                            placeholder=\"비밀번호를 입력하세요\"\n                                            value={pwInput}\n                                            onChange={pwOnChangeHandler}\n                                        />\n                                    </LoginInputAndTitle>\n                                </LoginStyledArticle>\n                            </li>\n                            <li>\n                                <p>{pwInputMessage}</p>\n                            </li>\n                        </LoginValidationListBox>\n\n                        <FindBtn>\n                            <span onClick={findIdBtn}>아이디 찾기 | </span>\n                            <span onClick={findPwBtn}>비밀번호 찾기 | </span>\n                            <span onClick={signupShortcut}>회원가입</span>\n                        </FindBtn>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n                        <LoginButton onClick={guestloginButtonHandler}>\n                            게스트로그인\n                        </LoginButton>\n                        <div>\n                            {/* 구글 소셜로그인 */}\n                            <button onClick={googleLoginButtonHandler}>\n                                <img src={googleIcon}></img>\n                            </button>\n                            {/* 카카오 소셜로그인 */}\n                            <button onClick={kakaoLoginHandler}>\n                                <img src={kakaoIcon}></img>\n                            </button>\n                        </div>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","\nimport styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport axios from \"axios\"\nimport { changeUserPw } from \"../actions/index\"\n\n\n\nconst Outer = styled.section`\n  position: relative;\n  width: 100vw;\n  min-height: calc(100vh - 125px - 70px);\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    text-align: center;\n    font-size: 1.8rem;\n    font-weight: bold;\n    margin-bottom: 2rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    min-height: calc(100vh - 125px);\n  }\n`;\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst InputAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // margin: .5rem;\n\n  h3 {\n    font-size: 1.3rem;\n    margin: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst InputText = styled.input`\n  min-width: 150px;\n  width: 30vw;\n  font-size: 1.2rem;\n  padding: 0.5rem;\n`;\n\nconst ValidationListBox = styled.ul`\n  list-style: none;\n  padding: 0 0 1rem 0;\n  font-size: 1rem;\n`;\n\nconst StyledLi = styled.li`\n  height: 1.2rem;\n  padding: 0.3rem 2rem;\n  font-size: 0.9rem;\n  // font-weight: bold;\n  color: ${(props) =>\n    props.valid\n      ? `var(--font-validation-positive)`\n      : `var(--font-validation-negative)`};\n  font-weight: ${(props) => (props.valid ? `bold` : `null`)};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem auto;\n`;\n\nconst Button = styled.button`\n  width: 25vw;\n  min-width: 50px;\n  max-width: 200px;\n  margin: 0.5rem 1rem;\n  padding: 0.8rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: white;\n  /* background-color: ${(props) =>\n    props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)`}; */\n  border-radius: 1rem;\n  background-color: #fec0cb;\n  &:hover {\n    background-color: #ff7f9f;\n  }\n`;\n\n// const TextButton = styled.button`\n//   // align-self: flex-end;\n//   margin: 1rem 3rem;\n//   font-size: 1rem;\n//   color: grey;\n//   text-decoration: underline;\n// `;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function PasswordEdit() {\n  // const { password } = useSelector((state) => state.itemReducer)\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [curPwd, setCurPwd] = useState(\"\");\n  const [newPwd, setNewPwd] = useState(\"\");\n  const [curPwdInputWarning, setCurPwdInputWarning] =\n    useState(\"비밀번호를 입력해주세요.\");\n  const [newPwdInputWarning, setNewPwdInputWarning] = useState({\n    isNoInput: \"비밀번호를 입력해주세요.\",\n    isTooShort: \"6자 이상이어야 합니다.\",\n    isWrongType: \"숫자와 문자를 포함해야 합니다.\",\n  });\n  const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning;\n  const [isValid, setIsValid] = useState(\"\");\n\n  const validationReg =\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/g;\n  // 정규식 : 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n\n  const curInputHandler = (e) => {\n    setCurPwd((prev) => e.target.value);\n    // console.log(e.target.value)\n    if (e.target.value.length === 0) {\n      setCurPwdInputWarning((prev) => \"비밀번호를 입력해주세요.\");\n    } else {\n      setCurPwdInputWarning((prev) => \"\");\n    }\n  };\n\n  const newInputHandler = (e) => {\n    setNewPwd((prev) => e.target.value);\n\n    // 유효성 검사\n    if (e.target.value.length === 0) {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isNoInput: \"비밀번호를 입력해주세요.\" };\n      });\n    } else {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isNoInput: \"\" };\n      });\n    }\n\n    if (!validationReg.test(e.target.value)) {\n      setNewPwdInputWarning((prev) => {\n        return {\n          ...prev,\n          isWrongType: \"문자, 숫자, 특수문자가 모두 포함되어야 합니다.\",\n        };\n      });\n      setIsValid((prev) => \"\");\n    } else {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isWrongType: \"\" };\n      });\n      setIsValid((prev) => \"사용 가능합니다.\");\n    }\n\n    if (e.target.value.length < 6) {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isTooShort: \"6자 이상이어야 합니다.\" };\n      });\n    } else {\n      setNewPwdInputWarning((prev) => {\n        return { ...prev, isTooShort: \"\" };\n      });\n    }\n  };\n\n  // 버튼 클릭 이벤트\n  const editButtonHandler = (e) => {\n    // e.prevntDefault()\n\n    let newPwdValid = validationReg.test(newPwd);\n    console.log(\"새 비밀번호 유효성 검사 결과\", newPwdValid);\n    // TODO\n    // 클라이언트 로컬스토리지에 있는 토큰을 찾아서\n    // 헤더에 담아서 서버에 전달\n    // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\")); //문자열벗긴 토큰\n    //console.log(token) //토큰찾음\n    axios({\n      url: url + \"/password\",\n      method: \"put\",\n      data: { password: newPwd },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      // console.log(res.data)\n      dispatch(changeUserPw(true));\n      history.push(\"/mypage\");\n    });\n  };\n\n  const cancelButtonHandler = (e) => {\n    console.log(\"취소 버튼 동작 확인\");\n    setCurPwd((prev) => \"\");\n    setNewPwd((prev) => \"\");\n    setIsValid((prev) => \"\");\n    // TODO 이전 페이지로\n    history.push(\"/home\");\n  };\n\n  // 탈퇴 모달에 붙은 함수\n  // const [ isModalOpen, setIsModalOpen ] = useState(false);\n  // const withdrawButtonHandler = (e) => {\n  //   console.log('탈퇴 버튼 동작확인');\n  //   setIsModalOpen(true);\n  // }\n\n  // const modalSelectList = [\n  //   [null, \"--탈퇴 이유 선택--\"],\n  //   [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n  //   [\"inconvenientDesign\", \"디자인이 불편함\"],\n  //   [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n  //   [\"etc\", \"기타\"]\n  // ];\n\n  // const [ modalSelected, setModalSelected ] = useState(\"\");\n  // const handleChangeSelect = (e) => {\n  //   setModalSelected(prev => e.target.value);\n  // }\n\n  // const modalCloseButtonHandler = (e) => {\n  //   console.log('모달 닫기 버튼 동작 확인');\n  //   setIsModalOpen(false);\n  // }\n\n  // const modalYesButtonHandler = (e) => {\n  //   console.log('모달 yes 버튼 동작 확인');\n  // }\n\n  // const modalNoButtonHandler = (e) => {\n  //   console.log('모달 no 버튼 동작 확인');\n  //   setIsModalOpen(false);\n  // }\n\n  return (\n    <Outer className=\"loginPageComponent\">\n      <h2>비밀번호 변경</h2>\n\n      <div className=\"Login--center\">\n        <StyledArticle className=\"id\">\n          <InputAndTitle className=\"inputCurPwdSection\">\n            <h3>현재 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"curPwd\"\n              placeholder=\"현재 비밀번호를 입력하세요\"\n              onChange={curInputHandler}\n              value={curPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"idValidationList\">\n            <StyledLi>{curPwdInputWarning}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n\n        <StyledArticle className=\"password\">\n          <InputAndTitle className=\"inputNewPwSection\">\n            <h3>새 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"newPwd\"\n              placeholder=\"비밀번호를 입력하세요\"\n              onChange={newInputHandler}\n              value={newPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"pwValidationList\">\n            <StyledLi valid>{isValid}</StyledLi>\n            <StyledLi>{isNoInput}</StyledLi>\n            <StyledLi>{isTooShort}</StyledLi>\n            <StyledLi>{isWrongType}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n      </div>\n\n      <Buttons className=\"login--buttons\">\n        <div>\n          <Button onClick={editButtonHandler} edit>\n            수정\n          </Button>\n          <Button onClick={cancelButtonHandler}>취소</Button>\n        </div>\n      </Buttons>\n\n      {/* <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton> */}\n\n      {/* {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      } */}\n    </Outer>\n  );\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\nimport OneChoiceModal from \"../components/OneChoiceModal\"\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // margin: 0.5rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"pink\")};\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.google ? \"#EA4335\" : \"#2f6ecb\"}; */\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    /* background-color: ${(props) =>\n        props.google ? \"#EA4335\" : \"#2f6ecb\"}; */\n    border-radius: 1rem;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\nconst Button1 = styled.button`\n    width: 30vw;\n    min-width: 50px;\n    max-width: 80px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 0.8rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"pink\")};\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function SignUp() {\n    const dispatch = useDispatch()\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n        emailInput: \"\",\n        emailVaildCode: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력하세요..\",\n        pwInput: \"패스워드를 입력하세요.\",\n        nickNameInput: \"닉네임을 입력하세요.\",\n        emailInput: \"이메일을 입력하세요.\",\n        emailVaildCode: \"이메일 인증 코드 기입 후 인증하기 하세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력하세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색하세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${process.env.REACT_APP_CLIENTURL}/img/blankProfile.png`,\n    })\n    console.log(uploadedImg)\n    const [codeOn, setCodeOn] = useState(false)\n\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다..\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n    useEffect(() => {\n        //이메일 유효성검사\n        if (\n            inputSignUpData.emailInput.length >= 5 &&\n            inputSignUpData.emailInput.indexOf(\"@\") !== -1\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, emailInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailInput: \"이메일은 5글자 이상이며, @를 포함합니다.\",\n            })\n        }\n    }, [inputSignUpData.emailInput])\n    useEffect(() => {\n        //이메일인증 코드 유효성검사\n        if (inputSignUpData.emailVaildCode.length >= 1) {\n            setInputVaildMessage({ ...inputVaildMessage, emailVaildCode: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailVaildCode: \"코드를 기입하세요.\",\n            })\n        }\n    }, [inputSignUpData.emailVaildCode])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n    function emailSend() {\n        console.log(\"email 보내기\")\n        if (!inputVaildMessage.emailInput && !inputVaildMessage.idInput) {\n            console.log(\"정상수행가능\")\n            axios({\n                url: url + \"/users/auth\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                data: {\n                    temporary_id: inputSignUpData.idInput,\n                    email: inputSignUpData.emailInput,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 200) {\n                    alert(\"인증메일을 발송하였습니다\")\n                } else {\n                    alert(\"인증메일을 발송에 실패하였습니다\")\n                }\n            })\n        } else {\n            console.log(\"안되는곳\")\n            alert(\"아이디, 이메일을 기입하세요\")\n        }\n    }\n    function codeSend() {\n        console.log(\"code 보내기\")\n        axios({\n            url: url + \"/users/auth\",\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                temporary_id: inputSignUpData.idInput,\n                email: inputSignUpData.emailInput,\n                code: inputSignUpData.emailVaildCode,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            if (res.data) {\n                setCodeOn(res.data)\n                alert(\"이메일 인증 완료 되었습니다.\")\n            } else {\n                alert(\"이메일 인증에 실패 하였습니다.\")\n            }\n        })\n    }\n    console.log(userRoadAddress)\n    function signupFunc(e) {\n        //console.log(\"프론트 콘솔:회원가입 입장\");\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\" ||\n            codeOn === false\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                    email: inputSignUpData.emailInput,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n    function duplicationTest() {\n        console.log(\"중복검사버튼\")\n        axios({\n            url: url + \"/users/duplicationtest\",\n            method: \"post\",\n            data: {\n                user_id: inputSignUpData.idInput,\n            },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }) //\n            .then((res) => {\n                if (res.status === 212) {\n                    setalertState(true)\n                } else {\n                    setInputSignUpData({\n                        ...inputSignUpData,\n                        idInput: \"\",\n                    })\n                    setalertState2(true)\n                }\n            })\n    }\n    const [alertState, setalertState] = useState(false)\n    const [alertState2, setalertState2] = useState(false)\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            value={inputSignUpData.idInput}\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                        <Button1 onClick={duplicationTest}>중복검사</Button1>\n                        <OneChoiceModal\n                            boolean={alertState}\n                            message={\"아무도 사용하고 있지 않은 아이디 입니다.\"}\n                            yesMessage={\"사용\"}\n                            alertFunc={() => setalertState(false)}\n                        ></OneChoiceModal>\n                        <OneChoiceModal\n                            boolean={alertState2}\n                            message={\"이미 사용되고 있는 아이디 입니다.\"}\n                            yesMessage={\"다시쓰기\"}\n                            alertFunc={() => setalertState2(false)}\n                        ></OneChoiceModal>\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailInput\"\n                            placeholder=\"ex) example@exammail.com\"\n                            onChange={idOnChangeHanlder(\"emailInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailInput}</li>\n                        <Buttons className=\"SignUp--buttons\">\n                            <Button onClick={emailSend}>인증메일 보내기</Button>\n                        </Buttons>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증 코드</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailVaildCode\"\n                            placeholder=\"인증코드\"\n                            onChange={idOnChangeHanlder(\"emailVaildCode\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailVaildCode}</li>\n                    </ValidationListBox>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={codeSend}>코드 인증하기</Button>\n                    </Buttons>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { userPosts, updatePostId, curPageAction } from \"../actions/index\";\n// UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE\nimport GoBackButton from \"../components/GoBackButton\";\nimport Pagination from \"../components/Pagination\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; //리액트에서 사용가능하게 해줌\nimport {\n  faAngleLeft,\n  faAngleRight,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n} from \"@fortawesome/free-solid-svg-icons\"; //내가 사용할 아이콘을 불러오기\n\nconst Outer = styled.div`\n  position: relative;\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  min-height: 100vh;\n  padding: 2rem;\n\n  h2 {\n    align-self: flex-start;\n    margin: 2rem 0;\n  }\n\n  button {\n    font-size: 1.5rem;\n  }\n\n  @media screen and (min-width: 1500px) {\n    // 제일 큰 사이즈\n    padding-left: 3vh;\n    padding-right: 3vh;\n  }\n  @media screen and (max-width: 375px) {\n    padding-top: 2vh;\n  }\n  @media screen and (max-width: 1081px) {\n    // 1080이하\n  }\n`;\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n  // border: 1px solid blue;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 300px 300px;\n  grid-gap: 1.5rem;\n  min-height: 70vh;\n  margin: 1rem;\n  p {\n    font-size: 28px;\n  }\n\n  .postItem {\n    background-color: rgba(255, 255, 255, 0.6);\n    display: flex;\n  }\n  .postItem:hover {\n    border: 1px solid #d5d8dc;\n  }\n  @media screen and (min-width: 2100px) {\n    height: 50vh;\n    width: 300px;\n  }\n  @media screen and (max-width: 1081px) {\n    padding-left: 5vw;\n    padding-right: 5vw;\n    height: auto;\n    grid-template-columns: 1fr 1fr;\n  }\n  @media screen and (max-width: 600px) {\n    padding-left: 2vw;\n    padding-right: 2vw;\n    p {\n      font-size: 20px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: auto;\n  }\n`;\nconst FlexArea = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst FlexArea2 = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst FlexArea3 = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst PhotoArea = styled.div`\n  width: 300px;\n  height: 300px;\n`;\nconst FSArea = styled.div`\n  margin: 5px;\n  & :hover {\n    color: red;\n  }\n`;\n\n// 게시물 사진\nconst PostImg = styled.img`\n  // border: 1px solid red;\n  width: 100%;\n  height: 100%;\n  background-color: #ffffff;\n\n  @media screen and (min-width: 2100px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    // 이미지 크기 수정 필요\n  }\n`;\n\n//   @media screen and (max-width: 1081px) {\n//     padding: 1vh 2vw 2vh 2vw;\n//     font-size: 1.5rem;\n//   }\n//   @media screen and (max-width: 375px) {\n//     font-size: 1rem;\n//     padding-left: 3vw;\n//   }\n// `\n\n// 페이지네이션\nconst Page = styled.div`\n  display: flex;\n  justify-content: center;\n  li {\n    /* margin: 3px; */\n    list-style: none;\n    padding: 3px;\n    /* border: 1px solid red; */\n  }\n  button {\n    margin: 0 1vw;\n    padding: 1rem 1.5rem;\n    border-radius: 50%;\n  }\n  button:focus {\n    background-color: var(--modal-bg-color);\n  }\n  #prev,\n  #next {\n    background: none;\n  }\n  @media screen and (max-width: 1081px) {\n    margin-top: 10rem;\n    padding-bottom: 5rem;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 3rem;\n    padding-bottom: 3rem;\n    li {\n      /* margin: 0 1vw; */\n      /* margin: 1vh; */\n      padding: 0;\n    }\n    button {\n      /* margin: 0 1.5vw; */\n      font-size: 1.5rem;\n      margin: 0;\n      padding: 1px 7px;\n    }\n  }\n`;\nconst CurPage = styled.button`\n  color: pink;\n  margin: 5px;\n\n  // width: 30px;\n`;\nconst Button1 = styled.button`\n  margin: 5px;\n  color: black;\n  &: hover {\n    margin: 5px;\n\n    color: red;\n  }\n  // width: 30px;\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function MyPost() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    start,\n    end,\n    current,\n    isLogin,\n    userInfo,\n    postInfo,\n    readPostId,\n    curPage,\n  } = useSelector((state) => state.itemReducer);\n  console.log(curPage);\n  const [listLength, setListLength] = useState([]);\n  console.log(listLength);\n  //배열의 총 길이만 담고있는 변수\n  const [currentPosts, setcurrentPosts] = useState([]);\n  //현재 포스트를 모두 담고 있는 변수\n  //   const [curPage, setCurPage] = useState(1);\n  //현재 페이지\n  const [dividNum, setDividNum] = useState(6);\n  //한페이지에 보여줄 포스트의 개수\n  console.log(userInfo);\n  useEffect(() => {\n    axios({\n      url:\n        url +\n        `/mypost?searchID=${userInfo.user_id}&page=${curPage}&capa=${dividNum}`,\n      method: \"get\",\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      setListLength(res.data.length);\n      setcurrentPosts(res.data.data);\n      dispatch(userPosts(res.data));\n    });\n  }, [userInfo]);\n\n  useEffect(() => {\n    axios({\n      url:\n        url +\n        `/mypost?searchID=${userInfo.user_id}&page=${curPage}&capa=${dividNum}`,\n      method: \"get\",\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      setListLength(res.data.length);\n      setcurrentPosts(res.data.data);\n      dispatch(userPosts(res.data));\n    });\n  }, [curPage]);\n\n  // // 페이지네이션 시작\n  // const [currentPage, setCurrentPage] = useState(1)\n  // // 1페이지로 시작\n  // const itemsPerPage = 8\n  // // 한 페이지에 8개씩 보여준다\n  // const lastIdx = currentPage * itemsPerPage\n  // const firstIdx = lastIdx - itemsPerPage\n  // const slicedData = (dataArr) => {\n  //     return dataArr.slice(firstIdx, lastIdx)\n  // }\n  // // 페이지네이션 끝\n\n  //게시물의 총 수량\n\n  // 총 페이지 수 = Math.ceil(전체 개수/ 한 페이지에 나타낼 데이터 수);\n\n  // 화면에 보여질 페이지 그룹 = Math.ceil(현재 페이지/ 한 화면에 나타낼 페이지 수);\n  // const curPage = Math.ceil(1 / 10)\n  // 화면에 보여질 첫번째 페이지\n  // 화면에 보여질 마지막 페이지\n\n  // 게시물사진 클릭했을 때\n  const postClickHandler = (e) => {\n    console.log(\"클릭은되나\");\n    let elem = e.target;\n    while (!elem.classList.contains(\"postItem\")) {\n      elem = elem.parentNode;\n      if (!elem.classList.contains(\"myPostList\")) {\n        break;\n      }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: \"/readpost\",\n      state: { postId: elem.id },\n    });\n  };\n\n  return (\n    <Outer className=\"MyPostPage\">\n      <div>\n        <GoBackButton className=\"gobackButton\" />\n        <h2>내가 쓴 게시물</h2>\n      </div>\n\n      {/* <GridArea className=\"myPostList\">\n                {slicedData(currentPosts).map((el) => (\n                    <div\n                        className={[\"postItem\"]}\n                        id={el.id}\n                        onClick={postClickHandler}\n                        key={el.id}\n                    >\n                        <PostImg src={el.post_photo} alt=\"posts\" />\n                    </div>\n                ))}\n            </GridArea> */}\n      <FlexArea>\n        <FlexArea3>\n          {currentPosts.slice(0, 3).map((el) => (\n            <PhotoArea\n              className={[\"postItem\"]}\n              id={el.id}\n              key={el.id}\n              onClick={postClickHandler}\n            >\n              <PostImg src={el.post_photo} alt=\"posts\" />\n            </PhotoArea>\n          ))}\n        </FlexArea3>\n        <FlexArea3>\n          {currentPosts.slice(3, 7).map((el) => (\n            <PhotoArea\n              // className={[\"postItem\"]}\n              className={[\"item\", \"postItem\"]}\n              id={el.id}\n              key={el.id}\n              onClick={postClickHandler}\n            >\n              <PostImg src={el.post_photo} alt=\"posts\" />\n            </PhotoArea>\n          ))}\n        </FlexArea3>\n      </FlexArea>\n      <FlexArea2>\n        <div onClick={() => dispatch(curPageAction(1))}>\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleDoubleLeft} size=\"2x\" />\n          </FSArea>\n        </div>\n        <div\n          onClick={() => {\n            if (curPage !== 1) {\n              dispatch(curPageAction(curPage - 1));\n            }\n          }}\n        >\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleLeft} size=\"2x\" />\n          </FSArea>\n        </div>\n\n        {listLength.map((number, idx) =>\n          idx + 1 === curPage ? (\n            <CurPage onClick={() => dispatch(curPageAction(idx + 1))}>\n              {idx + 1}\n            </CurPage>\n          ) : (\n            <Button1 onClick={() => dispatch(curPageAction(idx + 1))}>\n              {idx + 1}\n            </Button1>\n          )\n        )}\n\n        <div\n          onClick={() => {\n            if (curPage !== listLength.length) {\n              dispatch(curPageAction(curPage + 1));\n            }\n          }}\n        >\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleRight} size=\"2x\" />\n          </FSArea>\n        </div>\n        <div onClick={() => dispatch(curPageAction(listLength.length))}>\n          <FSArea>\n            <FontAwesomeIcon icon={faAngleDoubleRight} size=\"2x\" />\n          </FSArea>\n        </div>\n      </FlexArea2>\n    </Outer>\n  );\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    /* background-color: var(--button-bg-normal); */\n    background-color: #fec0cb;\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n    border: 0;\n    outline: 0;\n    color: white;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        // filePath: `http://localhost:3000/img/blankPost.png`,\n        filePath: `${process.env.REACT_APP_CLIENTURL}/img/blankPost.png`,\n    })\n\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        //console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        //console.log(userInfo.user_id)\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                // headers: {\n                //     // accept: \"application/json\",\n                // },\n                data: {\n                    user_id: userInfo.user_id,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            let content = [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                getRandomIntInclusive(0, 3)\n            ]\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    // user_id: Math.random().toString(36).substr(2, 5),\n                    user_id: \"kimcoding\",\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: \"안녕하세요~이곳의 날씨는 이렇답니다~~~\",\n                    post_content: `이곳의 날씨는 현재 ${content}랍니다~`,\n                    weather: content,\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Outer = styled.div`\n  width: 100%;\n  margin: 1rem 0;\n  display: flex;\n  justify-content: space-between;\n\n`\nconst LeftDiv = styled.div`\n  text-align: left;\n  #userid {\n    font-weight: bold;\n  }\n`\nconst RightDiv = styled.div`\n  display: block;\n`\nconst DeleteBtn = styled.button`\n  display: block;\n  border: 1px solid black;\n`\nconst LikeBtn = styled.button`\n  display: block;\n  margin-top: 0.3rem;\n  border: 1px solid black;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\n// 아이디, 댓글내용, 날짜 / 좋아요하트, 삭제버튼\nexport default function Comment({content, commentDelete, userInfo}) {\n  // console.log(\"content : \", content);\n  const [click, setClick] = useState(false);\n  console.log(\"comment userid : \", userInfo);\n\n  // 댓글 좋아요 클릭\n  const commentLike = () => {\n\n    axios({\n      url: url + \"/likecomment\",\n      method: \"post\",\n      data: {\n        user_id: content.comment_user_id,\n        post_id: content.post_id,\n        comment_id: content.id\n      },\n      withCredentials: true,\n    })\n    .then(() => {\n      if(click === false){\n        setClick(true)\n      }else{\n        setClick(false)\n      }\n    })\n    \n  }\n  return (\n    <Outer>\n      <LeftDiv>\n        <p id=\"userid\">{content.comment_user_id}</p>\n        <p>{content.comment_content}</p>\n        <p>{content.createdAt}</p>\n      </LeftDiv>\n\n      <RightDiv>\n        <DeleteBtn onClick={() => commentDelete(content.id)}>삭제</DeleteBtn>\n        <LikeBtn \n          onClick={commentLike}\n          // onClick={() => commentLike(content.id)}\n        >\n          {\n            click? \n              <FontAwesomeIcon \n              icon={faHeart}\n              className=\"heart\"\n              color=\"red\"\n              /> :\n              <FontAwesomeIcon \n              icon={faHeart}\n              className=\"heart\"\n              color=\"#aaa\"\n              />\n          }\n          <span>{0}</span>\n        </LikeBtn>\n      </RightDiv>\n    </Outer>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Bookmark } from \"../components/BookMarks\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\nimport TopButton from \"../components/TopButton\";\nimport Comment from \"../components/PostRead-comment\";\nimport { changeUser } from \"../actions/index\";\nimport kakaoIcon from \"../../src/LoginIcon/kakaoIcon.png\";\nconst { Kakao } = window;\n\nconst Outer = styled.div`\n  width: 100%;\n  background-color: var(--page-bg-color);\n\n  // 오늘의 코디\n  .todayCodi {\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    color: #2e2e2e;\n    padding-top: 2vh;\n    border-top: 1px solid #aaa;\n  }\n\n  h2.warning--nodata {\n    color: #c60239;\n    font-size: 3rem;\n    margin: 0 1rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    .todayCodi {\n      margin-top: 2vh;\n      font-weight: bold;\n    }\n  }\n  @media screen and (max-width: 375px) {\n  }\n`;\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`;\n// 제목\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 960px;\n  text-align: center;\n  margin: 0 auto;\n\n  span {\n    font-size: 2rem;\n  }\n \n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%; // 추가\n    span {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nconst IconDiv = styled.div`\n/* display:flex;\njustify-content:flex-end; */\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n/* float: right;\n  & .bookmark {\n    cursor: pointer;\n    color: #aaa;\n  } */\n`;\n// 카카오 공유 아이콘 \nconst KakaoBtn = styled.button`\n  img {\n    margin-left: 1rem;\n    padding: 0.25rem;\n    margin-bottom: 0.01rem;\n    width: 2.7rem;\n    height: 2.5rem;\n  }\n`\n\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap;\n\n  .profileInfo {\n    display: flex;\n    align-items: center;\n    /* margin-left: 1vh; */\n  }\n  .location {\n    font-size: 1.2rem;\n  }\n  span {\n    margin-left: 1vh;\n  }\n  span.date {\n    font-size: 0.8rem;\n    color: #707b7c;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 594px) {\n    .location {\n      margin-top: 1.2vh;\n      font-size: 1.2rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span {\n      font-size: 0.5rem;\n    }\n    span.date {\n      font-size: 0.5rem;\n      color: #707b7c;\n    }\n    .location {\n      margin-top: 0;\n      font-size: 0.5rem;\n    }\n  }\n`;\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`;\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  // 이미지 사이즈(1000*750)\n  // 다시 확인필요\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: 30rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: 18rem;\n  }\n`;\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  width: 330px;\n  margin-top: 4vh;\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n    justify-content: space-around;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    margin-bottom: 3vh;\n  }\n`;\n\nconst Icon = styled.img`\n  @media screen and (max-width: 1081px) {\n    width: 4rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 3rem;\n  }\n`;\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  width: 20%;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  margin-top: 3vh;\n  margin-bottom: 3vh;\n  .warning {\n    display: none;\n  }\n  & p.warning {\n    font-size: 0.9rem;\n    width: 6rem;\n    height: 6rem;\n    text-align: center;\n  }\n\n  img {\n    width: 4rem;\n    height: auto;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 50%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50vw;\n  }\n`;\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n\n  p {\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p {\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`;\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  padding-bottom: 10vh;\n\n  .button {\n    width: 7rem;\n    height: 3rem;\n    border-radius: 1rem;\n    background-color: #ffbfcb;\n    font-size: 1.2rem;\n    font-weight: bold;\n  }\n  .button2 {\n    margin-left: 5rem;\n  }\n  .button:hover {\n    background-color: #ff7f9f;\n  }\n  .button:before {\n    height: 0%;\n    width: 2px;\n  }\n  .button:active {\n    border: none;\n    box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n      inset -4px -4px 6px 0 rgba(255, 255, 255, 0.2),\n      inset 4px 4px 6px 0 rgba(0, 0, 0, 0.4);\n  }\n\n  @media screen and (max-width: 1081px) {\n    .button2 {\n      margin-left: 80px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    .button {\n      width: 3rem;\n      height: 2rem;\n      font-size: 1rem;\n    }\n    .button2 {\n      margin-left: 0;\n    }\n  }\n`;\n\n// 댓글\nconst CommentSection = styled.div`\n  height: auto;\n  width: 100%;\n  text-align: center;\n\n  input {\n    height: 2rem;\n    width: 70%;\n    margin-right: 1rem;\n  }\n  button {\n    height: 2rem;\n    width: 3rem;\n  }\n`;\n// 댓글작성\nconst PostComment = styled.div`\n  margin-bottom: 2rem;\n  button {\n    border: 1px solid black;\n  }\n`;\n// 댓글목록\nconst CommentList = styled.ul`\n  padding: 0 2rem;\n`;\n\nlet url = process.env.REACT_APP_LOCAL_URL;\nif (!url) url = \"https://thereweather.space/api\";\n\nexport default function PostRead() {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const { readPostId, userInfo, postInfo } = useSelector(\n    (state) => state.itemReducer\n  );\n\n  // console.log(\"현재 접속한 유저\",userInfo) //현재접속한 유저\n  // console.log(\"포스트번호 : \",readPostId) //포스트번호\n  // console.log(postInfo) //본인것만 보임\n  const postIds = Number(readPostId);\n  // console.log(postIds)\n\n  // postData state 변수\n  const [postData, setPostData] = useState({\n    id: null,\n    post_title: \"\",\n    user_id: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n    xLocation: \"\",\n    yLocation: \"\",\n    post_photo: \"\",\n    weather: \"\",\n    wind: \"\",\n    temp: \"\",\n    top_id: \"\",\n    bottom_id: \"\",\n    post_content: \"\",\n    address: \"\",\n  });\n  const [noIdWarning, setNoIdWarning] = useState(\"\");\n\n  // 날짜 처리\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    let hourAndMin = dateObject.toLocaleTimeString(\"en-US\", {\n      hour12: false,\n    });\n    hourAndMin = hourAndMin.slice(0, -3);\n\n    return `${dateOnly} ${hourAndMin}`;\n  };\n\n  let currentPostId = 0; // post id 저장\n  // 글 불러오기\n  useEffect(() => {\n    //console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n    //auth할차례\n    if (localStorage.getItem(\"ATOKEN\")) {\n      axios({\n        url: url + \"/users/auth\",\n        method: \"get\",\n        headers: {\n          authorization: `token ${JSON.parse(localStorage.getItem(\"ATOKEN\"))}`,\n        },\n      }).then((res) => {\n        //console.log(res.data.data)\n        dispatch(changeUser(res.data.data));\n\n        axios({\n          url: url + \"/readbookmark\",\n          method: \"post\",\n          data: {\n            user_id: res.data.data.id,\n            post_id: postIds,\n          },\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }).then((res) => {\n          //console.log(res.data)\n          if (res.data !== \"북마크없음\") {\n            setBookmarked(!bookmarked);\n          }\n        });\n      });\n    }\n    //////////////////\n    function getOnePost(postId) {\n      axios\n        .get(`${url}/readpost`, {\n          headers: { \"Content-Type\": \"application/json\" },\n          params: { id: postId },\n          withCredentials: true,\n        })\n        .then((res) => {\n          // console.log(\"글 불러오기 : \",res.data)\n          return setPostData((prev) => res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n\n    let id;\n    // console.log(history.location.state);\n    if (history.location.state) {\n      id = history.location.state.postId;\n    } else {\n      id = readPostId;\n    }\n\n    if (!id) {\n      //console.log(\"**postread: id가 없습니다**\")\n      setNoIdWarning((prev) => \"잘못된 접근입니다.\");\n    } else {\n      getOnePost(id);\n      currentPostId = id;\n    }\n\n    // console.log(\"글 불러오기 id : \", id);\n    // console.log(\"currentPostId : \", currentPostId);\n    ////////////////////////\n  }, []);\n\n  useEffect(() => {}, []);\n\n  // 북마크 상태\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  // 게시물 수정\n  const [edit, setEdit] = useState(false);\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false);\n\n  // 게시물 수정\n  const editPost = () => {\n    //console.log(\"수정버튼동작확인\")\n    setEdit(true);\n  };\n\n  // 게시물 삭제\n  const deletePost = (e) => {\n    //console.log(\"삭제버튼동작확인\")\n    setRemovePost(true);\n  };\n\n  //게시물 수정 yes버튼\n  const editModalYes = () => {\n    axios({\n      url: url + \"/editpost\",\n      method: \"put\",\n      data: {\n        user_id: userInfo.user_id,\n        post_id: postIds,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      alert(res.data);\n      if (res.data === \"게시물의 작성자가 아닙니다.\") {\n        history.push(\"/mypage\");\n      } else {\n        history.push(\"/editpost\");\n      }\n    });\n    setEdit(false);\n  };\n\n  //게시물 삭제 yes버튼\n  const removeModalYes = () => {\n    // console.log('삭제완료')\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    //console.log(token)\n    axios({\n      url: url + \"/deletepost\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      data: { post_id: postIds },\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      alert(res.data);\n      // alert(\"삭제 완료\")\n      history.push(\"/mypage\");\n    });\n    setRemovePost(false);\n  };\n\n  const modalNoButtonHandler = () => {\n    setRemovePost(false);\n    setEdit(false);\n  };\n\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false);\n    setEdit(false);\n  };\n\n  const bookmarkHandler = (e) => {\n    //console.log(\"글 읽기 - 북마크 버튼 동작 확인\")\n    axios({\n      url: url + \"/bookmark\",\n      method: \"post\",\n      data: { user_id: userInfo.id, post_id: postIds },\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    }).then((res) => {\n      //console.log(res.data)\n      setBookmarked((prev) => !prev);\n    });\n  };\n\n  // 처음 댓글목록 불러오기\n  useEffect(() => {\n    getCommentList();\n  }, []);\n\n  // 댓글작성, 입력부분 초기화\n  const [commentMsg, setCommentMsg] = useState(null);\n  const [commentList, setCommentList] = useState([]);\n\n  const commentBtnClick = () => {\n    if (commentMsg === null) {\n      alert(\"댓글을 입력해주세요.\");\n    } else {\n      axios({\n        url: url + \"/sendcomment\",\n        method: \"post\",\n        data: {\n          post_id: postData.id,\n          comment_user_id: userInfo.user_id,\n          comment_content: commentMsg,\n        },\n        withCredentials: true,\n      }).then(() => {\n        getCommentList();\n        window.location.replace(\"/readpost\");\n      });\n    }\n  };\n\n  // 댓글목록 불러오기\n  function getCommentList() {\n    axios({\n      url: url + \"/commentlist\",\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"get\",\n      params: {\n        post_id: currentPostId,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      setCommentList(res.data);\n    });\n  }\n  const inputHandle = (e) => {\n    setCommentMsg(e.target.value);\n  };\n\n  // 댓글삭제\n  const commentDelete = (commentId) => {\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"));\n    axios({\n      url: url + \"/deletecomment\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      data: {\n        comment_id: commentId, // 댓글 아이디\n      },\n      withCredentials: true,\n    }).then((res) => {\n      window.location.replace(\"/readpost\");\n    });\n  };\n\n\n  useEffect(() => {}, []);\n  \n  //카카오 공유 \n  const shareKakao = () => {\n      Kakao.Link.sendDefault({\n        objectType: \"feed\",\n        content: {\n          title: postData.post_title,\n          description: \"거기 날씨\",\n          imageUrl: postData.post_photo,\n          link:{\n            mobileWebUrl: 'https://thereweather.space',\n            androidExecutionParams: 'test',\n          },\n        },\n        buttons: [\n          {\n            title: '거기날씨로 이동',\n            link: {\n              mobileWebUrl: 'https://thereweather.space',\n            },\n          },\n        ]\n      })\n  }\n\n\n  return (\n    <Outer>\n      {noIdWarning.length !== 0 ? (\n        <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n      ) : (\n        \"\"\n      )}\n      <TopButton />\n      <GoBackButton />\n      <PostHeader className=\"postHeader\">\n        <Title className=\"title\">\n        <span>{postData.post_title}</span>\n        <IconDiv>\n        <BookmarkIcon\n            bookmarkHandler={bookmarkHandler}\n            color={bookmarked ? \"#3b5fd9\" : \"#aaa\"}\n          />    \n          {/* 카카오 아이콘 자리  */}\n          <KakaoBtn onClick={shareKakao}>\n            <img src={kakaoIcon}></img>\n          </KakaoBtn>\n          </IconDiv>\n        </Title>\n\n        \n\n        <Profile className=\"userProfile\">\n          <div className=\"profileInfo\">\n            <ProfileImg src={postData.user_Photo} />\n            <span className=\"nickName\">{postData.nickName}</span>\n            <span className=\"date\">{formatDate(postData.updatedAt)}</span>\n          </div>\n          <div>\n            <p className=\"location\">{postData.address}</p>\n            {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n          </div>\n        </Profile>\n      </PostHeader>\n      <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n      <WeatherInfo>\n        {!postData.weather ? (\n          \"\"\n        ) : (\n          <Icon\n            src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`}\n            alt=\"날씨아이콘\"\n          />\n        )}\n        {!postData.wind ? (\n          \"\"\n        ) : (\n          <Icon\n            src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`}\n            alt=\"바람아이콘\"\n          />\n        )}\n        {!postData.temp ? (\n          \"\"\n        ) : (\n          <Icon\n            src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`}\n            alt=\"날씨아이콘\"\n          />\n        )}\n      </WeatherInfo>\n\n      {/* 코디가 있을 때, 없을 때 */}\n      {\n        // 코디 3개 없을때\n        (!postData.outer_id || postData.outer_id === \"default\") &&\n        (!postData.top_id || postData.top_id === \"default\") &&\n        (!postData.bottom_id || postData.top_id === \"default\") ? null : (\n          <>\n            <h2 className=\"todayCodi\">오늘의 코디</h2>\n            <TodayCodi>\n              {!postData.outer_id || postData.outer_id === \"default\" ? (\n                <p className=\"warning\">겉옷 데이터가 없습니다</p>\n              ) : (\n                <Icon\n                  src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`}\n                  alt=\"겉옷\"\n                />\n              )}\n              {!postData.top_id || postData.top_id === \"default\" ? (\n                <p className=\"warning\">상의 데이터가 없습니다</p>\n              ) : (\n                <Icon\n                  src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`}\n                  alt=\"상의\"\n                />\n              )}\n              {!postData.bottom_id || postData.top_id === \"default\" ? (\n                <p className=\"warning\">하의 데이터가 없습니다</p>\n              ) : (\n                <Icon\n                  src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`}\n                  alt=\"하의\"\n                />\n              )}\n            </TodayCodi>\n          </>\n        )\n      }\n\n      <Post>\n        <p>{postData.post_content}</p>\n      </Post>\n\n      <Buttons>\n        <button className=\"button button1\" value=\"delete\" onClick={deletePost}>\n          삭제\n        </button>\n        {removePost === false ? null : (\n          <ModalConfirm\n            yesHandler={removeModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            삭제하시겠습니까?\n          </ModalConfirm>\n        )}\n        <button className=\"button button2\" onClick={editPost}>\n          수정\n        </button>\n        {edit === false ? null : (\n          <ModalConfirm\n            yesHandler={editModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            수정하시겠습니까?\n          </ModalConfirm>\n        )}\n      </Buttons>\n\n      <CommentSection>\n        {/* 댓글작성 */}\n        <PostComment>\n          <input\n            type=\"text\"\n            placeholder=\"댓글을 작성해주세요.\"\n            onChange={inputHandle}\n          />\n          <button onClick={commentBtnClick}>작성</button>\n        </PostComment>\n        {/* 댓글목록 */}\n        <CommentList>\n          {commentList.map((content) => (\n            <Comment\n              key={content.id}\n              content={content}\n              commentDelete={commentDelete}\n              userInfo={userInfo}\n              // commentLike= {commentLike}\n            />\n          ))}\n        </CommentList>\n      </CommentSection>\n    </Outer>\n  );\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { Bookmark } from \"../components/BookMarks\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport GoBackButton from \"../components/GoBackButton\"\nimport { useHistory } from \"react-router-dom\"\nimport TopButton from \"../components/TopButton\"\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n    width: 100vw;\n    background-color: var(--page-bg-color);\n\n    // 오늘의 코디\n    .todayCodi {\n        margin: 0 auto;\n        width: 60%;\n        text-align: center;\n        color: #2e2e2e;\n        padding-top: 2vh;\n        border-top: 1px solid #aaa;\n    }\n\n    h2.warning--nodata {\n        color: #c60239;\n        font-size: 3rem;\n        margin: 0 1rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        .todayCodi {\n            margin-top: 2vh;\n            font-weight: bold;\n        }\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n    padding-top: 8vh;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        padding-top: 5vh;\n    }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 80%;\n    max-width: 960px;\n    text-align: center;\n    margin: 0 auto;\n\n    span {\n        font-size: 2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        span {\n            font-size: 1.2rem;\n        }\n    }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n    float: right;\n\n    & .heart {\n        cursor: pointer;\n        color: #aaa;\n    }\n`\n\n// 프로필\nconst Profile = styled.div`\n    width: 60rem;\n    margin: 0 auto;\n    margin-top: 2vh;\n    padding-bottom: 3vh;\n    border-bottom: 1px solid #aaa;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    flex-flow: wrap;\n\n    .profileInfo {\n        display: flex;\n        align-items: center;\n        /* margin-left: 1vh; */\n    }\n    .location {\n        font-size: 1.2rem;\n    }\n    span {\n        margin-left: 1vh;\n    }\n    span.date {\n        font-size: 0.8rem;\n        color: #707b7c;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 594px) {\n        .location {\n            margin-top: 1.2vh;\n            font-size: 1.2rem;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        margin-top: 4vh;\n        span {\n            font-size: 0.5rem;\n        }\n        .location {\n            font-size: 0.5rem;\n        }\n    }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n    border: 1px solid #aaa;\n    width: 4rem;\n    height: 4rem;\n    border-radius: 50%;\n    @media screen and (max-width: 375px) {\n        width: 2rem;\n        height: 2rem;\n    }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n    // 이미지 사이즈(1000*750)\n    // 다시 확인필요\n    width: 60rem;\n    height: 40rem;\n    display: block;\n    margin: 3vh auto;\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n        height: 30rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 80%;\n        height: 18rem;\n    }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n    width: 330px;\n    margin-top: 4vh;\n    display: flex;\n    margin: 0 auto;\n    margin-bottom: 2vh;\n    justify-content: space-between;\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 1vh;\n        margin-bottom: 1vw;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50%;\n        margin-bottom: 3vh;\n    }\n`\n\nconst Icon = styled.img`\n    @media screen and (max-width: 1081px) {\n        width: 4rem;\n    }\n    @media screen and (max-width: 375px) {\n        width: 3rem;\n    }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n    width: 20%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    .warning {\n        display: none;\n    }\n    & p.warning {\n        font-size: 0.9rem;\n        width: 6rem;\n        height: 6rem;\n        text-align: center;\n    }\n\n    img {\n        width: 4rem;\n        height: auto;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 50%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 50vw;\n    }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n    background-color: rgba(255, 255, 255, 0.5);\n    margin: 0 auto;\n    margin-bottom: 5vh;\n    padding: 1rem;\n    width: 60rem;\n\n    p {\n        line-height: 2.5rem;\n        font-size: 1.5rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 70%;\n    }\n    @media screen and (max-width: 375px) {\n        width: 85%;\n        margin-top: 4vh;\n        p {\n            line-height: 1.5rem;\n            font-size: 1rem;\n        }\n    }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n    width: 15rem;\n    margin: 0 auto;\n    padding-bottom: 10vh;\n\n    .button {\n        width: 5rem;\n        height: 3rem;\n        border-radius: 5px;\n        background-color: var(--button-bg-normal);\n        font-size: 1.2rem;\n    }\n    .button2 {\n        margin-left: 5rem;\n    }\n    .button:before {\n        height: 0%;\n        width: 2px;\n    }\n    .button:active {\n        border: none;\n        box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n            inset -4px -4px 6px 0 rgba(255, 255, 255, 0.2),\n            inset 4px 4px 6px 0 rgba(0, 0, 0, 0.4);\n    }\n\n    @media screen and (max-width: 1081px) {\n        .button2 {\n            margin-left: 80px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        width: 40%;\n        display: flex;\n        justify-content: space-between;\n        .button {\n            width: 3rem;\n            height: 2rem;\n            font-size: 1rem;\n        }\n        .button2 {\n            margin-left: 0;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function PostRead() {\n    const history = useHistory()\n    const { readPostId, userInfo, postInfo } = useSelector(\n        (state) => state.itemReducer\n    )\n    console.log(userInfo) //현재접속한 유저\n    console.log(readPostId) //포스트번호\n    console.log(postInfo) //본인것만 보임\n    // console.log(pagePostInfo)\n    const postIds = Number(readPostId)\n    console.log(postIds)\n\n    // postData state 변수\n    const [postData, setPostData] = useState({\n        id: null,\n        post_title: \"\",\n        user_id: \"\",\n        createdAt: \"\",\n        updatedAt: \"\",\n        xLocation: \"\",\n        yLocation: \"\",\n        post_photo: \"\",\n        weather: \"\",\n        wind: \"\",\n        temp: \"\",\n        top_id: \"\",\n        bottom_id: \"\",\n        post_content: \"\",\n        address: \"\",\n    })\n    const [noIdWarning, setNoIdWarning] = useState(\"\")\n\n    // 날짜 처리\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        let hourAndMin = dateObject.toLocaleTimeString(\"en-US\", {\n            hour12: false,\n        })\n        hourAndMin = hourAndMin.slice(0, -3)\n\n        return `${dateOnly} ${hourAndMin}`\n    }\n\n    // 글 불러오기\n    useEffect(() => {\n        function getOnePost(postId) {\n            axios\n                .get(`${url}/readpost`, {\n                    headers: { \"Content-Type\": \"application/json\" },\n                    params: { id: postId },\n                    withCredentials: true,\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    return setPostData((prev) => res.data)\n                    // return res.data;\n                })\n                .catch((err) => console.log(err))\n        }\n\n        let id\n        if (history.location.state) {\n            id = history.location.state.postId\n        } else {\n            id = readPostId\n        }\n\n        if (!id) {\n            console.log(\"**postread: id가 없습니다**\")\n            setNoIdWarning((prev) => \"잘못된 접근입니다.\")\n        } else {\n            getOnePost(id)\n        }\n    }, [])\n\n    // 북마크 상태\n    const [bookmarked, setBookmarked] = useState(false)\n\n    // const [isOpen, setIsOpen] = useState(false);\n    // 게시물 수정\n    const [edit, setEdit] = useState(false)\n    // 게시물 삭제\n    const [removePost, setRemovePost] = useState(false)\n\n    // 게시물 수정\n    const editPost = () => {\n        console.log(\"수정버튼동작확인\")\n        setEdit(true)\n    }\n\n    // 게시물 삭제\n    const deletePost = (e) => {\n        console.log(\"삭제버튼동작확인\")\n        setRemovePost(true)\n    }\n\n    //게시물 수정 yse버튼\n    const editModalYes = () => {\n        axios({\n            url: url + \"/editpost\",\n            method: \"put\",\n            data: {\n                user_id: userInfo.user_id,\n                post_id: postIds,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            alert(res.data)\n            if (res.data === \"게시물의 작성자가 아닙니다.\") {\n                history.push(\"/mypage\")\n            } else {\n                history.push(\"/editpost\")\n            }\n        })\n        setEdit(false)\n    }\n\n    //게시물 삭제 yes버튼\n    const removeModalYes = () => {\n        // console.log('삭제완료')\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        //console.log(token)\n        axios({\n            url: url + \"/deletepost\",\n            method: \"delete\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            data: { post_id: postIds },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            alert(res.data)\n            // alert(\"삭제 완료\")\n            history.push(\"/mypage\")\n        })\n        setRemovePost(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const modalCloseButtonHandler = () => {\n        setRemovePost(false)\n        setEdit(false)\n    }\n\n    const bookmarkHandler = (e) => {\n        console.log(\"글 읽기 - 북마크 버튼 동작 확인\")\n        //눌렀을 때 북마크에 저장\n        //다시 누르면 해제\n        axios({\n            url: url + \"/bookmark\",\n            method: \"post\",\n            data: { user_id: userInfo.id, post_id: postIds },\n            // data: { post_id: postId },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setBookmarked((prev) => !prev)\n            // history.push(\"/bookmark\")\n        })\n        // console.log(e.currentTarget);\n    }\n\n    return (\n        <Outer>\n            {noIdWarning.length !== 0 ? (\n                <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n            ) : (\n                \"\"\n            )}\n            <TopButton />\n            <GoBackButton />\n            <PostHeader className=\"postHeader\">\n                <Title className=\"title\">\n                    <span>{postData.post_title}</span>\n                    <BookmarkIcon\n                        bookmarkHandler={bookmarkHandler}\n                        color={bookmarked ? \"#aaa\" : \"#ED4956\"}\n                    />\n                </Title>\n\n                <Profile className=\"userProfile\">\n                    <div className=\"profileInfo\">\n                        <ProfileImg src={postData.user_Photo} />\n                        <span className=\"nickName\">{postData.nickName}</span>\n                        <span className=\"date\">\n                            {formatDate(postData.updatedAt)}\n                        </span>\n                    </div>\n                    <div>\n                        <p className=\"location\">{postData.address}</p>\n                        {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n                    </div>\n                </Profile>\n            </PostHeader>\n            <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n            <WeatherInfo>\n                {!postData.weather ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n                {!postData.wind ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`}\n                        alt=\"바람아이콘\"\n                    />\n                )}\n                {!postData.temp ? (\n                    \"\"\n                ) : (\n                    <Icon\n                        src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`}\n                        alt=\"날씨아이콘\"\n                    />\n                )}\n            </WeatherInfo>\n\n            {/* 코디가 있을 때, 없을 때 */}\n            {\n                // 코디 3개 없을때\n                (!postData.outer_id || postData.outer_id === \"default\") &&\n                (!postData.top_id || postData.top_id === \"default\") &&\n                (!postData.bottom_id ||\n                    postData.top_id === \"default\") ? null : (\n                    <>\n                        <h2 className=\"todayCodi\">오늘의 코디</h2>\n                        <TodayCodi>\n                            {!postData.outer_id ||\n                            postData.outer_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    겉옷 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`}\n                                    alt=\"겉옷\"\n                                />\n                            )}\n                            {!postData.top_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    상의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`}\n                                    alt=\"상의\"\n                                />\n                            )}\n                            {!postData.bottom_id ||\n                            postData.top_id === \"default\" ? (\n                                <p className=\"warning\">\n                                    하의 데이터가 없습니다\n                                </p>\n                            ) : (\n                                <Icon\n                                    src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`}\n                                    alt=\"하의\"\n                                />\n                            )}\n                        </TodayCodi>\n                    </>\n                )\n            }\n\n            <Post>\n                <p>{postData.post_content}</p>\n            </Post>\n\n            <Buttons>\n                <button\n                    className=\"button button1\"\n                    value=\"delete\"\n                    onClick={deletePost}\n                >\n                    삭제\n                </button>\n                {removePost === false ? null : (\n                    <ModalConfirm\n                        yesHandler={removeModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        삭제하시겠습니까?\n                    </ModalConfirm>\n                )}\n                <button className=\"button button2\" onClick={editPost}>\n                    수정\n                </button>\n                {edit === false ? null : (\n                    <ModalConfirm\n                        yesHandler={editModalYes}\n                        noHandler={modalNoButtonHandler}\n                        closeHandler={modalCloseButtonHandler}\n                    >\n                        수정하시겠습니까?\n                    </ModalConfirm>\n                )}\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation, postInfo, readPostId } = useSelector(\n        (state) => state.itemReducer\n    )\n    // console.log('userId : ',userInfo);\n    // console.log('postInfo : ', postInfo);\n    // console.log('readPostId : ', readPostId);\n    const [postId, setPostId] = useState(readPostId)\n    const [selectWeather, setSelectWeather] = useState() // 날씨\n    const [selectWind, setSelectWind] = useState() // 바람\n    const [selectTemp, setSelectTemp] = useState() // 온도\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    const postIds = Number(readPostId)\n    // console.log('postIds : ', postIds)\n\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 기존 데이터 렌더링\n    useEffect(() => {\n        axios({\n            url: url + `/readpost?searchID=${userInfo.postIds}`,\n            method: \"get\",\n            params: { id: postIds },\n            withCredentials: true,\n        })\n            .then((res) => {\n                console.log(\"res : \", res.data) // 해당 게시물 데이터 들어옴\n                // 제목\n                setTitle(res.data.post_title)\n                // 사진\n                setUploadedImg({ filePath: res.data.post_photo })\n                // 날씨\n                setIsFilteringBtnActive({ [res.data.weather]: true })\n                setIsFilteringBtnActive2({ [res.data.wind]: true })\n                setIsFilteringBtnActive3({ [res.data.temp]: true })\n\n                // 코디\n                setSelectValueOuter(res.data.outer_id)\n                setSelectValueTop(res.data.top_id)\n                setSelectValueBottom(res.data.bottom_id)\n                // 내용\n                setPostText(res.data.post_content)\n            })\n            .catch((err) => console.log(err))\n    }, [])\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/editpost\",\n                method: \"put\",\n                data: {\n                    user_id: userInfo.user_id,\n                    post_id: postId,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0, -4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    user_id: Math.random().toString(36).substr(2, 5),\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: Math.random().toString(36).substr(2, 20),\n                    post_content: Math.random().toString(36).substr(2, 100),\n                    weather: [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드 </Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n    }\n`\n\nexport const HalfPage = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n    & img {\n        margin: 2rem;\n        width: 50vw;\n        height: auto;\n    }\n\n    & p {\n        font-size: 1.5rem;\n        margin: 1rem;\n        line-height: 150%;\n    }\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n        & img {\n            margin: 2rem;\n            width: 95%;\n            height: auto;\n        }\n\n        & p {\n            margin: 2rem;\n            width: 35vw;\n            height: auto;\n        }\n    }\n`\n\nexport const AnimatedP = styled.p`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \"1.5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\n\nexport const AnimatedImg = styled.img`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \".5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\nconst Button = styled.button`\n// width: 140px;\n// height: 45px;\n// font-size: 11px;\n// border:3px solid pink;\nfont-family: 'IBM Plex Sans KR', sans-serif;\n\nfont-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\npadding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\nmargin: 0.5rem;\nborder-radius: 10%;\ncolor: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\nbackground-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\ntext-transform: uppercase;\nletter-spacing: 2.5px;\nfont-weight: 500;\ncolor: #000;\nbackground-color: #fff;\n// border: none;\nborder-radius: 45px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\ntransition: all 0.3s ease 0s;\ncursor: pointer;\noutline: none;\n}\n\n&:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\ntransform: translateY(-4px);\n}\n`\nconst Buttons = styled.button`\n    // height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function One({ delayOne, delayTwo }) {\n    const history = useHistory()\n\n    return (\n        <Contents className={[\"landingPagePart\", \"one\"]}>\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\">\n                    일기 예보가 <br />\n                    믿음직스럽지 못하시다구요?\n                    <br />\n                </AnimatedP>\n                <div className=\"picture-png left\">\n                    <AnimatedImg\n                        src=\"img/firstpage/phone-and-human.png\"\n                        alt=\"human with phone\"\n                    />\n                </div>\n\n                <Buttons>\n                    <Button onClick={() => history.push(\"/map\")}>\n                        시작하기\n                    </Button>\n                </Buttons>\n            </HalfPage>\n\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    동네 주민이 올린 하늘의 사진을 <br />\n                    실시간으로 확인할 수 있어요.\n                    <br />\n                </AnimatedP>\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    여러분도 하늘사진을 공유하고 <br />\n                    동네 날씨예보관이 되어 보세요!\n                </AnimatedP>\n                <div className=\"picture-png right\">\n                    <AnimatedImg\n                        src=\"img/firstpage/town.png\"\n                        alt=\"street\"\n                        delay={delayTwo}\n                    />\n                </div>\n            </HalfPage>\n        </Contents>\n    )\n}\n","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40vw;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\"\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\"\nimport { useHistory } from \"react-router-dom\"\nimport { TwoPictures } from \"./Three\"\nimport styled from \"styled-components\"\n\nconst Button = styled.button`\n// width: 140px;\n// height: 45px;\n// font-size: 11px;\nborder:3px solid pink;\nfont-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\nfont-family: 'IBM Plex Sans KR', sans-serif;\n\npadding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\nmargin: 0.5rem;\nborder-radius: 10%;\ncolor: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\nbackground-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\ntext-transform: uppercase;\nletter-spacing: 2.5px;\nfont-weight: 500;\ncolor: #000;\nbackground-color: #fff;\n// border: none;\nborder-radius: 45px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\ntransition: all 0.3s ease 0s;\ncursor: pointer;\noutline: none;\n}\n\n&:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\ntransform: translateY(-4px);\n}\n`\nconst Buttons = styled.button`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function Four({\n    delayOne,\n    delayTwo,\n    delayThree,\n    delayFour,\n    delayFive,\n}) {\n    const history = useHistory()\n    return (\n        <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n            <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n            <ContentsUnderTitle className=\"contents\">\n                <HalfPage className=\"half-page\">\n                    <AnimatedP className=\"desc\" delay={delayTwo}>\n                        날씨에 따라 코디를 <br />\n                        추천하거나 <br />\n                        코디를 추천 받으세요.\n                    </AnimatedP>\n                    <div className=\"picture-png left\">\n                        <AnimatedImg\n                            src=\"img/firstpage/destination.png\"\n                            alt=\"reading mobile phone map\"\n                            delay={delayThree}\n                        />\n                    </div>\n                </HalfPage>\n                <HalfPage className=\"half-page\">\n                    <TwoPictures className=\"picture-png right\">\n                        <AnimatedImg\n                            src=\"img/firstpage/publish_post.png\"\n                            alt=\"publishing post\"\n                            delay={delayFour}\n                        />\n                        <AnimatedImg\n                            src=\"img/firstpage/among_nature.png\"\n                            alt=\"watching tree\"\n                            delay={delayFour}\n                        />\n                    </TwoPictures>\n                    <AnimatedP className=\"desc\" delay={delayFive}>\n                        날씨에 따라 코디를 추천받거나, <br />\n                        예보글을 작성하여 <br />\n                        적절한 코디를 추천할 수 있어요.\n                        <Buttons>\n                            <Button onClick={() => history.push(\"/map\")}>\n                                시작하기\n                            </Button>\n                        </Buttons>\n                    </AnimatedP>\n                </HalfPage>\n            </ContentsUnderTitle>\n        </TitleAndContents>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { changeUser } from \"../actions/index\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\n\n// 부모요소에 postion: relative 필요함\n// props\n// duration : 따옴표 안에 s(초) 단위로 지정\n// ex) duration={'3s'}\n// 지정하지 않은 경우 기본값 2s\n// 숫자가 작을수록 빨리 돌아간다\n// size : 따옴표 안에 px 단위로 지정\n// ex) size={'30px'}\n// 지정하지 않은 경우 기본값 (가로 === 세로)\n// 모바일 50px\n// 데스크탑 100px\n// hide\n// true -> display: none;\n// false(지정하지 않은 경우 포함) -> display: flex;\n\nconst LoadingContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n    justify-content: center;\n    width: 100vw;\n    min-height: 100vh;\n    background-color: rgba(253, 254, 254, 0.5);\n    // 밝은 회색, opacity 0.3\n    z-index: 300;\n\n    & > img {\n        margin-top: calc(var(--mobile-header-height) + 10vh);\n\n        @media screen and (min-width: 1081px) {\n            margin-top: calc(var(--desktop-header-height) + 10vh);\n        }\n    }\n`\n\nexport default function Loading({ size, duration, hide }) {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n\n    return (\n        <LoadingContainer className=\"loadingContainer\" hide={hide}>\n            <LoadingSpinner size={size} duration={duration} />\n        </LoadingContainer>\n    )\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport One from \"../components/FirstPage/One\"\nimport Two from \"../components/FirstPage/Two\"\nimport Three from \"../components/FirstPage/Three\"\nimport Four from \"../components/FirstPage/Four\"\nimport { changeMapPage } from \"../actions/index\"\nimport React, { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport Loading from \"../pages/Loading\"\nimport Footer from \"../components/Footer\"\n\nconst FirstPageContainer = styled.div`\n    background: linear-gradient(#fff, #fef9ef, #fff5dc, #d7f9ff, #aaf2ff);\n`\n\nconst FooterDiv = styled.div`\n    //모바일\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        //pc\n        display: block;\n    }\n`\n\nexport default function FirstPage() {\n    const dispatch = useDispatch()\n    // console.log(One)\n    // console.log(Two)\n    // console.log(Three)\n    // console.log(Four)\n\n    // let assignedHeight = window.innerHeight * 0.95;\n    // const [ locationY, setLocationY ] = useState(0);\n    // console.log('[스크롤 위치]', Math.floor(locationY));\n    // const scrollHandler = () => {\n    //   setLocationY(window.pageYOffset);\n    // }\n\n    // useEffect(()=>{\n    //   window.addEventListener('scroll', scrollHandler);\n    //   return () => {\n    //     window.removeEventListener('scroll', scrollHandler);\n    //   }\n    // }, []);\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n\n    return (\n        <>\n            {!One && !Two && !Three && !Four ? (\n                <Loading></Loading>\n            ) : (\n                <FirstPageContainer className=\"firstPageWhole\">\n                    <One delayOne={\"1s\"} delayTwo={\"1.2s\"} />\n                    <Two\n                        delayOne={\"2.2s\"}\n                        delayTwo={\"2.5s\"}\n                        delayThree={\"2.6s\"}\n                        delayFour={\"2.7s\"}\n                        delayFive={\"2.8s\"}\n                    />\n                    <Three\n                        delayOne={\"4.0s\"}\n                        delayTwo={\"4.3s\"}\n                        delayThree={\"4.4s\"}\n                        delayFour={\"4.5s\"}\n                        delayFive={\"4.6s\"}\n                    />\n                    <Four\n                        delayOne={\"5.5s\"}\n                        delayTwo={\"5.8s\"}\n                        delayThree={\"5.9s\"}\n                        delayFour={\"6.0s\"}\n                        delayFive={\"6.1s\"}\n                    />\n                    <FooterDiv>\n                        <Footer></Footer>\n                    </FooterDiv>\n                </FirstPageContainer>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { changeCurRoom } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\n\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\nconst socket = io.connect(url)\n\nexport default function Messenger() {\n    const dispatch = useDispatch()\n    const [prevmsg, setprevmsg] = useState([])\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)-hoon\n    const [msgevent, setmsgevent] = useState(\"\")\n    //메시지의 총 집합-hoon\n    const [newMsgSection, setNewMsgSection] = useState([])\n    //방을 새로 개설할때 쓰인다-hoon\n    const [receiver_id, setreceiver_id] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방-hoon\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트-hoon\n    const [joinedRoom, setjoinedRoom] = useState([\"\"])\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    const [recievemessage, setrecievemessage] = useState([])\n    const history = useHistory()\n    console.log(recievemessage)\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)-hoon\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setreceiver_id(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.-hoon\n        const user_id_sort = [userInfo.user_id, receiver_id].sort()\n        // socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n        // setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        //룸네임이 만들어지면 axios로 접속된 목록을 추가하여 데이터 베이스에 저장해주자-hoon\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: receiver_id,\n                roomName: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }\n    //처음에 가지고 있는 참여된 방이 있는지 조회-hoon\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }, [])\n\n    useState(() => {\n        setNewMsgSection([...newMsgSection])\n        setprevmsg([...prevmsg])\n        console.log(newMsgSection)\n    }, [roomInOut, prevmsg, newMsgSection])\n\n    //방을 클릭했을때 방을 입장하게 할 함수-hoon\n    function roomListClick(clickRoomName) {\n        console.log(clickRoomName)\n        // setcurRoom(clickRoomName)\n        dispatch(changeCurRoom(clickRoomName))\n\n        history.push(\"/chatroom\")\n\n        // setRoomInOut(true)\n\n        // //현재 방입장-hoon\n        // // socket.emit(\"enter_room\", clickRoomName)\n        // //방입장시 렌더링 할 메시지를 가져와야한다.\n        // axios({\n        //     url: url + `/chat/messagelist`,\n        //     method: \"post\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //     },\n        //     data: {\n        //         user_id: userInfo.user_id,\n        //         receiver_id: curRoom\n        //             .replace(\"_\", \"\")\n        //             .replace(`${userInfo.user_id}`, \"\"),\n        //         roomName: curRoom,\n        //     },\n        //     withCredentials: true,\n        // }).then((res) => {\n        //     setprevmsg(res.data)\n        // })\n    }\n    // useEffect(() => {\n    //     console.log(curRoom)\n    // }, [curRoom])\n    //채팅방 메시지 글작성 이벤트타겟용 함수\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        }).then((res) =>\n            socket.emit(\"message\", {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                chatcontent: msgevent,\n            })\n        )\n        setmsgevent(\"\")\n    }\n\n    // socket.on(\"newMsg\", (msg2) => {\n    //     // console.log(\"메시지 적용되야됨\")\n    //     //총 메시지리스트를 여기서 업데이트하고있다\n    //     setprevmsg([...msg, msg2])\n    // })\n    // useEffect(() => {\n    //     axios({\n    //         url: url + \"/chat/messagelist\",\n    //         method: \"post\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         data: {\n    //             roomName: curRoom,\n    //             chatcontent: JSON.stringify(msg),\n    //         },\n    //         withCredentials: true,\n    //     }).then((res) => {})\n    //     // .then((res) => console.log(\"글 업데이트 완료\"))\n    // }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n\n    return (\n        <Container className=\"mapcontainer\">\n            <RoomChatDiv>\n                <ProfileName>{userInfo.user_id}</ProfileName>\n                <UserPhotoDiv>\n                    <UserPhotoImg src={userInfo.user_Photo} />\n                </UserPhotoDiv>\n                <FriendInputAndBtn>\n                    <FriendInput\n                        onChange={(e) => roomNamefunc(e)}\n                        placeholder=\"친구 ID\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={roomNameSubmit}\n                                icon={faPlusSquare}\n                            />\n                        </Button>\n                    </Buttons>\n                </FriendInputAndBtn>\n                <RoomList>\n                    <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                    {joinedRoom.map((el) => (\n                        <FriendListDiv onClick={() => roomListClick(el)}>\n                            {el\n                                .replace(\"_\", \"\")\n                                .replace(`${userInfo.user_id}`, \"\")}\n                        </FriendListDiv>\n                    ))}\n                </RoomList>\n            </RoomChatDiv>\n        </Container>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space/api\"\n}\nconst socket = io.connect(url)\n\nexport default function Messenger2() {\n    // const dispatch = useDispatch()\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n    //방을 새로 개설할때 쓰인다\n    const [roomName, setroomName] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방\n    //메시지의 총 집합\n    const [msg, setmsg] = useState([\"\"])\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)\n    const [msgevent, setmsgevent] = useState(\"\")\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트\n    const [joinedRoom, setjoinedRoom] = useState([])\n    const history = useHistory()\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setroomName(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.\n        const user_id_sort = [userInfo.user_id, roomName].sort()\n        socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n        //axios로 접속된 목록을 추가하여 데이터 베이스에 저장하는데, 유즈이펙트로, 변화가 있을때만 저장한다.\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                opponent: roomName,\n                roomlist: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setjoinedRoom(res.data)\n        })\n    }\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => setjoinedRoom(res.data))\n    }, [])\n\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        socket.emit(\"enter_room\", clickRoomName)\n        setcurRoom(clickRoomName)\n\n        axios({\n            url: url + `/chat/messagelist?roomlist=${clickRoomName}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setmsg(res.data)\n        })\n    }\n\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    function msgSubmit() {\n        socket.emit(\n            \"newMsg\",\n            `${userInfo.user_id} : ` + msgevent,\n            curRoom,\n            () => {\n                // console.log(\"메시지추가 찍혀라\")\n                setmsg([...msg, `${userInfo.user_id} : ` + msgevent])\n            }\n        )\n    }\n    // socket.on(\"newMsg\", setmsg([msg, ...msg]))\n\n    // socket.on(\"welcome\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 방에 들어왔습니다\", ...msg])\n    // })\n    // socket.on(\"bye\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 나갔습니다\", ...msg])\n    // })\n    socket.on(\"newMsg\", (msg2) => {\n        // console.log(\"메시지 적용되야됨\")\n        //총 메시지리스트를 여기서 업데이트하고있다\n        setmsg([...msg, msg2])\n    })\n    useEffect(() => {\n        axios({\n            url: url + \"/chat/messagelist\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                roomlist: curRoom,\n                chatcontent: JSON.stringify(msg),\n            },\n            withCredentials: true,\n        }).then((res) => {})\n        // .then((res) => console.log(\"글 업데이트 완료\"))\n    }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el.split(\"_\").indexOf(userInfo.user_id) === 0\n                                    ? el.split(\"_\")[1]\n                                    : el.split(\"_\")[0]}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {msg.map((el) => {\n                            return <div>{el}</div>\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    /* justify-content: space-around; */\n    justify-content: start;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    /* background-color: var(--button-bg-normal); */\n    background-color: #fec0cb;\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n    border: 0;\n    outline: 0;\n    color: white;\n\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        /* justify-content: flex-start; */\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst WriteText = styled.div`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"5vh\")};\n    text-align: center;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    /* margin: 2rem 1rem 4rem; */\n    margin: 1.5rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\n\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #fec0cb;\n    border-radius: 1rem;\n    &:hover {\n        background-color: #ff7f9f;\n    }\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios({\n            url: url + \"/edituserinfo\",\n            method: \"put\",\n            data: {\n                location: userRoadAddress,\n                user_photo: uploadedImg.filePath,\n            },\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${token}`,\n            },\n            withCredentials: true,\n        })\n            .then((res) => {\n                alert(\"변경 완료, 로그아웃 후 확인해주세요:)\")\n                history.push(\"/home\")\n                console.log(res.data)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url.slice(0,-4)}/image/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <WriteText>프로필 사진</WriteText>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <WriteText>사는곳</WriteText>\n                <DaumPostcode onComplete={handleComplete} />\n                <ValidationListBox className=\"pwValidationList\">\n                    {userRoadAddress}\n                </ValidationListBox>\n                <Button className=\"submitButton\" onClick={submitButtonHandler}>\n                    등록\n                </Button>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport io from \"socket.io-client\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeNewMsgSection } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\n\nconst MeDiv = styled.div`\n    // border-bottom: 1px solid green;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: right;\n\n    overflow: auto;\n`\nconst YouDiv = styled.div`\n    // border-bottom: 1px solid black;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: left;\n\n    overflow: auto;\n`\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space/api\"\nconst socket = io.connect(url)\n\nexport default function ChatRoom() {\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const { userInfo, curRoom, newMsgSection } = useSelector(\n        (state) => state.itemReducer\n    )\n    const [prevmsg, setprevmsg] = useState([])\n    // const [newMsgSection, setNewMsgSection] = useState([])\n    const [msgevent, setmsgevent] = useState(\"\")\n\n    console.log(curRoom)\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg, newMsgSection])\n    // }, [newMsgSection])\n\n    // recievemessage = prevmsg\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg])\n    // }, [recievemessage])\n    // let recievemessage = function (msgobj) {\n    function recievemessage(msgobj) {\n        // this.setState({\n        //     messages:[...this.state.messages,messageobject]\n        // })\n        dispatch(changeNewMsgSection([msgobj]))\n    }\n    /////////////메시지를 받았을때/////\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n        socket.on(\"sendmsg\", (msgobj) =>\n            // setNewMsgSection([...newMsgSection, msgobj])\n            {\n                console.log(newMsgSection)\n                console.log(msgobj)\n                // return dispatch(changeNewMsgSection([...newMsgSection, msgobj]))\n                recievemessage({\n                    user_id: msgobj.receiver_id,\n                    receiver_id: msgobj.user_id,\n                    chatcontent: msgobj.chatcontent,\n                })\n            }\n        )\n    }, [])\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n    }, [])\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        const user_id = userInfo.user_id\n        const receiver_id = curRoom\n            .replace(\"_\", \"\")\n            .replace(`${userInfo.user_id}`, \"\")\n\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        })\n        // .then((res) =>\n        socket.emit(\"message\", {\n            user_id: user_id,\n            receiver_id: receiver_id,\n            // user_id: curRoom\n            //     .replace(\"_\", \"\")\n            //     .replace(`${userInfo.user_id}`, \"\"),\n            // receiver_id: userInfo.user_id,\n\n            chatcontent: msgevent,\n        })\n        // )\n        setmsgevent(\"\")\n        console.log(prevmsg)\n        console.log(newMsgSection)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            <GoBackButton>\n                <FontAwesomeIcon\n                    icon={faChevronLeft}\n                    className=\"fa-fw\"\n                    color=\"#ACB5BD\"\n                    onClick={() => history.push(\"/messenger\")}\n                />\n            </GoBackButton>\n            <ChatList>\n                <div>{\"채팅창\"}</div>\n            </ChatList>\n            {prevmsg.map((el) => {\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            {newMsgSection.map((el) => {\n                console.log(el)\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            <input\n                onChange={(e) => msgfunc(e)}\n                placeholder=\"메시지\"\n                required\n                type=\"text\"\n                value={msgevent}\n            />\n            <Buttons>\n                <Button>\n                    <FontAwesomeIcon onClick={msgSubmit} icon={faPaperPlane} />\n                </Button>\n            </Buttons>\n        </Container>\n    )\n}\n","// 아이디 찾기 모달\nimport React from 'react';\nimport styled from \"styled-components\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`\nconst Popup = styled.div`\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n  text-align: center;\n\n`\nconst Div1 = styled.div`\n  margin: 1rem auto 0 auto;\n  height: 3rem;\n  width: 90%;\n  text-align: end;\n  button {\n    border: 1px solid black;\n    height: 2rem;\n    width: 2rem;\n    border-radius: 10px;\n  }\n`\nconst Div2 = styled.div`\n  line-height: 2rem;\n  margin: 2rem 0;\n  p {\n    font-size: 1.3rem;\n  }\n  #info {\n    font-size: 1rem;\n  }\n`\nconst Div3 = styled.div`\n  button {\n    font-size: 1.2rem;\n    height: 3rem;\n    padding: 0 1rem;\n    background-color: pink;\n    border-radius: 10px;\n    &:hover {\n      background-color: #ff7f9f;\n      color: white;\n    }\n  }\n`\n\nexport default function FindAccountModal({closeBtn, loginBtn, userId, userNickName}) {\n  const loginButtonClick = () => {\n    loginBtn();\n  }\n  const closeButtonClick = () => {\n    closeBtn();\n  }\n\n  return (\n    <Outer>\n      <Popup>\n        <Div1><button onClick={closeButtonClick}>X</button></Div1>\n        <Div2>\n          <p>인증이 완료되었습니다.</p>\n          <p id=\"info\">\n            {userNickName}님의 아이디는 {userId} 입니다.\n          </p>\n        </Div2>\n        <Div3 >\n          <button onClick={loginButtonClick}>로그인하러가기</button>\n        </Div3>\n      </Popup>\n    </Outer>\n  )\n}","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\nimport FindAccountModal from \"../components/FindAccountModal\"\n\nconst Outer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nconst Form = styled.div`\n    width: 400px;\n    height: auto;\n    margin: 4rem auto 0 auto;\n\n    #title {\n        font-size: 1.5rem;\n    }\n`\n\nconst Div1 = styled.div`\n    margin-bottom: 2rem;\n    text-align: center;\n`\nconst Div2 = styled.div`\n    ul {\n        list-style: none;\n    }\n    li {\n        margin: 1rem 0;\n        display: flex;\n        padding: 0.5rem 0;\n    }\n    p {\n        width: 100px;\n    }\n    input {\n        width: 200px;\n    }\n    button {\n        margin-left: 1rem;\n        width: 4rem;\n        background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n        }\n    }\n`\nconst Button = styled.button`\n    display: block;\n    margin: 2rem auto 0 auto;\n    width: 7rem;\n    height: 2rem;\n    font-size: 1rem;\n    background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function FindAccount(){\n    const history = useHistory()\n    const dispatch = useDispatch()\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n\n    const [inputFindInfo, setInputFindInfo] =  useState({\n        findNickName: \"\",\n        authEmail: \"\",\n        authCode: \"\",\n    })\n    \n    // 모달창\n    const [isOpen, setIsOpen] = useState(false)\n    \n    const [userData, setUserData] = useState({\n        nickName: \"\",\n        user_id: \"\"\n    })\n\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n\n    const ChangeHanlder = (key) => (e) => {\n        setInputFindInfo({\n            ...inputFindInfo,\n            [key]: e.target.value,\n        })\n    }\n\n    function sendEmail() {\n      //console.log(\"이메일 전송 버튼\")\n      if(inputFindInfo.findNickName && !inputFindInfo.authCode){\n        axios({\n          url: url + \"/findid\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: {\n            temporary_id: inputFindInfo.findNickName,\n            email: inputFindInfo.authEmail\n          },\n          withCredentials: true\n        })\n        .then((res) => {\n            //console.log(res)\n            if(res.data === \"no results\"){\n                alert(\"가입된 정보가 아닙니다.\")\n            }\n            else if(res.data.status === \"success\"){\n                alert(\"인증메일을 발송하였습니다. 50초내로 확인해주세요:)\")\n            }else{\n                alert(\"인증메일 발송에 실패하였습니다.\")\n            }   \n        })\n      }else{\n        alert(\"닉네임과 이메일을 입력해주세요.\")\n      }\n    }\n\n    function verification() {\n      //console.log(\"인증코드 버튼\")\n      axios({\n        url: url + \"/users/auth\",\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\", \n        },\n        data: {\n          temporary_id: inputFindInfo.findNickName,\n          email: inputFindInfo.authEmail,\n          code: inputFindInfo.authCode\n        },\n        withCredentials: true\n      })\n      .then((res) => {\n        console.log(res.data)\n        if(res.data === true){ \n            alert(\"메일 인증 되었습니다.\")\n        }else{\n            alert(\"인증코드가 맞지 않습니다. 다시 확인해주세요:)\")\n        }\n      })\n    }\n\n    function findAccountId() {\n      //console.log(\"아이디 찾기 버튼\")\n\n      if(inputFindInfo.findNickName && inputFindInfo.authEmail && inputFindInfo.authCode){\n        //console.log(\"두둥\")\n        axios({\n            url: url + \"/findaccount\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            data: {\n              nickName: inputFindInfo.findNickName,\n              email: inputFindInfo.authEmail,\n            },\n            withCredentials: true\n        })\n        .then((res) => {\n            //닉네임, 아이디가 콘솔에 찍힙니닷 \n            console.log(\"헤이헤이\",res.data)\n            return setUserData((prev) => res.data) \n            // alert(res.data.nickName)\n        })\n        setIsOpen(true)\n       }else{\n           alert(\"위 모두 사항을 입력해주세요.\")\n       }\n\n      //닉네임, 이메일, 인증코드가 모두 채워져 있으면 함수를 실행하게함\n      //악시오스 요청으로 아이디찾기 백엔드로 보내서 -> 닉네임, 이메일, 인증코드 확인하기\n       \n    }\n\n    const closeModal = () => {\n        setIsOpen(false)\n    }\n    const loginBtn = () => {\n        history.push(\"/login\")\n    }\n\n    return (\n        <Outer>\n            <Form>\n                <Div1>\n                    <p id=\"title\">아이디 찾기</p>\n                    <p>이메일 인증</p>\n                </Div1>\n\n                <Div2>\n                    <ul>\n                        <li>\n                            <p>닉네임</p>\n                            <input type=\"text\" onChange={ChangeHanlder(\"findNickName\")}></input>\n                        </li>\n                        <li>\n                            <p>이메일</p>\n                            <input type=\"text\" placeholder=\"ex) kimcoding@gmail.com\" onChange={ChangeHanlder(\"authEmail\")}></input>\n                            <button onClick={sendEmail}>인증요청</button>\n                        </li>\n                        <li>\n                            <p>인증코드</p>\n                            <input type=\"text\" onChange={ChangeHanlder(\"authCode\")}></input>\n                            <button onClick={verification}>인증하기</button>\n                        </li>\n                    </ul>\n                </Div2>\n                <Button onClick={findAccountId}>아이디 찾기</Button>\n                { isOpen? \n                    (<FindAccountModal\n                        closeBtn={closeModal}\n                        loginBtn={loginBtn}\n                        userId={userData.user_id}\n                        userNickName={userData.nickName}\n                    />\n                    ) \n                    : null\n                }\n                \n            </Form>\n        </Outer>\n    )\n}","// 비밀번호 찾기 모달\nimport React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`\nconst Popup = styled.div`\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n  text-align: center;\n\n`\nconst Div1 = styled.div`\n  margin: 1rem auto 0 auto;\n  height: 2rem;\n  width: 90%;\n  text-align: end;\n`\nconst Div2 = styled.div`\n  p {\n    font-size: 1.3rem;\n  }\n\n  #info {\n    font-size: 1rem;\n  }\n`\nconst Div3 = styled.div`\n  margin: 1rem 0;\n  input {\n    margin: 0 auto 1rem auto;\n    display: block;\n  }\n  p {\n    font-size: 0.8rem;\n  }\n`\nconst Div4 = styled.div`\n`\nconst Button = styled.button`\n  font-size: 1.2rem;\n  height: 3rem;\n  padding: 0 1rem;\n  background-color: pink;\n  border-radius: 10px;\n  &:hover {\n    background-color: #ff7f9f;\n    color: white;\n  }\n`\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst ValidationMsg = styled.ul`\n  list-style: none;\n  font-size: 0.7rem;\n  \n  li{\n    color: red;\n  }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function FindPwModal({closeBtn, userId, userEmail}) {\n  const history = useHistory()\n  if (!url) {\n    url = \"https://thereweather.space/api\"\n  }\n\n  // 모달창 닫기\n  const closeButtonClick = () => {\n    closeBtn();\n  }\n\n  const [inputNewPw, setInputNewPw] = useState({\n    newPw: \"\",\n    againPw: \"\",\n  });\n\n  const [pwCheckInput, setPwCheckInput] = useState(\"\");\n  // const [pwCheckInput, setPwCheckInput] = useState({\n  //   checkPw: \"\", DoubleCheckPw:\"\"\n  // });\n\n  const [inputVaildMessage, setInputVaildMessage] = useState({\n    newPw: \"변경할 패스워드를 입력하세요.\",\n    again: \"패스워드를 재입력해주세요.\",\n  });\n\n  const [pwCheckInputMessage, setPwCheckInputMessage] =\n  useState(\"패스워드를 다시 입력하세요.\");\n\n  const ChangeHanlderPw = (key) => (e) => {\n    setInputNewPw({\n      ...inputNewPw,\n      [key]: e.target.value\n    })\n  }\n\n  function findAccountPw() {\n    if(!inputNewPw.newPw && !inputNewPw.againPw){\n      alert(\"비밀번호를 입력해주세요.\")\n    }\n    else if(inputNewPw.newPw && inputNewPw.againPw){\n      axios({\n        url: url + \"/findpassword\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: {\n          user_id: userId,\n          email: userEmail,\n          password: inputNewPw.againPw\n        },\n          withCredentials: true\n        })\n        .then((res) => { \n          // console.log(\"헤이헤이\",res.data)\n          alert(\"변경되었습니다. 다시 로그인해주세요:)\")\n          history.push(\"/login\")\n        })\n    }\n    }\n\n  //비밀번호 유효성 검사 추가 -> 최소 6자 이상 및 알파벳과 숫자 및 특수문자(@$!%*#?&)는 한 개 이상 포함\n   function strongPassword(str) {\n    return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(str);\n   }\n   // 비밀번호 입력 같은지 확인\n   function isMatch (pwd1, pwd2) {\n    return pwd1 === pwd2\n   }\n  \n   useEffect(() => {\n     if(strongPassword(inputNewPw.newPw)){\n      console.log(\"new password\")\n      setInputVaildMessage({...inputVaildMessage, newPwMsg: \"\"})\n     }\n     else {\n      setInputVaildMessage({...inputVaildMessage, newPwMsg: \"알파벳, 숫자 포함, 특수문자(@$!%*#?&) 1개 이상 포함하는 6글자입니다.\"})\n     }\n \n     if(isMatch(inputNewPw.newPw, inputNewPw.againPw) && inputNewPw.againPw.length === 0){\n      setPwCheckInputMessage(\"패스워드를 재입력해주세요.\")\n     }else if(isMatch(inputNewPw.newPw, inputNewPw.againPw)){\n      setPwCheckInputMessage(\"\")\n     }else{\n       setPwCheckInputMessage(\"비밀번호가 일치하지 않습니다.\")\n     }\n   }, [inputNewPw.newPw, inputNewPw.againPw]);\n  \n  //  const ChangeHanlderAgainPw = (e) => {\n  //   setPwCheckInput(e.target.value);\n  // };\n\n  // const ChangeHanlderAgainPw = (key) =>(e) => {\n  //   setPwCheckInput({ ...pwCheckInput, [key]: e.target.value });\n  // };\n  \n\n\n  return (\n    <Outer>\n      <Popup>\n        <Div1><button onClick={closeButtonClick}>X</button></Div1>\n        <Div2>\n          <p>인증이 완료되었습니다.</p>\n          <p id=\"info\">새로운 비밀번호를 입력해주세요.</p>\n        </Div2>\n        <Div3>\n        <StyledArticle>\n          <ValidationMsg>\n        {/* 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함 */}\n          <input type=\"password\" placeholder=\"비밀번호 입력\" onChange={ChangeHanlderPw(\"newPw\")}></input>\n          <li>{inputVaildMessage.newPwMsg}</li>\n          <input type=\"password\" placeholder=\"비밀번호 재입력\" onChange={ChangeHanlderPw(\"againPw\")}></input>\n          <li>{pwCheckInputMessage}</li> \n          </ValidationMsg>\n        </StyledArticle>\n        </Div3>\n        <Div4>\n          <Button onClick={findAccountPw}>비밀번호 변경</Button>\n        </Div4>\n      \n      </Popup>\n    </Outer>\n  )\n}","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\nimport FindPwModal from \"../components/FindPwModal\"\n\nconst Outer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nconst Form = styled.div`\n    width: 400px;\n    height: auto;\n    margin: 4rem auto 0 auto;\n\n    #title {\n        font-size: 1.5rem;\n\n    }\n`\n\nconst Div1 = styled.div`\n    margin-bottom: 2rem;\n    text-align: center;\n`\nconst Div2 = styled.div`\n    ul {\n        list-style: none;\n    }\n    li {\n        margin: 1rem 0;\n        display: flex;\n        padding: 0.5rem 0;\n    }\n    p {\n        width: 100px;\n    }\n    input {\n        width: 200px;\n    }\n    button {\n        margin-left: 1rem;\n        width: 4rem;\n        background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n        }\n    }\n`\nconst Button = styled.button`\n    display: block;\n    margin: 2rem auto 0 auto;\n    width: 8rem;\n    height: 2rem;\n    font-size: 1rem;\n    background-color: pink;\n        &:hover {\n            background-color: #ff7f9f;\n            color: white;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function FindPassword(){\n    const history = useHistory()\n    const dispatch = useDispatch()\n    if (!url) {\n        url = \"https://thereweather.space/api\"\n    }\n    const [isOpen, setIsOpen] = useState(false)\n    \n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    \n    const closeModal = () => {\n        setIsOpen(false)\n    }\n\n    const [inputFindInfo, setInputFindInfo] = useState({\n        findId: \"\",\n        authEmail: \"\",\n        authCode: \"\",\n    })\n\n    const [userData, setUserData] = useState({\n        user_id: \"\",\n        email: \"\"\n    })\n    \n    const ChangeHanlder = (key) => (e) => {\n        setInputFindInfo({\n            ...inputFindInfo,\n            [key]: e.target.value\n        })\n    }\n    \n    function sendEmail() {\n        //console.log(\"이메일 전송 버튼\")\n        if(inputFindInfo.findId && !inputFindInfo.authCode){\n          axios({\n            url: url + \"/users/findpw\",\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: {\n              temporary_id: inputFindInfo.findId,\n              email: inputFindInfo.authEmail\n            },\n            withCredentials: true\n          })\n          .then((res) => {\n              // console.log(\"이메일전송버튼 누르면\",res.data.user_id)\n              // console.log(res); // user id, email 들어옴\n              if(res.data === \"no results\"){\n                  alert(\"가입된 정보가 아닙니다.\")\n              }\n              else if(res.status === 200){\n                  alert(\"인증메일을 발송하였습니다. 50초내로 확인해주세요:)\")\n                  return setUserData((prev) => res.data)  // setState\n              }\n              else{\n                  alert(\"인증메일 발송에 실패하였습니다.\")\n              }   \n          })\n        }else{\n          alert(\"닉네임과 이메일을 입력해주세요.\")\n        }\n      }\n\n      function verification() {\n        //console.log(\"인증코드 버튼\")\n        axios({\n          url: url + \"/users/auth\",\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\", \n          },\n          data: {\n            temporary_id: inputFindInfo.findId,\n            email: inputFindInfo.authEmail,\n            code: inputFindInfo.authCode\n          },\n          withCredentials: true\n        })\n        .then((res) => {\n        //   console.log(res.data)\n          if(res.data === true){ \n              alert(\"메일 인증 되었습니다.\")\n          }else{\n              alert(\"인증코드가 맞지 않습니다. 다시 확인해주세요:)\")\n          }\n        })\n      }\n      \n\n      function setNewPassword() {\n        // console.log(\"비밀번호 찾기 버튼\")\n        if(!inputFindInfo.findId && !inputFindInfo.authEmail && !inputFindInfo.authCode){\n          alert(\"위 사항을 모두 입력해주세요.\")\n        }else{\n          setIsOpen(true)   \n        }\n    }\n\n    return (\n        <Outer>\n            <Form>\n                <Div1>\n                    <p id=\"title\">비밀번호 찾기</p>\n                    <p>이메일 인증</p>\n                </Div1>\n\n                <Div2>\n                    <ul>\n                        <li>\n                            <p>아이디</p>\n                            <input type=\"text\" placeholder=\"ex) kimcoding\" onChange={ChangeHanlder(\"findId\")}></input>\n                        </li>\n                        <li>\n                            <p>이메일</p>\n                            <input type=\"text\" placeholder=\"ex) kimcoding@gmail.com\" onChange={ChangeHanlder(\"authEmail\")}></input>\n                            <button onClick={sendEmail}>인증요청</button>\n                        </li>\n                        <li>\n                            <p>인증코드</p>\n                            <input type=\"text\" onChange={ChangeHanlder(\"authCode\")}></input>\n                            <button onClick={verification}>인증하기</button>\n                        </li>\n                    </ul>\n                </Div2>\n                <Button \n                  onClick={setNewPassword}  /* 모달창열기 */\n                >비밀번호 재설정</Button>\n                {isOpen? \n                  <FindPwModal \n                    closeBtn={closeModal}\n                    userId={userData.user_id}\n                    userEmail={userData.email}\n                  />\n                : null\n                }\n            </Form>\n        </Outer>\n    )\n}","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box;   \n}\n\nbody { \n  font-family: 'IBM Plex Sans KR', sans-serif;\n  }\n  \n`\n\nexport default GlobalStyle\n","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport ReadBookMarkPost from \"./pages/ReadBookMarkPost\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport Messenger from \"./pages/Messenger\"\nimport Messenger2 from \"./pages/Messenger2\"\nimport Loading from \"./pages/Loading\"\nimport EditUserInfo from \"./pages/EditUserInfo\"\nimport ChatRoom from \"./pages/ChatRoom\"\nimport Footer from \"../src/components/Footer\"\nimport FindAccount from \"./pages/FindAccount\"\nimport FindPassword from \"./pages/FindPassword\"\nimport { changeIsLogin, changeUser } from \"./actions/index\"\nimport GlobalStyle from \"./components/GlobalStyle\"\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nif (!url) {\n  url = \"https://thereweather.space/api\";\n}\n\nexport default function App() {\n    const dispatch = useDispatch()\n    const isInput = true\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        //console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                //console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <GlobalStyle />\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/edituserinfo\">\n                    <EditUserInfo></EditUserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/readpost\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/bookmarkpost\">\n                    <ReadBookMarkPost></ReadBookMarkPost>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/Messenger\">\n                    <Messenger />\n                </Route>\n                <Route exact path=\"/Messenger2\">\n                    <Messenger2 />\n                </Route>\n                <Route exact path=\"/loading\">\n                    <Loading />\n                </Route>\n                <Route exact path=\"/chatroom\">\n                    <ChatRoom />\n                </Route>\n\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/first\" />\n                </Route>\n                <Route exact path=\"/findaccount\">\n                    <FindAccount></FindAccount>\n                </Route>\n                <Route exact path=\"/findpassword\">\n                    <FindPassword></FindPassword>\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n  //만드신 변수는 어떤 변수인지 설명 부탁드려요-hoon\n  isLogin: false, //로그인상태 -hoon\n  genderToggle: 1, //기본값 1, 회원가입시에 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n  curLocation: { lat: \"\", lon: \"\" }, //현재 위치 변수-hoon\n  userInfo: {}, //회원 로그인시 정보 저장할 변수-hoon\n  weatherFilter: \"\", //헤더에서 날씨 필터에서 선택된 날씨-hoon\n  mapPage: false, //헤더에서 날씨필터 없애기용 변수-hoon\n  curRoom: null, //메신져에서 방입장시 사용할 변수-hoon\n  curPage: 1,\n  newMsgSection: [\n    // {\n    //     user_id: \"\",\n    //     receiver_id: \"\",\n    //     roomName: \"\",\n    // },\n  ], //메신져기능에서 새로운 메시지를 렌더링할 변수\n  searchWord: \"\",\n  selectWord: \"\",\n  editPassword: false,\n  start: 0, //북마크 페이지네이션\n  end: 10,\n  current: 1,\n  item: [], //기상청 데이터\n  postInfo: {}, //post 정보\n  readPostId: \"\", // 북마크나 지도 모달에서 클릭한 게시물의 아이디\n  homePost: [], // Home의 최근 게시물\n};\n","import {\n  CHANGE_SEARCH_WORD,\n  CHANGE_SELECT_WORD,\n  CHANGE_USER_INFO,\n  CHANGE_USER_GENDER,\n  CHANGE_IS_LOGIN,\n  UPDATE_CURRENT_PAGE,\n  UPDATE_START_END_PAGE,\n  CHANGE_USER_PW,\n  CHANGE_CUR_LOCATION,\n  UPDATE_WEATHERINFO,\n  UPDATE_USER_POST,\n  UPDATE_POST_ID,\n  CHANGE_WHEATER_FILTER,\n  CHANGE_MAP_PAGE,\n  CHANGE_CURROOM,\n  CHANGE_NEWMSGSECTION,\n  CURPAGE,\n} from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst itemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CURPAGE:\n      return {\n        ...state,\n        curPage: action.payload.curPage,\n      };\n    case CHANGE_NEWMSGSECTION:\n      return {\n        ...state,\n        newMsgSection: action.payload.newmsg,\n      };\n    case CHANGE_CURROOM:\n      return {\n        ...state,\n        curRoom: action.payload.room,\n      };\n    case CHANGE_USER_INFO:\n      return {\n        ...state,\n        userInfo: action.payload,\n      };\n    // 새로운기능은 위의 양식으로 아래쪽에 만들어서 쓸수있다.-hoon\n\n    case CHANGE_USER_GENDER:\n      return {\n        ...state,\n        genderToggle: action.payload,\n      };\n\n    case UPDATE_CURRENT_PAGE:\n      return {\n        ...state,\n        current: action.payload,\n      };\n\n    case UPDATE_START_END_PAGE:\n      return {\n        ...state,\n        start: action.payload.start,\n        end: action.payload.end,\n      };\n\n    case CHANGE_IS_LOGIN:\n      return {\n        ...state,\n        isLogin: action.payload,\n      };\n\n    case CHANGE_USER_PW:\n      return {\n        ...state,\n        editPassword: action.payload,\n      };\n\n    case CHANGE_SEARCH_WORD:\n      return {\n        ...state,\n        searchWord: action.payload,\n      };\n\n    case CHANGE_SELECT_WORD:\n      return {\n        ...state,\n        selectWord: action.payload,\n      };\n\n    case CHANGE_CUR_LOCATION:\n      return {\n        ...state,\n        curLocation: action.payload,\n      };\n    case UPDATE_WEATHERINFO:\n      return {\n        ...state,\n        item: action.payload,\n      };\n\n    case UPDATE_USER_POST:\n      return {\n        ...state,\n        postInfo: action.payload,\n      };\n\n    case UPDATE_POST_ID:\n      return {\n        ...state,\n        readPostId: action.payload,\n      };\n    case CHANGE_WHEATER_FILTER:\n      return {\n        ...state,\n        weatherFilter: action.payload,\n      };\n    case CHANGE_MAP_PAGE:\n      return {\n        ...state,\n        mapPage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n\r\nexport default store\r\n","/* eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}